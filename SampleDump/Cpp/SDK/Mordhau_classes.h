#pragma once

// Name: Mordhau, Version: Patch23


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Mordhau.RconCommand
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class URconCommand : public UObject
{
public:
	struct FRconCommandInfo                            CommandInfo;                                               // 0x0028(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bLogCommandUsage;                                          // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CGI3[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RconCommand");
		return ptr;
	}



	bool SendResponse(class UPlayFabJsonObject* ResponseObject, int ClientId, int PacketId);
	class UPlayFabJsonObject* RequestInfo(int ClientId, int PacketId);
	bool ExecuteCommand(const struct FString& CommandType, class UPlayFabJsonObject* InCommand, int ClientId, int PacketId);
	bool CanExecuteCommand(const struct FString& CommandType, class UPlayFabJsonObject* InCommand, int ClientId, int PacketId);
};

// Class Mordhau.AdminListCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminListCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AdminListCommand");
		return ptr;
	}



};

// Class Mordhau.AdvancedCharacter
// 0x0630 (FullSize[0x0AE8] - InheritedSize[0x04B8])
class AAdvancedCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData_E4CA[0x8];                                     // 0x04B8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_ZPNS[0x20];                                    // 0x04C0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APlayerState>                 LastPlayerState;                                           // 0x04E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TPY6[0x14];                                    // 0x04E8(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMordhauPlayerController>     InstanceOwner;                                             // 0x04FC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDead;                                                   // 0x0504(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRagdollFalling;                                         // 0x0505(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MQA2[0x2];                                     // 0x0506(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollFallingFromPerchRadius;                             // 0x0508(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsBurningSmoothed;                                         // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceIntoFireFieldSmoothed;                             // 0x0510(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceIntoFireField;                                     // 0x0514(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceIntoSmokeFieldSmoothed;                            // 0x0518(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceIntoSmokeField;                                    // 0x051C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValue;                                               // 0x0520(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WPCV[0x4];                                     // 0x0524(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               OriginalMesh;                                              // 0x0528(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterDied;                                           // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTakeDamage;                                              // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UPBO[0x8];                                     // 0x0550(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterDestroyed;                                      // 0x0558(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTornOff;                                                 // 0x0568(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUnPossessed;                                             // 0x0578(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChangedTeam;                                             // 0x0588(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterBecomeViewTarget;                               // 0x0598(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterEndViewTarget;                                  // 0x05A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N5NV[0x30];                                    // 0x05B8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                UniqueAdvancedCharacterIndex;                              // 0x05E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothedTurnValue;                                    // 0x05EC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothingTurnVelocity;                                // 0x05F0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothedLookUpValue;                                  // 0x05F4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothingLookUpVelocity;                              // 0x05F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_05EZ[0x4];                                     // 0x05FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPrePhysTickFunction                        PrePhysTickFunction;                                       // 0x0600(0x0030) (NativeAccessSpecifierPublic)
	float                                              LODDeltaTime;                                              // 0x0630(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LateLODDeltaTime;                                          // 0x0634(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DTMY[0x28];                                    // 0x0638(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Team;                                                      // 0x0660(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableOverlapsIfClientNotViewTarget;                     // 0x0661(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KP18[0x6];                                     // 0x0662(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTagSystemComponent*                         TagSystemComponent;                                        // 0x0668(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDismemberableComponent*                     DismemberableComponent;                                    // 0x0670(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEquipmentSystemComponent*                   EquipmentSystemComponent;                                  // 0x0678(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDriverComponent*                            DriverComponent;                                           // 0x0680(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMotionSystemComponent*                      MotionSystemComponent;                                     // 0x0688(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerkSystemComponent*                        PerkSystemComponent;                                       // 0x0690(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionSystemComponent*                 InteractionSystemComponent;                                // 0x0698(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterVoiceComponent*                    CharacterVoiceComponent;                                   // 0x06A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaminaStatComponent*                       StaminaStatComponent;                                      // 0x06A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageableComponent*                        DamageableComponent;                                       // 0x06B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHealthStatComponent*                        HealthStatComponent;                                       // 0x06B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UThudderComponent*                           BodyThudder;                                               // 0x06C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FootstepAudioComponentCount;                               // 0x06C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C2SG[0x4];                                     // 0x06CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAudioComponent*>                     FootstepAudioComponents;                                   // 0x06D0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TADD[0x4];                                     // 0x06E0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FootstepLODDistance;                                       // 0x06E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootstepEffectsMaxCameraDist;                              // 0x06E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LLQE[0x4];                                     // 0x06EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               FeetBones;                                                 // 0x06F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FootstepDecalSize;                                         // 0x0700(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K6A7[0x4];                                     // 0x070C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMaterialInterface*>                  FootstepDecals;                                            // 0x0710(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>                     FootstepParticles;                                         // 0x0720(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   FootstepSound;                                             // 0x0730(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootstepSoundZOffset;                                      // 0x0738(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FootstepVolumeVelocityRangeIn;                             // 0x073C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FootstepVolumeVelocityRangeOut;                            // 0x0744(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FootstepPitchVelocityRangeIn;                              // 0x074C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FootstepPitchVelocityRangeOut;                             // 0x0754(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootstepVolumeModifierViewTarget;                          // 0x075C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootstepVolumeModifierAlly;                                // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootstepVolumeModifierEnemy;                               // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FootstepArmorTier;                                         // 0x0768(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z9KH[0x4];                                     // 0x076C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicsAsset*                               ClientPhysicsAsset;                                        // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               BodyRagdollPhysicsAsset;                                   // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDismemberedQueue                           DismemberedQueue;                                          // 0x0780(0x0060) (NativeAccessSpecifierPublic)
	struct FVector                                     MoveCompVelocityBeforeDeath;                               // 0x07E0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastNonZeroVelocityTime;                                   // 0x07EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanReceiveClientsideHits;                                 // 0x07F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YWF3[0x3];                                     // 0x07F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DamageArmorTierOverride;                                   // 0x07F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DissolveDuration;                                          // 0x07F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2VYJ[0x4];                                     // 0x07FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULateTickComponent*                          LateTickComponent;                                         // 0x0800(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceToCameraHeuristic;                                 // 0x0808(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceToCamera;                                          // 0x080C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OcclusionToCamera;                                         // 0x0810(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipAnimPoseOnClientWhenNotRendered;                      // 0x0814(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_300S[0x3];                                     // 0x0815(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     DistanceToCameraMeshOffset;                                // 0x0818(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LODRank;                                                   // 0x0824(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LODBucketLevel;                                            // 0x0828(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFancyMeshEffects;                                         // 0x082C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J4Y3[0x3];                                     // 0x082D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FancyMeshEffectsTurnOnDistance;                            // 0x0830(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FancyMeshEffectsTurnOffDistance;                           // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceMaxQuality;                                          // 0x0838(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedCharacterFlags;                                  // 0x0839(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasEverPossessedByLocalPlayer;                            // 0x083A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JUSE[0x1];                                     // 0x083B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastPossessionTime;                                        // 0x083C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingGetUpDuration;                               // 0x0840(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingGetUpStartTime;                              // 0x0844(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingStartTime;                                   // 0x0848(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingMinTime;                                     // 0x084C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingMinVelocityToGetUp;                          // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingTimeAtMinVelocityToGetUp;                    // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5QO9[0xC];                                     // 0x0858(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              JumpCooldown;                                              // 0x0864(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJumped;                                                   // 0x0868(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAirborneFromJump;                                       // 0x0869(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0Y2E[0x2];                                     // 0x086A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AirborneTime;                                              // 0x086C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmokeDistanceMaxValue;                                     // 0x0870(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmokeDistanceSmoothInterpSpeed;                            // 0x0874(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMasterField>                 CurrentSmokeField;                                         // 0x0878(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBurnableComponent*                          BurnableComponent;                                         // 0x0880(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMeshesReceiveDecals;                                      // 0x0888(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z4B9[0x7];                                     // 0x0889(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauProjectile*                          CurrentProjectile;                                         // 0x0890(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTurnUsesControllerInputYawScale;                          // 0x0898(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAddForwardAxisToMovementInput;                            // 0x0899(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAddRightAxisToMovementInput;                              // 0x089A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PZV1[0x1];                                     // 0x089B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnTurnValue;                                            // 0x089C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpLimit;                                               // 0x08A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookDownLimit;                                             // 0x08A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnLimit;                                                 // 0x08A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedLookUpValue;                                     // 0x08AC(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H5EI[0x3];                                     // 0x08AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LookUpValueSmoothingTarget;                                // 0x08B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingFrom;                                  // 0x08B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingStartTime;                             // 0x08B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingEndTime;                               // 0x08BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookSmoothingSlowAlpha;                                    // 0x08C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnRateCap;                                               // 0x08C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnRateCapTarget;                                         // 0x08C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpRateCap;                                             // 0x08CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpRateCapTarget;                                       // 0x08D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTurnRateIgnoresCap;                                       // 0x08D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_691A[0x3];                                     // 0x08D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TurnCapRemaining;                                          // 0x08D8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpCapRemaining;                                        // 0x08DC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastObservedLocation;                                      // 0x08E0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AccumulatedLocationLag;                                    // 0x08EC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFloatAndVector>                     DelayedLocationDeltas;                                     // 0x08F8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentLocationLagInduction;                               // 0x0908(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LocationLagInductionTarget;                                // 0x090C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LocationLagInductionChangeSpeed;                           // 0x0910(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LocationLagInductionCounterweight;                         // 0x0914(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastObservedLook;                                          // 0x0918(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AccumulatedLookLag;                                        // 0x0924(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFloatAndVector>                     DelayedLookDeltas;                                         // 0x0930(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentLookLagInduction;                                   // 0x0940(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookLagInductionTarget;                                    // 0x0944(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookLagInductionChangeSpeed;                               // 0x0948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookLagInductionCounterweight;                             // 0x094C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPerformCustomDepthHighlight;                              // 0x0950(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHighlighted;                                            // 0x0951(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInteractable;                                           // 0x0952(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F0M7[0x5];                                     // 0x0953(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      MarkerWidgetComponentClass;                                // 0x0958(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MarkerWidgetClass;                                         // 0x0960(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VF5J[0x8];                                     // 0x0968(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  MarkerWidgetRelativeTransform;                             // 0x0970(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       MarkerWidgetAttachSocket;                                  // 0x09A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMordhauWidgetComponent*                     MarkerWidgetComponent;                                     // 0x09A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCannotRequestSuicide;                                     // 0x09B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillStopMelee;                                            // 0x09B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillBleedOutOnKill;                                       // 0x09B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6GQ9[0x1];                                     // 0x09B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BleedingOutRemainingTime;                                  // 0x09B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBleedingOut;                                            // 0x09B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EXKH[0x7];                                     // 0x09B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             DeathParticles;                                            // 0x09C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DeathParticlesSocket;                                      // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableHealingItems;                                      // 0x09D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Health;                                                    // 0x09D1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedHealth;                                          // 0x09D2(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_402M[0x1];                                     // 0x09D3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthRegenDelay;                                          // 0x09D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      HealthRegenPerTick;                                        // 0x09D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGKF[0x3];                                     // 0x09D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthRegenTickRate;                                       // 0x09DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreGameStateHealthRegenRestriction;                    // 0x09E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ME99[0x3];                                     // 0x09E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OutOfBoundsKillTime;                                       // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAllowedOutOfBounds;                                     // 0x09E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeamkillsCountForAutoKick;                                // 0x09E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7RO0[0x2];                                     // 0x09EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReflectMeleeDamagePercentage;                              // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasLastChance;                                            // 0x09F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WUJB[0x3];                                     // 0x09F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastChanceHealAmount;                                      // 0x09F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedDamageModifier;                                    // 0x09F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedFallDamageModifier;                                // 0x09FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedTeamDamageModifier;                                // 0x0A00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedFireDamageModifier;                                // 0x0A04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedRangedDamageModifier;                              // 0x0A08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedDamageAbsorption;                                  // 0x0A0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedDamageMax;                                         // 0x0A10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackFlinch;                                           // 0x0A14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HitEffect;                                                 // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BurningParticles;                                          // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BurningAttachSocket;                                       // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BurningSound;                                              // 0x0A30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   FallDamageSound;                                           // 0x0A38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FallDamageSoundAttachToBone;                               // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentBurningParticles;                                   // 0x0A48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              CurrentBurningSound;                                       // 0x0A50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNetDamage                                  NetDamage;                                                 // 0x0A58(0x0024) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	float                                              DeathTime;                                                 // 0x0A7C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewTargetAttenuationVolumeMultiplier;                     // 0x0A80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BD0G[0x4];                                     // 0x0A84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundAttenuation*                           ViewTargetAttenuationOverride;                             // 0x0A88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceLongDeathYell;                                       // 0x0A90(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4OF8[0x7];                                     // 0x0A91(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   HurtYell;                                                  // 0x0A98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   DeathYell;                                                 // 0x0AA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DedicatedServerAnimFrameSkipLOD;                           // 0x0AA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AdditiveOverrideType;                                      // 0x0AAC(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdditiveOverrideEndTime;                                   // 0x0AB4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdditiveOverrideStartTime;                                 // 0x0AB8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LastFlinchAdditiveName;                                    // 0x0ABC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastFlinchAdditiveTime;                                    // 0x0AC4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EPhysicalSurface>               CharacterSurface;                                          // 0x0AC8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RBWZ[0x7];                                     // 0x0AC9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSphericalLimbBounds>                SphericalLimbs;                                            // 0x0AD0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollForceMultIfDmgAgent;                                // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceRagdollIfDmgAgent;                                   // 0x0AE4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0RG6[0x3];                                     // 0x0AE5(0x0003) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AdvancedCharacter");
		return ptr;
	}



	void TurnNotAbsolute(float Value);
	void TurnAtRate(float Val);
	void Turn(float Val, bool bIsAbsolute);
	bool Trip();
	bool TraceSphericalLimbs(const struct FVector& TraceStart, const struct FVector& TraceEnd, struct FHitResult* OutResult);
	void Suicide();
	void StopRegen(float ExtraTime);
	void StopMontage(class UAnimMontage* Montage, float FadeOut);
	void StopHealthRegen(float ExtraTime);
	void StopAnim(float FadeOut);
	void StartRagdollWithBlend(float BlendDuration);
	void StartRagdoll();
	class UParticleSystemComponent* SpawnParticlesAttached(class UParticleSystem* Particle, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<Engine_EAttachLocation> AttachType, const struct FName& Socket, bool bForce);
	void SetOnSmoke(class AMasterField* SmokeField);
	void SetMaxAnimBlendWeight(class UAnimMontage** Montage, float MaxAmount);
	void SetLookLagInductionTarget(float Amount, float ChangeSpeed);
	void SetLocationLagInductionTarget(float Amount, float ChangeSpeed);
	void SetIsRagdollFalling(bool bInIsRagdollFalling);
	void SetAnimRate(class UAnimMontage* Montage, float NewRate);
	void SetAnimPosition(class UAnimMontage* Montage, float NewPosition);
	void SetAdditiveOverrideType(const struct FName& NewType, float Duration);
	void ServerTrip();
	void ServerSuicide();
	void ServerLookUp(float NewLookUp);
	void ResetLookLagInductionTarget();
	void ResetLocationLagInductionTarget();
	void ResetLagInductionTargets();
	void ResetAdditiveOverrideType();
	void RequestTrip();
	void RequestSuicide();
	void RequestMeshEnablePhysics(float Duration);
	void RegisterMaterialToDissolve(class UMaterialInstanceDynamic* Mat);
	void ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, Mordhau_EMordhauDamageType DamageType, unsigned char SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator);
	bool PlayHitEffectParticle(const struct FVector& Location, const struct FRotator& Rotation, const struct FName& bone, bool bFindOptimalSpot);
	class UAudioComponent* PlayCharacterSound(class USoundBase* Sound, const struct FName& bone, const struct FVector& InLocation, TEnumAsByte<Engine_EAttachLocation> AttachLocation, bool bAttach, class USoundAttenuation* Override, float VolumeMultiplier, float PitchMultiplier);
	class UAnimMontage* PlayAnim(class UAnimMontage* Montage, float PlayRate, bool bStopExistingMontages);
	void OnTookDamage(bool bWillKill, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void OnRep_Team();
	void OnRep_SpawnTurnValue();
	void OnRep_ReplicatedLookUpValue();
	void OnRep_ReplicatedHealth();
	void OnRep_ReplicatedCharacterFlags(unsigned char OldValue);
	void OnRep_NetDamage();
	void OnKilled(class AController* EventInstigator);
	void OnHit(class AActor* Actor, const struct FName& bone, const struct FVector& WorldLocation, unsigned char Tier, unsigned char SurfaceType);
	void OnHealthChanged();
	void OnDied(float Angle, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void OnCosmeticHit(Mordhau_EMordhauDamageType DamageType, unsigned char SubType, const struct FHitResult& Hit, class AActor* Agent);
	void OnAfterDied(float Angle, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void OffsetHealth(int Amount, bool bReplicate);
	void MoveRight(float Val);
	void MoveForward(float Val);
	float MordhauTakeDamage(float DamageAmount, const struct FHitResult& Hit, Mordhau_EMordhauDamageType DamageType, unsigned char DamageSubType, class AActor* Source, class AActor* Agent, class AController* EventInstigator);
	float ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator);
	void LookUpNotAbsolute(float Value);
	void LookUpAtRate(float Val);
	void LookUp(float Val, bool bIsAbsolute);
	bool Knockback(const struct FVector& Amount);
	bool IsViewTarget();
	bool IsPlayerControlledIncludingVehicle();
	bool IsLocallyPlayerControlledIncludingVehicle();
	bool IsLocallyPlayerControlled();
	bool IsLocallyControlledOrUncontrolled();
	bool IsLocallyControlledIncludingVehicle();
	bool IsLastDismemberedBonePartial();
	bool IsLastDismemberedBoneBluntForce();
	bool IsAnimActive(class UAnimMontage* Montage);
	bool IsAirborne();
	float GetRawLookUpValue();
	class UMordhauMotion* GetMotion();
	float GetLookUpValue();
	Mordhau_EMordhauDamageType GetLastNetDamageType();
	class AActor* GetLastNetDamageSource();
	struct FVector GetLastDismemberedBoneForceDir();
	bool GetIsDead();
	float GetDistanceIntoSmokeFieldSmoothed();
	float GetDistanceIntoSmokeField();
	class AController* GetControllerIncludingVehicle();
	bool GetBestStickyLocation(const struct FVector& InLocation, struct FVector* OutLocation, struct FVector* OutNormal, struct FName* OutBone);
	unsigned char GetArmorTierForBone(const struct FName& BoneName);
	float GetAnimWeight(class UAnimMontage* Montage);
	float GetAdditiveOverrideTypeNormalizedTime();
	struct FName GetAdditiveOverrideType();
	bool CanBleedOutFromHit(const struct FHitResult& HitResult, Mordhau_EMordhauDamageType Type, unsigned char SubType, class AActor* Source, class AActor* Agent, class AController* EventInstigator);
	void BPLODTick(float DeltaTime);
	class UAudioComponent* BP_PlayCharacterSound(class USoundBase* Sound, const struct FName& bone, const struct FVector& Location, TEnumAsByte<Engine_EAttachLocation> AttachLocation, bool bAttach);
	void BoostAnimBlendWeight(class UAnimMontage** Montage, float BoostAmount);
	void BeginFlinchAdditiveOverride(const struct FName& FlinchOverrideName, const struct FName& AltFlinchOverrideName, float Duration, float Degree, bool bIsHead, float SnapDegreeToSteps);
	void ApplyRagdollForce(float Angle, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void AddWound(const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, const struct FName& bone, class AActor* Agent, Mordhau_EMordhauDamageType DamageType, unsigned char DamageSubType);
	void AddTurnDegrees(float Delta);
};

// Class Mordhau.AdvancedCharacterAnimInstance
// 0x00C8 (FullSize[0x0330] - InheritedSize[0x0268])
class UAdvancedCharacterAnimInstance : public UAnimInstance
{
public:
	TArray<TEnumAsByte<Engine_ECollisionChannel>>      GroundingChannels;                                         // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsGrounding;                                           // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BOVH[0x3];                                     // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RootTranslationOffsetInternal;                             // 0x027C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RootTranslationOffset;                                     // 0x0288(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    RootRotationOffsetInternal;                                // 0x0294(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    RootRotationOffset;                                        // 0x02A0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     RootRotationPivot;                                         // 0x02AC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TranslationInterpSpeed;                                    // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationInterpSpeed;                                       // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootRotationOffsetFactor;                                  // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LimbRotationOffsetFactor;                                  // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RootLiftLimits;                                            // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundingWeight;                                           // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AccumulatedLocationLag;                                    // 0x02D4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    AccumulatedTurnLag;                                        // 0x02E0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsAirborne;                                               // 0x02EC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N7HB[0x3];                                     // 0x02ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastLand;                                                  // 0x02F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastJump;                                                  // 0x02F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AirborneTime;                                              // 0x02F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJumped;                                                   // 0x02FC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAirborneFromJump;                                         // 0x02FD(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDead;                                                   // 0x02FE(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7IL7[0x1];                                     // 0x02FF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeathDirection;                                            // 0x0300(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AdditiveOverrideType;                                      // 0x0304(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdditiveOverrideWeight;                                    // 0x030C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdditiveOverrideNoneTime;                                  // 0x0310(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdditiveOverrideTypeNormalizedTime;                        // 0x0314(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchDirection;                                           // 0x0318(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchIsHead;                                              // 0x031C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AltFlinchDirection;                                        // 0x0320(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AltFlinchIsHead;                                           // 0x0324(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastDeltaSeconds;                                          // 0x0328(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OJYL[0x4];                                     // 0x032C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AdvancedCharacterAnimInstance");
		return ptr;
	}



};

// Class Mordhau.AdvancedCharacterMovement
// 0x0148 (FullSize[0x0758] - InheritedSize[0x0610])
class UAdvancedCharacterMovement : public UCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_JO8I[0x8];                                     // 0x0610(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DealtFallingDamageTo[0x50];                                // 0x0610(0x0050) UNKNOWN PROPERTY: SetProperty
	float                                              LastFallingCheckVelocityZ;                                 // 0x0668(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WFIS[0x4];                                     // 0x066C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCrowdManager*                               CrowdManager;                                              // 0x0670(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMordhauRotationInterpMode;                             // 0x0678(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VT62[0x3];                                     // 0x0679(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BounceOffBumpForce;                                        // 0x067C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MordhauRotationSmoothStartTime;                            // 0x0680(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MordhauRotationSmoothEndTime;                              // 0x0684(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MRE1[0x8];                                     // 0x0688(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FQuat                                       MordhauRotationSmoothFrom;                                 // 0x0690(0x0010) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              StillTimeWhileRagdollFalling;                              // 0x06A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PerchRadiusThresholdRagdollFalling;                        // 0x06A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinVelocityForFallDamage;                                  // 0x06A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallDamageOffset;                                          // 0x06AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallDamageFactor;                                          // 0x06B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollMinVelocityForFallDamage;                           // 0x06B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallDamageOffset;                                   // 0x06B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallDamageFactor;                                   // 0x06BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReverseBackwardsTurning;                                  // 0x06C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePendingRotationToOrientMovement;                       // 0x06C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U1RJ[0x2];                                     // 0x06C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     PreviousVelocity;                                          // 0x06C4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PendingTurnValue;                                          // 0x06D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreMovementInput;                                      // 0x06D4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CBIE[0xB];                                     // 0x06D5(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<unsigned char>                              ChildrenSkipperCachedArray;                                // 0x06E0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OffsetMeshTranslation;                                     // 0x06F0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OffsetExtrapolation;                                       // 0x06FC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OffsetExtrapolationTarget;                                 // 0x0708(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OffsetCorrectionLeftover;                                  // 0x0714(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OffsetNetSmoothLeftover;                                   // 0x0720(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OffsetNetSmoothPending;                                    // 0x072C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MovementComponentMeshOffset;                               // 0x0738(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AuthNetSmoothTime;                                         // 0x0744(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AuthNetMaxSmoothDist;                                      // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableAuthNetSmoothing;                                  // 0x074C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GBCW[0x3];                                     // 0x074D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SkipPredictionForAnimTickSkipOrGreater;                    // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_48XS[0x4];                                     // 0x0754(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AdvancedCharacterMovement");
		return ptr;
	}



};

// Class Mordhau.AdvProjectileMovementComponent
// 0x0010 (FullSize[0x01E0] - InheritedSize[0x01D0])
class UAdvProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	float                                              DragDeceleration;                                          // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_744Z[0xC];                                     // 0x01D4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AdvProjectileMovementComponent");
		return ptr;
	}



};

// Class Mordhau.AdvRichTextBlockImageDecorator
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAdvRichTextBlockImageDecorator : public URichTextBlockImageDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AdvRichTextBlockImageDecorator");
		return ptr;
	}



};

// Class Mordhau.AliveCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAliveCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AliveCommand");
		return ptr;
	}



};

// Class Mordhau.Archetype
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UArchetype : public UObject
{
public:
	int                                                CharacterPoints;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RI40[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Archetype");
		return ptr;
	}



};

// Class Mordhau.MordhauInventoryItem
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UMordhauInventoryItem : public UObject
{
public:
	class UTexture2D*                                  ItemIcon;                                                  // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ItemDefID;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                OriginalItemDefID;                                         // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ItemName;                                                  // 0x0038(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	Mordhau_EItemRarity                                ItemRarity;                                                // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J9YY[0x7];                                     // 0x0051(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauInventoryItem");
		return ptr;
	}



	void MarkSeen();
	bool GetWasSeen();
};

// Class Mordhau.MordhauWearable
// 0x0148 (FullSize[0x01A0] - InheritedSize[0x0058])
class UMordhauWearable : public UMordhauInventoryItem
{
public:
	Mordhau_EWearableSlot                              UseColorsFromSlot;                                         // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KM7M[0x7];                                     // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  AlbedoMap;                                                 // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  NormalMap;                                                 // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  RoughnessMap;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      Albedo;                                                    // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Metallic;                                                  // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Roughness;                                                 // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MetalAlbedoDarken;                                         // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PDO;                                                       // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodOffsetA;                                              // 0x008C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodOffsetB;                                              // 0x0098(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodMaskSizeFine;                                         // 0x00A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodMaskSizeSoft;                                         // 0x00B0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodTextureSize;                                          // 0x00BC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     EmblemScale;                                               // 0x00C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     EmblemOffset;                                              // 0x00D4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EmblemRotation;                                            // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasEmblem;                                                // 0x00E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMuffleVoice;                                              // 0x00E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTreatAsMaster;                                            // 0x00E6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideIn1P;                                                 // 0x00E7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideEars;                                                 // 0x00E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CU0D[0x3];                                     // 0x00E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HideEarsAmount;                                            // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideHair;                                                 // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideBeard;                                                // 0x00F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideNose;                                                 // 0x00F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M15B[0x1];                                     // 0x00F3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HideNoseAmount;                                            // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideLeftHand;                                             // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideRightHand;                                            // 0x00F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideLeftFoot;                                             // 0x00FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideRightFoot;                                            // 0x00FB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideLeftLeg;                                              // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideRightLeg;                                             // 0x00FD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideChest;                                                // 0x00FE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideLeftArm;                                              // 0x00FF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideRightArm;                                             // 0x0100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SZTY[0x7];                                     // 0x0101(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               Mesh;                                                      // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               Mesh1POverride;                                            // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               AuxiliaryMesh;                                             // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               AuxiliaryMesh1POverride;                                   // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresFullArmAuxiliary;                                 // 0x0128(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresForearmAuxiliary;                                 // 0x0129(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresUpperChestAuxiliary;                              // 0x012A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E6HR[0x1];                                     // 0x012B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VertexCameraDisplacement;                                  // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CharacterPointCost;                                        // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ArmorClass;                                                // 0x0134(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAllowedForPeasants;                                     // 0x0135(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EUKW[0x2];                                     // 0x0136(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpeedFactor;                                               // 0x0138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccelerationFactor;                                        // 0x013C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPatternInfo>                        Patterns;                                                  // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Pattern;                                                   // 0x0150(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PQ6Q[0x7];                                     // 0x0151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<unsigned char>                              Colors;                                                    // 0x0158(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<unsigned char>                              ColorTables;                                               // 0x0168(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreTeamColor1;                                         // 0x0178(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreTeamColor2;                                         // 0x0179(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RV8J[0x2];                                     // 0x017A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                DefaultColor1Temp;                                         // 0x017C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DefaultColor2Temp;                                         // 0x018C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZTGO[0x4];                                     // 0x019C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauWearable");
		return ptr;
	}



};

// Class Mordhau.ArmsWearable
// 0x0018 (FullSize[0x01B8] - InheritedSize[0x01A0])
class UArmsWearable : public UMordhauWearable
{
public:
	unsigned char                                      DefaultHands;                                              // 0x01A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FUMJ[0x7];                                     // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      HandsWearables[0x10];                                      // 0x01A1(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ArmsWearable");
		return ptr;
	}



	int GetHandsWearablesNum();
	class UClass* GetHandsWearable(int Index);
};

// Class Mordhau.MordhauMotion
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
class UMordhauMotion : public UObject
{
public:
	float                                              StartRealTime;                                             // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X2LO[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauMotion*                              ComingFromMotion;                                          // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                Tag;                                                       // 0x0038(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesDodge;                                            // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_75NZ[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TurncapModifier;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExpectedDelay;                                             // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartTime;                                                 // 0x004C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EndTime;                                                   // 0x0050(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeaveTime;                                                 // 0x0054(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInitiatedLocally;                                         // 0x0058(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasConfirmedByAuthority;                                  // 0x0059(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UOJ3[0x2];                                     // 0x005A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ConfirmedByAuthorityTime;                                  // 0x005C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFlinchable;                                             // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       MovementRestriction;                                       // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G7SK[0x2];                                     // 0x0062(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpeedFactor;                                               // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackpedalSpeedFactor;                                      // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanEmote;                                                 // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAttack;                                                // 0x006D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBlock;                                                 // 0x006E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesAtmospherics;                                     // 0x006F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequires3PArmsSync;                                       // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesCosmeticWeaponTransform;                          // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesOffhandIK;                                        // 0x0072(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesChaseMechanic;                                    // 0x0073(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForcesOffhandIK;                                          // 0x0074(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOffhandIsRightHand;                                       // 0x0075(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HTX[0x2];                                     // 0x0076(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OffhandIKChangeSpeed;                                      // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CosmeticTransformChangeSpeed;                              // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffhandIKDistanceMax;                                      // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffhandIKDistanceMin;                                      // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlocksRegen;                                              // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDedicatedServerAnimLOD;                              // 0x0089(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesLeftTorsoBlend;                                       // 0x008A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BKNU[0x1];                                     // 0x008B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeftTorsoBlendSpeed;                                       // 0x008C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsRightLegBending;                                     // 0x0090(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DZ4S[0x3];                                     // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RightLegBendingChangeSpeed;                                // 0x0094(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsSlowLookSmoothing;                                   // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SAP9[0x3];                                     // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LookSmoothingChangeSpeed;                                  // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauMotion");
		return ptr;
	}



	bool ProcessFeint();
	bool ProcessBlock(Mordhau_EBlockType Type);
	bool ProcessAttack(Mordhau_EAttackMove Move, float Angle);
	void OnTick(float DeltaTime);
	void OnLeave(bool Interrupted);
	void OnLateTick(float DeltaTime);
	void OnEnded();
	void OnDynamicParamChanged(unsigned char OldValue, unsigned char NewValue);
	void OnBegin();
	bool HasAuthority();
	class UWorld* GetWorld();
	class AMordhauCharacter* GetOwnerMordhauCharacter();
	class AAdvancedCharacter* GetOwnerAdvancedCharacter();
	class AActor* GetOwnerActor();
	class UMotionSystemComponent* GetOwner();
	bool GetIsFirstPerson();
	bool CanInitiateMotion(class UClass* NewMotionType);
};

// Class Mordhau.AttackMotion
// 0x1050 (FullSize[0x10F0] - InheritedSize[0x00A0])
class UAttackMotion : public UMordhauMotion
{
public:
	unsigned char                                      UnknownData_QY5D[0x20];                                    // 0x00A0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             VisualizeAttackAccelerationTraces;                         // 0x00C0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      VisualizeAttackAccelerationDeltaTimes;                     // 0x00D0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowAutomaticBlendingDebug;                               // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowAutomaticBlendingVisualDebug;                         // 0x00E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowWindUpSmoothingDebug;                                 // 0x00E2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesTrail;                                                // 0x00E3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayAttackYellTimeReleaseOffset;                           // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WooshTimeFactor;                                           // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsSlowLookSmoothingInRecovery;                         // 0x00EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0BTH[0x3];                                     // 0x00ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   AnglingLimits;                                             // 0x00F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveHighMidLowSpineSpaceAdditive    AnglingAdditiveWindUp;                                     // 0x00F8(0x0318) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FHighMidLowSpineSpaceAdditive               AnglingAdditiveRelease;                                    // 0x0410(0x018C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveHighMidLowSpineSpaceAdditive    RiposteAnglingAdditiveWindUp;                              // 0x059C(0x0318) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FHighMidLowSpineSpaceAdditive               RiposteAnglingAdditiveRelease;                             // 0x08B4(0x018C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ExperimentalLiveRecoveryDuration;                          // 0x0A40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LiveRecoveryHitsAreThuds;                                  // 0x0A44(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIncludeMissingDeltaTime;                                  // 0x0A45(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_01JW[0x2];                                     // 0x0A46(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 WorldCollisionPercentageTriggerCurve;                      // 0x0A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 WorldCollisionAbsoluteTriggerCurve;                        // 0x0A50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TraceMemoryStayDuration;                                   // 0x0A58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxParryAngleForChamberAndActiveParry;                     // 0x0A5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxParryWeaponAngleForChamberAndActiveParry;               // 0x0A60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ActiveParryStaminaCost;                                    // 0x0A64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActiveParryWindow;                                         // 0x0A68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeParriedInEarlyRelease;                               // 0x0A6C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNoDamageInEarlyRelease;                                   // 0x0A6D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeParriedByForwardCollider;                            // 0x0A6E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeParriedByForwardColliderInEarlyRelease;              // 0x0A6F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClashAngle;                                                // 0x0A70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EarlyReleaseIsClashableAfter;                              // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChamberWindow;                                             // 0x0A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ChamberStaminaRecover;                                     // 0x0A7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ToChamberAttackAngleTolerance;                             // 0x0A80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PFRE[0x4];                                     // 0x0A84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GlanceDamageModifier;                                      // 0x0A88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopOnHitOnKills;                                         // 0x0A8C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanTraceHitUsingShieldBlockCollider;                      // 0x0A8D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStunsHeldBlock;                                           // 0x0A8E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsComboFromMiss;                                          // 0x0A8F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinAngleToRearHorse;                                       // 0x0A90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MissTwiceStaminaCostMultiplier;                            // 0x0A94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RiposteTradeDamageFactor;                                  // 0x0A98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RiposteWindUpCanParryWindow;                               // 0x0A9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSeamlessCFTPInRecovery;                                // 0x0AA0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X0JU[0x3];                                     // 0x0AA1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitRecovery;                                               // 0x0AA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitStopRecovery;                                           // 0x0AA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClashedRecovery;                                           // 0x0AAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           MissRecoveryToPlayRate;                                    // 0x0AB0(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveVector2D                        MissRecoveryPlayRateClamp;                                 // 0x0AB8(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              RecoveryQueueWindow;                                       // 0x0AC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_61WA[0x4];                                     // 0x0ACC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                BounceMontage;                                             // 0x0AD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimSequence                    BounceAdditive;                                            // 0x0AD8(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      WorldBounceCurve;                                          // 0x0AE8(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      WorldBounceScaleCurve;                                     // 0x0AF8(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ParryBounceCurve;                                          // 0x0B08(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ParryLateBounceCurve;                                      // 0x0B18(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ParryBounceScaleCurve;                                     // 0x0B28(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              EarlyRelease;                                              // 0x0B38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EarlyReleaseTimeFactor;                                    // 0x0B3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RiposteEarlyRelease;                                       // 0x0B40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RiposteEarlyReleaseTimeFactor;                             // 0x0B44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrikeAnimationNormalizedRecoveryOffset;                   // 0x0B48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ROW[0x4];                                     // 0x0B4C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 SupersprintDurationByRangeCurve;                           // 0x0B50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SupersprintStartOffset;                                    // 0x0B58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SupersprintDuration;                                       // 0x0B5C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_11ZR[0x4];                                     // 0x0B60(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FeintWindow;                                               // 0x0B64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ComboFeintWindow;                                          // 0x0B68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRiposteFeintable;                                       // 0x0B6C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAttackFromFeintLockout;                                // 0x0B6D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A51E[0x2];                                     // 0x0B6E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveFloat                           FeintAnimRate;                                             // 0x0B70(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           FeintAnimDurationOffset;                                   // 0x0B78(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           FeintAnimMinimumDuration;                                  // 0x0B80(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bCanAutoFeintToAttack;                                     // 0x0B88(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRiposteAteFeintInput;                                     // 0x0B89(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LYU0[0x2];                                     // 0x0B8A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinWindUpTimeBeforeMorphing;                               // 0x0B8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MorphWindow;                                               // 0x0B90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MorphWindupModifier;                                       // 0x0B94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MorphWindupCurve;                                          // 0x0B98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMorphTotalTime;                                         // 0x0BA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MorphKickExtraTime;                                        // 0x0BA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReleaseJumpBlockTime;                                      // 0x0BA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPerformWeaponSlidingSparks;                               // 0x0BAC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveBool                            RegularAttacksUseAutoBlendIn;                              // 0x0BAD(0x0002) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBool                            RiposteAttacksUseAutoBlendIn;                              // 0x0BAF(0x0002) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBool                            ComboAttacksUseAutoBlendIn;                                // 0x0BB1(0x0002) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBool                            PostClashAttacksUseAutoBlendIn;                            // 0x0BB3(0x0002) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBool                            MorphAttacksUseAutoBlendIn;                                // 0x0BB5(0x0002) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QV3K[0x1];                                     // 0x0BB7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveCurveFloat                      AutoBlendInWeaponCurve;                                    // 0x0BB8(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AutoBlendConsiderUpVectorIfLargerThanAngle;                // 0x0BC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4192[0x4];                                     // 0x0BCC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveCurveFloat                      AutoBlendInSpineCurve;                                     // 0x0BD0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int                                                AutoBlendOptimizeForwardSteps;                             // 0x0BE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RiposteAutoBlendOptimizeForwardSteps;                      // 0x0BE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoBlendOptimizeForwardStepSize;                          // 0x0BE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           NormalBlendIn;                                             // 0x0BEC(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           NormalSlowBlendIn;                                         // 0x0BF4(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           NormalParrySlowBlendIn;                                    // 0x0BFC(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           ComboBlendIn;                                              // 0x0C04(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           PostClashBlendIn;                                          // 0x0C0C(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           MorphBlendIn;                                              // 0x0C14(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           RiposteBlendIn;                                            // 0x0C1C(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           RiposteWithShieldBlendIn;                                  // 0x0C24(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RMHS[0x4];                                     // 0x0C2C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 BlendInCurve;                                              // 0x0C30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ComboBlendInCurve;                                         // 0x0C38(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MorphBlendInCurve;                                         // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 RiposteBlendInCurve;                                       // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlendIn;                                                   // 0x0C58(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAutomaticBlendIn;                                      // 0x0C5C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IMI9[0x3];                                     // 0x0C5D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveAnimSequenceBase                Animation;                                                 // 0x0C60(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FPerspectiveAnimSequenceBase> ComboAnimations;                                           // 0x0C70(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FPerspectiveAnimSequenceBase> MorphAnimations;                                           // 0x0CC0(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimSequenceBase                RiposteAnimation;                                          // 0x0D10(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimSequenceBase                AltRiposteAnimation;                                       // 0x0D20(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimSequenceBase                ClashAnimation;                                            // 0x0D30(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimMontage                     LeftTorsoMontage;                                          // 0x0D40(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimMontage                     RiposteLeftTorsoMontage;                                   // 0x0D50(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentLeftTorsoAnimMontage;                               // 0x0D60(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           BlendOut;                                                  // 0x0D68(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           SuccessfulHitBlendOutAnimTime;                             // 0x0D70(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           SuccessfulHitPlayRate;                                     // 0x0D78(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5OWF[0x8];                                     // 0x0D80(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BlockedAttacks[0x50];                                      // 0x0D80(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_HYIN[0x4];                                     // 0x0DD8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveBool                            EnableWindUpSmoothing;                                     // 0x0DDC(0x0002) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6DFG[0x2];                                     // 0x0DDE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   WindUpSmoothingExponentClamp;                              // 0x0DE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 WindUpCurve;                                               // 0x0DE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ComboWindUpCurve;                                          // 0x0DF0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AnimationTimeFor3PTransition;                              // 0x0E00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GUR4[0x4];                                     // 0x0E04(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 ReleaseCurve;                                              // 0x0E08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 RiposteReleaseCurve;                                       // 0x0E10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                ComingFromMove;                                            // 0x0E18(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RDIU[0x7];                                     // 0x0E19(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParryMotion*                                ComingFromAsParry;                                         // 0x0E20(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 AttackInfo;                                                // 0x0E28(0x0128) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSpineSpaceAdditive                         TargetAdditive;                                            // 0x0F50(0x0084) (NoDestructor, NativeAccessSpecifierPublic)
	struct FSpineSpaceAdditive                         WindUpAdditive;                                            // 0x0FD4(0x0084) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DNSI[0x18];                                    // 0x1058(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AngleTarget;                                               // 0x1070(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastReleaseNormalizedTime;                                 // 0x1074(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastWindupNormalizedTime;                                  // 0x1078(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHitFriendly;                                           // 0x107C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackType                                Type;                                                      // 0x107D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                Move;                                                      // 0x107E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9X4O[0x1];                                     // 0x107F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WindupEnd;                                                 // 0x1080(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReleaseEnd;                                                // 0x1084(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AEGR[0x18];                                    // 0x1088(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                Montage;                                                   // 0x10A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           WindupSequenceUsed;                                        // 0x10A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           QueuedAnimFor3PRelease;                                    // 0x10B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMordhauWeapon*                              Weapon;                                                    // 0x10B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAttackMotion*                               PreviousLastAttackMotion;                                  // 0x10C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasQueuedServerCombo;                                     // 0x10C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CWP6[0x3];                                     // 0x10C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              QueuedServerComboAngle;                                    // 0x10CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                QueuedServerComboMove;                                     // 0x10D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasQueuedMove;                                            // 0x10D1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MZIE[0x2];                                     // 0x10D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              QueuedAngle;                                               // 0x10D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                QueuedMove;                                                // 0x10D8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackStage                               Stage;                                                     // 0x10D9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHit;                                                   // 0x10DA(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHitIncludingCosmeticHit;                               // 0x10DB(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstHitTime;                                              // 0x10DC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstHitIncludingCosmeticReleaseNormalizedTime;            // 0x10E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasChambered;                                             // 0x10E4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4GNX[0xB];                                     // 0x10E5(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.AttackMotion");
		return ptr;
	}



	bool ShouldStunOnHit(class UMotionSystemComponent* OtherComponent);
	void SetHasHitIncludingCosmeticHit(bool bPlayHitShake);
	void PrepareAnimationData();
	bool OverrideTrace(struct FVector* OutStart, struct FVector* OutEnd);
	bool OverrideIsUsingAdditionalTracers(bool* OutResult);
	bool OverrideAdditionalTrace(struct FVector* OutStart, struct FVector* OutEnd);
	void ModifyAttackInfo();
	class AMordhauWeapon* FindWeapon();
	float ComputeWindup();
};

// Class Mordhau.Badge
// 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
class UBadge : public UMordhauInventoryItem
{
public:
	class UTexture2D*                                  Texture;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Badge");
		return ptr;
	}



};

// Class Mordhau.BanListCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UBanListCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BanListCommand");
		return ptr;
	}



};

// Class Mordhau.BaseAttackMotion
// 0x05B8 (FullSize[0x0658] - InheritedSize[0x00A0])
class UBaseAttackMotion : public UMordhauMotion
{
public:
	bool                                               bBlendInMultiplicative;                                    // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C1ZS[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveFloat                           BlendIn;                                                   // 0x00A4(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MG3Q[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPerspectiveCurveFloat                      BlendInCurve;                                              // 0x00B0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           SlowBlendIn;                                               // 0x00C0(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           ParrySlowBlendIn;                                          // 0x00C8(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           RiposteBlendInWithShield;                                  // 0x00D0(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class UAnimSequence*, struct FPerspectiveAnimSequenceBaseArray> AnimationMap;                                              // 0x00D8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRotator                                    CueAmount;                                                 // 0x0128(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QNJ4[0x4];                                     // 0x0134(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 CueCurve;                                                  // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHighMidLowSpineSpaceAdditive               AngleAdditive;                                             // 0x0140(0x018C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveHighMidLowSpineSpaceAdditive    AngleAdditiveWindUp;                                       // 0x02CC(0x0318) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CISS[0x4];                                     // 0x05E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 ReleaseCurve;                                              // 0x05E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           FeintAnimRate;                                             // 0x05F0(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           FeintAnimDurationOffset;                                   // 0x05F8(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveFloat                           MinimumFeintAnimDuration;                                  // 0x0600(0x0008) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      WorldBounceCurve;                                          // 0x0608(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      WorldBounceScaleCurve;                                     // 0x0618(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ParryBounceCurve;                                          // 0x0628(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ParryLateBounceCurve;                                      // 0x0638(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveCurveFloat                      ParryBounceScaleCurve;                                     // 0x0648(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BaseAttackMotion");
		return ptr;
	}



};

// Class Mordhau.BlockedMotion
// 0x01A0 (FullSize[0x0240] - InheritedSize[0x00A0])
class UBlockedMotion : public UMordhauMotion
{
public:
	Mordhau_EAttackMove                                FromMove;                                                  // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasQueuedMove;                                            // 0x00A1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C475[0x2];                                     // 0x00A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              QueuedAngle;                                               // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                QueuedMove;                                                // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlockResult                                BlockResult;                                               // 0x00A9(0x0008) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasFadedOutProcedural;                                    // 0x00B1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoReleaseBounceProcedural;                                // 0x00B2(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BVT0[0x5];                                     // 0x00B3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                FromAttackMontage;                                         // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QueueWindow;                                               // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QueueWindowHit;                                            // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       MovementRestrictionHit;                                    // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       MovementRestrictionWorld;                                  // 0x00C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       OriginalMovementRestriction;                               // 0x00CA(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N2W6[0x1];                                     // 0x00CB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClashFadeOutTime;                                          // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClashFadeOutTime3P;                                        // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StabWorldFadeOutTime;                                      // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StabWorldFadeOutTime3P;                                    // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabParryMinMaxRange;                                      // 0x00DC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabParryFadeOutTime;                                      // 0x00E4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabParryMinMaxRange3P;                                    // 0x00EC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabParryFadeOutTime3P;                                    // 0x00F4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabChamberedMinMaxRange;                                  // 0x00FC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabChamberedFadeOutTime;                                  // 0x0104(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabChamberedMinMaxRange3P;                                // 0x010C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StabChamberedFadeOutTime3P;                                // 0x0114(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParriedRecoveryTimeOffset;                                 // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ParriedRecoveryTimeLimits;                                 // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChamberedRecoveryTimeOffset;                               // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ChamberedRecoveryTimeLimits;                               // 0x012C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7SPM[0x4];                                     // 0x0134(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 ProceduralHitStopBounceCurve;                              // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ProceduralHitStopBounceScaleCurve;                         // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ProceduralHitStopReleaseScaleCurve;                        // 0x0148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ProceduralHitStopBounceCurve3P;                            // 0x0150(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ProceduralHitStopBounceScaleCurve3P;                       // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ProceduralHitStopReleaseScaleCurve3P;                      // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralHitStopTimeUntilFade;                            // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralHitStopBounceDuration;                           // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralHitStopFadeOutTime;                              // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralHitStopTimeUntilFade3P;                          // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralHitStopBounceDuration3P;                         // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralHitStopFadeOutTime3P;                            // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StabHitStopFadeOutTime;                                    // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StabHitStopFadeOutTime3P;                                  // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KickHitStopBlendOutTime;                                   // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KickHitStopAnimRate;                                       // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldRecoveryTime;                                         // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldMissStaminaFactor;                                    // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ReleaseScaleCurve;                                         // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ReleaseScaleCurve3P;                                       // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryMinMaxRange;                                // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryTimeUntilFade;                              // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryBounceDuration;                             // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryFadeOutTime;                                // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberMinMaxRange;                              // 0x01C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberTimeUntilFade;                            // 0x01D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberBounceDuration;                           // 0x01D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberFadeOutTime;                              // 0x01E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralWorldTimeUntilFade;                              // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralWorldBounceDuration;                             // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralWorldFadeOutTime;                                // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryMinMaxRange3P;                              // 0x01F4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryTimeUntilFade3P;                            // 0x01FC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryBounceDuration3P;                           // 0x0204(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralParryFadeOutTime3P;                              // 0x020C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberMinMaxRange3P;                            // 0x0214(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberTimeUntilFade3P;                          // 0x021C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberBounceDuration3P;                         // 0x0224(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ProceduralChamberFadeOutTime3P;                            // 0x022C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralWorldTimeUntilFade3P;                            // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralWorldBounceDuration3P;                           // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralWorldFadeOutTime3P;                              // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BlockedMotion");
		return ptr;
	}



};

// Class Mordhau.BotBehaviorProfile
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
class UBotBehaviorProfile : public UObject
{
public:
	int                                                DefaultTeam;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FriendlyFireVoiceChance;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HurtHelpVoiceChance;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WasDisarmedHelpVoiceChance;                                // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisarmedLaughVoiceChance;                                  // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThanksOnAssistVoiceChance;                                 // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespectOnKillVoiceChance;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IgnoreEnemiesWithAllyCount;                                // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RangedAccuracyDegreesMinMax;                               // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RangedAccuracyDistanceMinMax;                              // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPrefersAltMode;                                           // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WO68[0x3];                                     // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseAttackHesitanceTime;                                   // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackHesitanceVariance;                                   // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootworkInsteadOfParryProbability;                         // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootworkWithCrouchProbability;                             // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ParryTimingVariance;                                       // 0x006C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PerfectParryProbability;                                   // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FeintTimingVariance;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallForFeintProbability;                                   // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ComboProbability;                                          // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DragProbability;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccelProbability;                                          // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChamberProbability;                                        // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MorphProbability;                                          // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GambleProbability;                                         // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FeintProbability;                                          // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RiposteProbability;                                        // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrawlProbability;                                          // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTurnRate;                                               // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLookUpRate;                                             // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Random2DUnitVector;                                        // 0x00AC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillBrawl;                                                // 0x00B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillRegularAttack;                                        // 0x00B5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillRiposte;                                              // 0x00B6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillFeint;                                                // 0x00B7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillGamble;                                               // 0x00B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillMorph;                                                // 0x00B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillChamber;                                              // 0x00BA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillAccel;                                                // 0x00BB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillDrag;                                                 // 0x00BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillCombo;                                                // 0x00BD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillFallForFeint;                                         // 0x00BE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U0OD[0x1];                                     // 0x00BF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FeintTimingRandom;                                         // 0x00C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillPerfectParry;                                         // 0x00C4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ABJU[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ParryTimingRandom;                                         // 0x00C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillFootwork;                                             // 0x00CC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillFootworkWithCrouch;                                   // 0x00CD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EDOG[0x2];                                     // 0x00CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UMordhauMotion>               LastFootworkingEnemyMotion;                                // 0x00D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackHesitanceRandom;                                     // 0x00D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WH74[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BotBehaviorProfile");
		return ptr;
	}



};

// Class Mordhau.BotCommands
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UBotCommands : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BotCommands");
		return ptr;
	}



};

// Class Mordhau.BotProfile
// 0x00E0 (FullSize[0x0108] - InheritedSize[0x0028])
class UBotProfile : public UObject
{
public:
	struct FString                                     BotName;                                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                UseBotLoadoutProfileID;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TX18[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterProfile                           CharacterProfile;                                          // 0x0040(0x00B8) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UClass*                                      BehaviorProfile;                                           // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeBehavior;                                        // 0x0100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeName;                                            // 0x0101(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeAppearance;                                      // 0x0102(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeFace;                                            // 0x0103(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeVoice;                                           // 0x0104(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeSkills;                                          // 0x0105(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeEquipment;                                       // 0x0106(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomizeWearables;                                       // 0x0107(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BotProfile");
		return ptr;
	}



	void AssignToController(class AMordhauAIController* Controller);
};

// Class Mordhau.Bounds
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UBounds : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Bounds");
		return ptr;
	}



	void OnExceededTimeOutOfBounds();
	void LeftOutOfBoundsArea();
	bool IsOutOfBounds();
	bool IsAllowedOutOfBounds();
	float GetOutOfBoundsTimeUntilDeath();
	void EnteredOutOfBoundsArea(class UObject* WCO);
};

// Class Mordhau.BTTask_Experimental
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UBTTask_Experimental : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_SDE2[0x8];                                     // 0x0070(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_Experimental");
		return ptr;
	}



};

// Class Mordhau.BTTask_FallForFeint
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UBTTask_FallForFeint : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_FallForFeint");
		return ptr;
	}



};

// Class Mordhau.BTTask_MeleeAttack
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UBTTask_MeleeAttack : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_MeleeAttack");
		return ptr;
	}



};

// Class Mordhau.BTTask_MeleeDefend
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UBTTask_MeleeDefend : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_MeleeDefend");
		return ptr;
	}



};

// Class Mordhau.BTTask_RangedAttack
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UBTTask_RangedAttack : public UBTTaskNode
{
public:
	float                                              MaxProjectileFlightTime;                                   // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1BNY[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_RangedAttack");
		return ptr;
	}



};

// Class Mordhau.BTTask_SwitchEquipment
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UBTTask_SwitchEquipment : public UBTTaskNode
{
public:
	bool                                               bMelee;                                                    // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P0S0[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              AllowedSubclasses;                                         // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              NotAllowedSubclasses;                                      // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_SwitchEquipment");
		return ptr;
	}



};

// Class Mordhau.BTTask_VoiceOrEmote
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UBTTask_VoiceOrEmote : public UBTTaskNode
{
public:
	TArray<unsigned char>                              VoiceCommandsList;                                         // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<unsigned char>                              EmotesList;                                                // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceEmote;                                               // 0x0090(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7Y9L[0x3];                                     // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GlobalCooldown;                                            // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Chance;                                                    // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q0PY[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BTTask_VoiceOrEmote");
		return ptr;
	}



};

// Class Mordhau.BuildableTraceBase
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UBuildableTraceBase : public UDataAsset
{
public:
	TArray<TEnumAsByte<Engine_EObjectTypeQuery>>       TraceObjectTypes;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTraceComplex;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreSelf;                                               // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EDrawDebugTrace>                DrawType;                                                  // 0x0042(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3WWN[0x1];                                     // 0x0043(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FColor                                      DrawColor;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       TraceTextForUI;                                            // 0x0048(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              ActorsToIgnore;                                            // 0x0060(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildableTraceBase");
		return ptr;
	}



};

// Class Mordhau.BuildableBoxTrace
// 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
class UBuildableBoxTrace : public UBuildableTraceBase
{
public:
	struct FName                                       ProfileName;                                               // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartTraceXAxisPercentage;                                 // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1697[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildableBoxTrace");
		return ptr;
	}



};

// Class Mordhau.BuildableLineTrace
// 0x0018 (FullSize[0x0088] - InheritedSize[0x0070])
class UBuildableLineTrace : public UBuildableTraceBase
{
public:
	struct FVector                                     TraceStartOffset;                                          // 0x0070(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TraceEndOffset;                                            // 0x007C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildableLineTrace");
		return ptr;
	}



};

// Class Mordhau.BuildablePlaneTrace
// 0x0070 (FullSize[0x00E0] - InheritedSize[0x0070])
class UBuildablePlaneTrace : public UBuildableTraceBase
{
public:
	TArray<class UClass*>                              CheckActorsOnPlaneTraceHit;                                // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpawnablePlaneInfo                         PlaneInfo;                                                 // 0x0080(0x0018) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     TraceAmount;                                               // 0x0098(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_70QH[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              ForbiddenHitActorsList;                                    // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInverseXYAngle;                                           // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PPT4[0x3];                                     // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAllowedPlacementAngle;                                  // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InverseXAxisMod;                                           // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InverseYAxisMod;                                           // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlacementLocationOffset;                                   // 0x00C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    PlacementRotationOffset;                                   // 0x00D4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildablePlaneTrace");
		return ptr;
	}



	void GetPlacementAngleAndRotation(struct FSpawnablePlaneTraceResult* OutTraceResult, const struct FSpawnableObjectInfo& ObjectInfo, float* OutAngle, struct FRotator* OutRotation);
	void DrawDebugPlane(class UObject* WorldContextObject, const struct FVector& Forward, const struct FVector& Back, const struct FVector& Right, const struct FVector& Left, const struct FVector& InTraceAmount, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType);
};

// Class Mordhau.BuildableSphereOverlap
// 0x0018 (FullSize[0x0088] - InheritedSize[0x0070])
class UBuildableSphereOverlap : public UBuildableTraceBase
{
public:
	float                                              SphereRadius;                                              // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartTraceXAxisPercentage;                                 // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckOnlyLoadedEquipement;                                // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UR8D[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ActorClassFilter;                                          // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildableSphereOverlap");
		return ptr;
	}



};

// Class Mordhau.BuildableSphereTrace
// 0x0020 (FullSize[0x0090] - InheritedSize[0x0070])
class UBuildableSphereTrace : public UBuildableTraceBase
{
public:
	struct FVector                                     TraceStartOffset;                                          // 0x0070(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TraceEndOffset;                                            // 0x007C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Radius;                                                    // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0ROM[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildableSphereTrace");
		return ptr;
	}



};

// Class Mordhau.BuildingSystemComponent
// 0x0068 (FullSize[0x0118] - InheritedSize[0x00B0])
class UBuildingSystemComponent : public UActorComponent
{
public:
	TArray<struct FSpawnableObjectInfo>                SpawnableObjects;                                          // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBuildableTraceBase*>                 TraceList;                                                 // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                              PreviewMeshComponent;                                      // 0x00D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                                   PreviewMaterial;                                           // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowPreview;                                              // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0HD5[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauHUDWidgetComponent*                  MordhauHUDWidgetComponent;                                 // 0x00E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeshPreviewCreated;                                      // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeshPreviewDestroyed;                                    // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QKIZ[0x8];                                     // 0x0110(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BuildingSystemComponent");
		return ptr;
	}



	bool ValidateSpot(const struct FVector& Offset, struct FVector* OutLocation, struct FRotator* OutRotation, class USceneComponent** AttachToComponent, class UBuildableTraceBase** BuildableTraceHit, int SpawnableObjectIndex, bool bDrawObjectPreview, bool bForceFail);
	void SetupMeshPreview();
	int GetEquipmentPlaceableMaxLimit(int SpawnableObjectIndex);
	struct FName GetEquipmentPlaceableLimitName(int SpawnableObjectIndex);
	struct FSpawnableObjectInfo GetEquipmentInfo(int SpawnableObjectIndex);
	struct FName GetEquipmentDisplayName(int SpawnableObjectIndex);
	int GetEquipmentAmmoCost(int SpawnableObjectIndex);
	void DisplayPreview(bool bDrawObjectPreview, bool bIsValid, const struct FSpawnableObjectInfo& ObjectInfo, const struct FTransform& ObjectTransform, int SpawnableObjectIndex);
	void DestroyMeshPreview();
	void AddStaticMeshPreviewIfNone(class UStaticMesh* StaticMesh);
	void AddSkeletalMeshPreviewIfNone(class USkeletalMesh* SkeletalMesh);
};

// Class Mordhau.BurnableComponent
// 0x0088 (FullSize[0x0138] - InheritedSize[0x00B0])
class UBurnableComponent : public UActorComponent
{
public:
	bool                                               bIsBurning;                                                // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AZ4O[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsBurningSmoothInterpSpeed;                                // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireDistanceMaxValue;                                      // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireDistanceSmoothInterpSpeed;                             // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsBurningSmoothed;                                         // 0x00C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMasterField>                 CurrentFireField;                                          // 0x00C4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  FireInstigator;                                            // 0x00CC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       FireAgent;                                                 // 0x00D4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireDamage;                                                // 0x00DC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireDamageTick;                                            // 0x00E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireEnd;                                                   // 0x00E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastFireDamageTime;                                        // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceIntoFireField;                                     // 0x00EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceIntoFireFieldSmoothed;                             // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VFJX[0x4];                                     // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BurningParticles;                                          // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentBurningParticles;                                   // 0x0100(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              CurrentBurningSound;                                       // 0x0108(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BurningAttachSocket;                                       // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BurningSound;                                              // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AX8M[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.BurnableComponent");
		return ptr;
	}



	void StopBurningCosmetic();
	void StartBurningCosmetic();
	void StartBurning(float Duration, float Damage, float Tick, class AActor* DamageAgent, class AController* InstigatorController);
	void SetOnFire(class AMasterField* FireField);
	bool GetIsBurning();
	void DouseFire();
};

// Class Mordhau.VehicleBase
// 0x01C8 (FullSize[0x0458] - InheritedSize[0x0290])
class AVehicleBase : public AWheeledVehicle
{
public:
	unsigned char                                      UnknownData_PG96[0x18];                                    // 0x0290(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       VehicleName;                                               // 0x02A8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MJ7R[0x20];                                    // 0x02C0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauVehicleComponent*                    VehicleComponent;                                          // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageableComponent*                        DamageableComponent;                                       // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHealthStatComponent*                        HealthStatComponent;                                       // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBurnableComponent*                          BurnableComponent;                                         // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RagdollPhysicsAsset;                                       // 0x0300(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDead;                                                   // 0x0308(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsHighlighted;                                            // 0x0309(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPerformCustomDepthHighlight;                              // 0x030A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WFGZ[0x5];                                     // 0x030B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauWidgetComponent*                     InteractionWidgetComponent;                                // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      InteractionWidgetComponentClass;                           // 0x0318(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      InteractionWidgetClass;                                    // 0x0320(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P31E[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  InteractionWidgetRelativeTransform;                        // 0x0330(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAutoDetermineWidgetTransform;                             // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W57O[0x3];                                     // 0x0361(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OutOfBoundsKillTime;                                       // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bResetLookUpWhenNoDriver;                                  // 0x0368(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L44X[0x3];                                     // 0x0369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDistanceCorrectionForLeaveSpot;                         // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ReplicatedVehicleFlags;                                    // 0x0370(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6IUK[0x3];                                     // 0x0371(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NetworkSimulatedSmoothRotationTime;                        // 0x0374(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LookUpLimit;                                               // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookDownLimit;                                             // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedLookUpValue;                                     // 0x0380(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SN56[0x3];                                     // 0x0381(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AccumulatedLookLag;                                        // 0x0384(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingTarget;                                // 0x0390(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingFrom;                                  // 0x0394(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingStartTime;                             // 0x0398(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValueSmoothingEndTime;                               // 0x039C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookSmoothingSlowAlpha;                                    // 0x03A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpRateCap;                                             // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpRateCapTarget;                                       // 0x03A8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpCapRemaining;                                        // 0x03AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookUpValue;                                               // 0x03B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseSmoothedLookUpValue;                                  // 0x03B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseSmoothingLookUpVelocity;                              // 0x03B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SLH3[0x3C];                                    // 0x03BC(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FNetState                                   LatestState;                                               // 0x03F8(0x0028) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              NetTimeBehind;                                             // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NetSendRate;                                               // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QP4Q[0x30];                                    // 0x0428(0x0030) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.VehicleBase");
		return ptr;
	}



	class UParticleSystemComponent* SpawnParticlesAttached(class UParticleSystem* Particle, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<Engine_EAttachLocation> AttachType, const struct FName& Socket);
	void Server_Unreliable_LookUp(float NewLookUp);
	void Server_SetRight(float InRight);
	void Server_SetForward(float InForward);
	void Server_Reliable_RequestUse();
	void PostInteractionWidgetCreated();
	class UAudioComponent* PlaySound(class USoundBase* Sound, const struct FName& bone, const struct FVector& InLocation, TEnumAsByte<Engine_EAttachLocation> AttachLocation, bool bAttach, class USoundAttenuation* Override, float VolumeMultiplier, float PitchMultiplier);
	void OnTookDamage(bool bWillKill, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void OnRep_ReplicatedVehicleFlags();
	void OnRep_ReplicatedLookUpValue();
	void OnRep_LatestState();
	void OnDied(float Angle, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void OnDeath();
	void NetStateSend();
	void LookUpNotAbsolute(float Value);
	void LookUpAtRate(float Value);
	void LookUp(float Value, bool bIsAbsolute);
	float GetRawLookUpValue();
	float GetLookUpValue();
	class AMordhauCharacter* GetDriver();
};

// Class Mordhau.Cannon
// 0x0028 (FullSize[0x0480] - InheritedSize[0x0458])
class ACannon : public AVehicleBase
{
public:
	unsigned char                                      UnknownData_Y6J2[0x4];                                     // 0x0458(0x0004) Fix Super Size
	struct FName                                       HoleSocketName;                                            // 0x045C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinXYDistanceToLoad;                                       // 0x0464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   MinZDistanceToLoad;                                        // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileTurretShooterComponent*           ShooterComponent;                                          // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D1TX[0x8];                                     // 0x0478(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Cannon");
		return ptr;
	}



};

// Class Mordhau.CannonMovementComponent
// 0x0020 (FullSize[0x02B0] - InheritedSize[0x0290])
class UCannonMovementComponent : public USimpleWheeledVehicleMovementComponent
{
public:
	float                                              DriveTorque;                                               // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DriveWheelAngle;                                           // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateTorque;                                              // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateWheelAngle;                                          // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BrakeStrength;                                             // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Bias;                                                      // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VUWA[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CannonMovementComponent");
		return ptr;
	}



};

// Class Mordhau.CapturePointBanner
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class ACapturePointBanner : public AActor
{
public:
	class AControlPoint*                               ControlPoint;                                              // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CaptureProgress;                                           // 0x0228(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RopeMaterialIndex;                                         // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FlagMaterialIndex;                                         // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RopeSpeed;                                                 // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    RopeMaterialInstance;                                      // 0x0238(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    FlagMaterialInstance;                                      // 0x0240(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CapturePointBanner");
		return ptr;
	}



	void UpdateVisuals();
	void InitializeBanner(class AControlPoint* OwningPoint);
};

// Class Mordhau.Catapult
// 0x0008 (FullSize[0x0460] - InheritedSize[0x0458])
class ACatapult : public AVehicleBase
{
public:
	class UProjectileArmShooterComponent*              ProjectileArmShooter;                                      // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Catapult");
		return ptr;
	}



};

// Class Mordhau.CatapultMovementComponent
// 0x0038 (FullSize[0x02C8] - InheritedSize[0x0290])
class UCatapultMovementComponent : public USimpleWheeledVehicleMovementComponent
{
public:
	float                                              DriveTorque;                                               // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DriveWheelAngle;                                           // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateFrontTorque;                                         // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateRearTorque;                                          // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateFrontWheelAngle;                                     // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateRearWheelAngle;                                      // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BrakeStrength;                                             // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Bias;                                                      // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StuckVelocity;                                             // 0x02B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotateDelay;                                               // 0x02B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q9IN[0x10];                                    // 0x02B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CatapultMovementComponent");
		return ptr;
	}



};

// Class Mordhau.ChangeLevelCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UChangeLevelCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ChangeLevelCommand");
		return ptr;
	}



};

// Class Mordhau.ChangeTeamCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UChangeTeamCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ChangeTeamCommand");
		return ptr;
	}



};

// Class Mordhau.CharacterBurnableComponent
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UCharacterBurnableComponent : public UBurnableComponent
{
public:
	unsigned char                                      UnknownData_SD60[0x8];                                     // 0x0138(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterBurnableComponent");
		return ptr;
	}



};

// Class Mordhau.CharacterFace
// 0x0180 (FullSize[0x01D8] - InheritedSize[0x0058])
class UCharacterFace : public UMordhauInventoryItem
{
public:
	class USkeletalMesh*                               Mesh;                                                      // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Albedo;                                                    // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Normal;                                                    // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  AgedNormal;                                                // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  PBRMap;                                                    // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TorsoAlbedo;                                               // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TorsoNormal;                                               // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TorsoPBRMap;                                               // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Arms1PAlbedo;                                              // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Arms1PNormal;                                              // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Arms1PPBRMap;                                              // 0x00A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SkinColorTable;                                            // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_48BA[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     EyebrowOffset;                                             // 0x00B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     EyebrowScale;                                              // 0x00C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     EyebrowDistance;                                           // 0x00CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EyebrowRotation;                                           // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      EyeColorTable;                                             // 0x00DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CUOB[0x3];                                     // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               Eyes;                                                      // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               LeftArm;                                                   // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               LeftArm1P;                                                 // 0x00F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               RightArm;                                                  // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               RightArm1P;                                                // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               LeftHand;                                                  // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               LeftHand1P;                                                // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               RightHand;                                                 // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               RightHand1P;                                               // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               LeftLeg;                                                   // 0x0128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               RightLeg;                                                  // 0x0130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               LeftFoot;                                                  // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               RightFoot;                                                 // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               Torso;                                                     // 0x0148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               FullArmAuxiliaryMesh;                                      // 0x0150(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               FullArmAuxiliaryMesh1P;                                    // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               ForeArmAuxiliaryMesh;                                      // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               ForeArmAuxiliaryMesh1P;                                    // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               UpperChestAuxiliaryMesh;                                   // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodOffsetA;                                              // 0x0178(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodOffsetB;                                              // 0x0184(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodMaskSizeFine;                                         // 0x0190(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodMaskSizeSoft;                                         // 0x019C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BloodTextureSize;                                          // 0x01A8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5ZSX[0x4];                                     // 0x01B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              Hair;                                                      // 0x01B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              FacialHair;                                                // 0x01C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterFace");
		return ptr;
	}



};

// Class Mordhau.CharacterHair
// 0x0020 (FullSize[0x0078] - InheritedSize[0x0058])
class UCharacterHair : public UMordhauInventoryItem
{
public:
	class USkeletalMesh*                               Mesh;                                                      // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Albedo;                                                    // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Normal;                                                    // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      HairColorTable;                                            // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NYQC[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterHair");
		return ptr;
	}



};

// Class Mordhau.LODSkeletalMeshComponent
// 0x00C4 (FullSize[0x0B80] - InheritedSize[0x0ABC])
class ULODSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	unsigned char                                      UnknownData_M9NV[0x4];                                     // 0x0ABC(0x0004) Fix Super Size
	unsigned char                                      UnknownData_QPH1[0x80];                                    // 0x0AC0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LODDeltaTime;                                              // 0x0B40(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastLODDeltaTime;                                          // 0x0B44(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasSkippedThisFrame;                                      // 0x0B48(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R2P4[0x3];                                     // 0x0B49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FramesSinceLastLODTick;                                    // 0x0B4C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FramesUntilNextLODTick;                                    // 0x0B50(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseBoneRadiusBounds;                                      // 0x0B54(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_91HD[0x3];                                     // 0x0B55(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BoneRadiusBoundsBoneName;                                  // 0x0B58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BoneRadiusBoundsRadius;                                    // 0x0B60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLODDeltaTime;                                           // 0x0B64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSmoothClothLODTransition;                                 // 0x0B68(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F0FO[0x3];                                     // 0x0B69(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClothLODTransitionSpeed;                                   // 0x0B6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipTransformUpdate;                                      // 0x0B70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreventTicking;                                           // 0x0B71(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUpdateLODIfPreventTicking;                                // 0x0B72(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceNextTick;                                            // 0x0B73(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GTB0[0xC];                                     // 0x0B74(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LODSkeletalMeshComponent");
		return ptr;
	}



};

// Class Mordhau.CharacterMeshComponent
// 0x00C0 (FullSize[0x0C40] - InheritedSize[0x0B80])
class UCharacterMeshComponent : public ULODSkeletalMeshComponent
{
public:
	unsigned char                                      UnknownData_EKXG[0x18];                                    // 0x0B80(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      MaxWounds;                                                 // 0x0B98(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X1EM[0x7];                                     // 0x0B99(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USkeletalMeshComponent*>              BloodReceivingSkeletalMeshes;                              // 0x0BA0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BloodIntensityParamName;                                   // 0x0BB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0K8G[0x28];                                    // 0x0BB8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicsAsset*                               RagdollFallingFromPhysicsAsset;                            // 0x0BE0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RagdollFallingProfileName;                                 // 0x0BE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RagdollFallingPhysicsAsset;                                // 0x0BF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFallingBlendOutSpeed;                               // 0x0BF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RagdollFallingApplyForce;                                  // 0x0BFC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RagdollFallingApplyForceAir;                               // 0x0C08(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RagdollFallingApplyForceBoneName;                          // 0x0C14(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_09LI[0xC];                                     // 0x0C1C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UMaterialInstanceDynamic>> DissolveMaterialInstances;                                 // 0x0C28(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BPJB[0x8];                                     // 0x0C38(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterMeshComponent");
		return ptr;
	}



	void OnCharacterStoppedRagdollFalling();
	void OnCharacterStartedRagdollFalling();
	void OnCharacterLODTick(float DeltaTime);
	void OnCharacterDied(class AAdvancedCharacter* Character);
};

// Class Mordhau.CharacterProfileBPWrapper
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
class UCharacterProfileBPWrapper : public UObject
{
public:
	struct FCharacterProfile                           Profile;                                                   // 0x0028(0x00B8) (BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterProfileBPWrapper");
		return ptr;
	}



	void TogglePerk(unsigned char Perk);
	void SetWearablePattern(unsigned char Slot, unsigned char NewPattern);
	void SetWearableId(unsigned char Slot, unsigned char NewId);
	void SetWearableColor(unsigned char Slot, unsigned char ColorIdx, unsigned char NewColor);
	void SetVoicePitch(unsigned char NewValue);
	void SetVoice(unsigned char NewValue);
	void SetStrong(unsigned char NewValue);
	void SetSkinny(unsigned char NewValue);
	void SetSkinColor(unsigned char NewValue);
	void SetProfileName(const struct FText& NewName);
	void SetProfileCategory(const struct FString& NewCategory);
	void SetMetalTint(unsigned char NewValue);
	void SetMetalRoughnessScale(unsigned char NewValue);
	void SetIsFemale(bool bNewValue);
	void SetHairColor(unsigned char NewValue);
	void SetHair(unsigned char NewValue);
	void SetFat(unsigned char NewValue);
	void SetFacialHair(unsigned char NewValue);
	void SetFace(unsigned char NewValue);
	void SetEyeColor(unsigned char NewValue);
	void SetEyebrows(unsigned char NewValue);
	void SetEquipmentSkin(unsigned char Slot, unsigned char NewSkin);
	void SetEquipmentPattern(unsigned char Slot, unsigned char NewPattern);
	void SetEquipmentPartId(unsigned char Slot, unsigned char PartIdx, unsigned char NewPartId);
	void SetEquipmentId(unsigned char Slot, unsigned char NewId);
	void SetEquipmentCustomizationDirect(unsigned char Slot, const struct FEquipmentCustomization& NewCustomization);
	void SetEquipmentColor(unsigned char Slot, unsigned char ColorIdx, unsigned char NewColor);
	void SetEmblemColor(unsigned char ColorIdx, unsigned char NewValue);
	void SetEmblem(unsigned char NewValue);
	void SetAge(unsigned char NewValue);
	void RemoveAllEquipment();
	bool HasPerk(unsigned char Perk);
	void ForceValidate();
};

// Class Mordhau.CharacterVoice
// 0x0048 (FullSize[0x00A0] - InheritedSize[0x0058])
class UCharacterVoice : public UMordhauInventoryItem
{
public:
	class USoundCue*                                   VoiceCommands;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   Hurt;                                                      // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   Death;                                                     // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   AttackYell;                                                // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   Breathing;                                                 // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   Screaming;                                                 // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   PitchLimits;                                               // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        ClipCounts;                                                // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterVoice");
		return ptr;
	}



};

// Class Mordhau.CharacterVoiceComponent
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UCharacterVoiceComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_VHRQ[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UAudioComponent>              LastHurtYell;                                              // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              DeathScreamPtr;                                            // 0x00C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastVoiceCommand;                                          // 0x00C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastAttackYell;                                            // 0x00D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastScream;                                                // 0x00D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterVoice*                             CharacterVoice;                                            // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRequestedVoiceCommandTime;                             // 0x00E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VoiceCommandQueueDuration;                                 // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDelayBetweenVoiceCommands;                              // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDelayBetweenBattlecries;                                // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VoicePitch;                                                // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsVoiceMuffled;                                           // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_67KC[0x3];                                     // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MuffledVoiceLowPassFrequency;                              // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuffledVoiceVolumeMultiplier;                              // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackYellVolumeMultiplierViewTarget;                      // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CXM8[0x4];                                     // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                FaceAttackAnimation;                                       // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FaceBattlecryAnimation;                                    // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FaceTalkingAnimation;                                      // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FaceHurtAnimation;                                         // 0x0128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CharacterVoiceComponent");
		return ptr;
	}



	void UpdateVoiceDataFromCharacter();
	void OnVoiceCommandReplicated();
	void OnTakeDamage(class AAdvancedCharacter* Character, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser);
	void OnLODTick(float DeltaTime);
	void OnCharacterDied(class AAdvancedCharacter* Character);
	void OnCharacterBuilt(class AMordhauCharacter* Character);
};

// Class Mordhau.ClimbingMotion
// 0x0078 (FullSize[0x0118] - InheritedSize[0x00A0])
class UClimbingMotion : public UMordhauMotion
{
public:
	class USoundCue*                                   ClimbSound;                                                // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbRecoveryDuration;                                     // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbAnimBlendOutOffset;                                   // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AuthorityMoveUpStartTime;                                  // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AuthorityMoveLateralStartTime;                             // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AuthorityMoveLateralDuration;                              // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowClimbRecoveryDuration;                                 // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowAuthorityMoveUpStartTime;                              // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowAuthorityMoveLateralStartTime;                         // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowAuthorityMoveLateralDuration;                          // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   TurnCaps;                                                  // 0x00CC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSlowClimb;                                              // 0x00D4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OBA5[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ClimbOffset;                                               // 0x00D8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LedgeOffset;                                               // 0x00E4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LedgeNormal;                                               // 0x00F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClimbStartMeshLocation;                                    // 0x00FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AuthMoveStartLocation;                                     // 0x0108(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAuthMovingUp;                                           // 0x0114(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAuthMovingLaterally;                                    // 0x0115(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SLIR[0x2];                                     // 0x0116(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ClimbingMotion");
		return ptr;
	}



};

// Class Mordhau.ComboBoxText
// 0x0CE8 (FullSize[0x0DF0] - InheritedSize[0x0108])
class UComboBoxText : public UWidget
{
public:
	TArray<struct FText>                               DefaultOptions;                                            // 0x0108(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FText                                       SelectedOption;                                            // 0x0118(0x0018) (Edit, NativeAccessSpecifierPrivate)
	struct FComboBoxStyle                              WidgetStyle;                                               // 0x0130(0x03F0) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTableRowStyle                              ItemStyle;                                                 // 0x0520(0x07C8) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMargin                                     ContentPadding;                                            // 0x0CE8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MaxListHeight;                                             // 0x0CF8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasDownArrow;                                              // 0x0CFC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableGamepadNavigationMode;                               // 0x0CFD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XOS4[0x2];                                     // 0x0CFE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateFontInfo                              Font;                                                      // 0x0D00(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                                 ForegroundColor;                                           // 0x0D50(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bIsFocusable;                                              // 0x0D78(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WW3O[0x3];                                     // 0x0D79(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptDelegate                             OnGenerateWidgetEvent;                                     // 0x0D7C(0x0010) (Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WYM0[0x4];                                     // 0x0D8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSelectionChanged;                                        // 0x0D90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOpening;                                                 // 0x0DA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DEPM[0x40];                                    // 0x0DB0(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ComboBoxText");
		return ptr;
	}



	void SetSelectedOption(const struct FText& Option);
	bool RemoveOption(const struct FText& Option);
	void RefreshOptions();
	void OnSelectionChangedEvent__DelegateSignature(const struct FText& SelectedItem, TEnumAsByte<SlateCore_ESelectInfo> SelectionType);
	void OnOpeningEvent__DelegateSignature();
	struct FText GetSelectedOption();
	int GetOptionCount();
	struct FText GetOptionAtIndex(int Index);
	int FindOptionIndex(const struct FText& Option);
	void ClearSelection();
	void ClearOptions();
	void AddOption(const struct FText& Option);
};

// Class Mordhau.CompoundVehicleAnimInstance
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UCompoundVehicleAnimInstance : public UAdvancedCharacterAnimInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CompoundVehicleAnimInstance");
		return ptr;
	}



};

// Class Mordhau.ConfigCommand
// 0x0050 (FullSize[0x00D0] - InheritedSize[0x0080])
class UConfigCommand : public URconCommand
{
public:
	TMap<struct FString, Mordhau_EConfigValueType>     ValueTypes;                                                // 0x0080(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ConfigCommand");
		return ptr;
	}



};

// Class Mordhau.ControlPoint
// 0x0118 (FullSize[0x0338] - InheritedSize[0x0220])
class AControlPoint : public AActor
{
public:
	TArray<class AActor*>                              OverlapsCache;                                             // 0x0220(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FText                                       Name;                                                      // 0x0230(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bShouldPauseCaptureIfEnemyNear;                            // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHiddenPoint;                                            // 0x0249(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCapturable;                                             // 0x024A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeam1OwnsPrerequisites;                                   // 0x024B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeam2OwnsPrerequisites;                                   // 0x024C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnsDisabled;                                           // 0x024D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4T4V[0x2];                                     // 0x024E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    DecalMaterialInstance;                                     // 0x0250(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnsTeam;                                                // 0x0258(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnsToken;                                               // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMordhauWidgetComponent*                     WidgetComponent;                                           // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotShowFloaterWidget;                                   // 0x0268(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotShowInTopBarWidget;                                  // 0x0269(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8R8H[0x6];                                     // 0x026A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          UIMaterial;                                                // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    UIMaterialInstance;                                        // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                LastSetUIIconColor;                                        // 0x0280(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                LastSetUIBorderColor;                                      // 0x0290(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSetUIProgress;                                         // 0x02A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AwardScoreInterval;                                        // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AwardScoreCapturing;                                       // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AwardScoreCaptured;                                        // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AwardScoreNeutralizing;                                    // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AwardScoreNeutralized;                                     // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ACapturePointBanner*>                 Banners;                                                   // 0x02B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                         CaptureArea;                                               // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CaptureProgress;                                           // 0x02D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnchangedCaptureProgressTime;                              // 0x02D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBannersDoNotAnimateCaptureProgress;                       // 0x02D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedCaptureProgress;                                 // 0x02D9(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ASVG[0x2];                                     // 0x02DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NetworkSmoothTime;                                         // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      OwningTeam;                                                // 0x02E0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CapturingTeam;                                             // 0x02E1(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6OPK[0x6];                                     // 0x02E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AControlPoint*>                       Team1PrerequisitePoints;                                   // 0x02E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AControlPoint*>                       Team2PrerequisitePoints;                                   // 0x02F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AMordhauPlayerStart*>                 SpawnPoints;                                               // 0x0308(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team1Presence;                                             // 0x0318(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team2Presence;                                             // 0x031C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFlashing;                                               // 0x0320(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreventSpawningIfContested;                               // 0x0321(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasEverReplicatedProgress;                                // 0x0322(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0I47[0x1];                                     // 0x0323(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UncaptureSpeed;                                            // 0x0324(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 NeutralizeSpeedCurve;                                      // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 CaptureSpeedCurve;                                         // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ControlPoint");
		return ptr;
	}



	void UpdateVisuals();
	void UpdateUIWidgets();
	void UpdateUIMaterialInstance();
	void UpdatePresenceNumbers();
	void UpdateCaptureProgress(float DeltaTime);
	void SetOwningTeam(unsigned char NewTeam);
	void SetCapturingTeam(unsigned char NewTeam);
	void SetCaptureProgress(float NewProgress, unsigned char NewCaptor, bool bAwardScore);
	void OnStoppedFlashing();
	void OnStartedFlashing();
	void OnRep_ReplicatedCaptureProgress();
	void OnRep_OwningTeam();
	void OnRep_CapturingTeam();
	void OnOwningTeamChanged();
	void OnCapturingTeamChanged();
	void OnCaptureAreaEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnCaptureAreaBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void EnemyLostPrerequisites();
	void EnemyGainedPrerequisites();
	bool CanCapture(unsigned char Team);
};

// Class Mordhau.CouchedAttackMotion
// 0x0028 (FullSize[0x1118] - InheritedSize[0x10F0])
class UCouchedAttackMotion : public UAttackMotion
{
public:
	float                                              CouchingBlendFrom;                                         // 0x10F0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CouchStage;                                                // 0x10F4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3ZF0[0x3];                                     // 0x10F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CouchStart;                                                // 0x10F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CouchFeintLockOut;                                         // 0x10FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCouchTime;                                              // 0x1100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveryDuration;                                          // 0x1104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OriginalSecondaryTurnLimit;                                // 0x1108(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AHorse>                       HorsePtr;                                                  // 0x110C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ESMF[0x4];                                     // 0x1114(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CouchedAttackMotion");
		return ptr;
	}



};

// Class Mordhau.CreatureAnimInstance
// 0x0050 (FullSize[0x0380] - InheritedSize[0x0330])
class UCreatureAnimInstance : public UAdvancedCharacterAnimInstance
{
public:
	float                                              MinEndBone2DDistanceToRetrace;                             // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7TRW[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFootGroundingLimb>                  GroundingLimbs;                                            // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bComputeGroundingRotation;                                 // 0x0348(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0LM1[0x3];                                     // 0x0349(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LandOffsetBlendInTime;                                     // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandOffsetBlendInSpeed;                                    // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandOffsetBlendOutSpeed;                                   // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LandOffset;                                                // 0x0358(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotAddLandOffsetToGrounding;                            // 0x0364(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CM7Y[0x3];                                     // 0x0365(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 LandOffsetFactorByAirTime;                                 // 0x0368(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XXVX[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CreatureAnimInstance");
		return ptr;
	}



	void DoFootstep(int Limb);
};

// Class Mordhau.CrowdObstacleComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UCrowdObstacleComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_B5ZH[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnabledOnStart;                                           // 0x00B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QW81[0x3];                                     // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ObstacleRadius;                                            // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ObstacleHalfHeigth;                                        // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocationOffset;                                            // 0x00C4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_41DU[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CrowdObstacleComponent");
		return ptr;
	}



	void UnregisterObstacle();
	void RegisterObstacle();
};

// Class Mordhau.CustomizationReplicationActor
// 0x01F8 (FullSize[0x0418] - InheritedSize[0x0220])
class ACustomizationReplicationActor : public AActor
{
public:
	bool                                               bHasReplicatedAnything;                                    // 0x0220(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LastRebuiltVersionTracker;                                 // 0x0221(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S9BD[0x6];                                     // 0x0222(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterProfile                           LastAssignedProfile;                                       // 0x0228(0x00B8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AMordhauCharacter>>    RegisteredCharacters;                                      // 0x02E0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasEverAssigned;                                          // 0x02F0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillDestroyOnUnregister;                                  // 0x02F1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RKNK[0x6];                                     // 0x02F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               Cached1PMesh;                                              // 0x02F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               Cached1PDeadMesh;                                          // 0x0300(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               CachedUnifiedMesh;                                         // 0x0308(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRepFaceArrayShortWithVersion               ReplicatedFaceBonesTranslate;                              // 0x0310(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepFaceArrayShortWithVersion               ReplicatedFaceBonesRotate;                                 // 0x0328(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepFaceArrayShortWithVersion               ReplicatedFaceBonesScale;                                  // 0x0340(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepArrayAppearanceWithVersion              ReplicatedAppearanceCustomization;                         // 0x0358(0x0030) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepArraySkillsWithVersion                  ReplicatedSkillsCustomization;                             // 0x0388(0x0008) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FRepArrayByteWithVersion                    ReplicatedDefaultEquipmentId;                              // 0x0390(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              DefaultEquipment;                                          // 0x03A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRepArrayByteWithVersion                    ReplicatedWearableId;                                      // 0x03B8(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepArrayByteWithVersion                    ReplicatedWearableColor1;                                  // 0x03D0(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepArrayByteWithVersion                    ReplicatedWearableColor2;                                  // 0x03E8(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FRepArrayByteWithVersion                    ReplicatedWearablePattern;                                 // 0x0400(0x0018) (Net, RepNotify, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CustomizationReplicationActor");
		return ptr;
	}



	void UpdateCharacterProfile(class AMordhauCharacter* Character);
	void UnregisterCharacter(class AMordhauCharacter* Character);
	void TriggerUpdateIfUpToDate();
	void RegisterCharacter(class AMordhauCharacter* Character);
	void OnRep_ReplicatedWearablePattern();
	void OnRep_ReplicatedWearableId();
	void OnRep_ReplicatedWearableColor2();
	void OnRep_ReplicatedWearableColor1();
	void OnRep_ReplicatedSkillsCustomization();
	void OnRep_ReplicatedFaceBonesTranslate();
	void OnRep_ReplicatedFaceBonesScale();
	void OnRep_ReplicatedFaceBonesRotate();
	void OnRep_ReplicatedDefaultEquipmentId();
	void OnRep_ReplicatedAppearanceCustomization();
	bool IsUpToDate();
	void AssignDataFromProfile(const struct FCharacterProfile& Profile);
};

// Class Mordhau.DamageableComponent
// 0x0078 (FullSize[0x0128] - InheritedSize[0x00B0])
class UDamageableComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class AActor>                       LastDamageAgent;                                           // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       LastDamageSource;                                          // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  LastDamageInstigator;                                      // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamDamageModifier;                                        // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireDamageModifier;                                        // 0x00CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallDamageModifier;                                        // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedDamageModifier;                                      // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageModifier;                                            // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDamage;                                                 // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageAbsorption;                                          // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnProtectionDuration;                                   // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EPhysicalSurface>               Surface;                                                   // 0x00E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopsMeleeAttacks;                                        // 0x00E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4SJS[0x2];                                     // 0x00EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FNetDamage                                  NetDamage;                                                 // 0x00EC(0x0024) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PVEE[0x18];                                    // 0x0110(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DamageableComponent");
		return ptr;
	}



	void OnTookDamage(bool bWillKill, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	float OnTakeDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser);
	void OnRep_NetDamage();
	void OnPostTakeDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser);
	void OnKilled();
	float ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser);
};

// Class Mordhau.DisarmedMotion
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UDisarmedMotion : public UMordhauMotion
{
public:
	float                                              RecoveryTime;                                              // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4KHF[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DisarmedMotion");
		return ptr;
	}



};

// Class Mordhau.DismemberableComponent
// 0x0270 (FullSize[0x0320] - InheritedSize[0x00B0])
class UDismemberableComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class AActor>                       QueuedDismemberAgent;                                      // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASeparatedBodyPart>           SeparatedHead;                                             // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ASeparatedBodyPart>>   SeparatedBodyParts;                                        // 0x00C0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, TWeakObjectPtr<class AActor>>   AttachedGoreMeshes;                                        // 0x00D0(0x0050) (UObjectWrapper, NativeAccessSpecifierPublic)
	unsigned char                                      DismemberedBones[0x50];                                    // 0x0120(0x0050) UNKNOWN PROPERTY: SetProperty
	struct FWoundInfo                                  DismemberWoundInfo;                                        // 0x0170(0x0014) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EAK0[0x4];                                     // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BodyPart;                                                  // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   DismembermentGore;                                         // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BluntDismembermentGore;                                    // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OutGoreMeshBlunt;                                          // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OutGoreMesh;                                               // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OutGoreMeshNeck;                                           // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LimbExplosionParticle;                                     // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistFromBoneForAnyDismember;                            // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAngleDistFromBoneForAnyDismember;                       // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistFromBoneForFullDismember;                           // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAngleDistFromBoneForFullDismember;                      // 0x01CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollMaxDistFromBoneForAnyDismember;                     // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollMaxDistFromBoneForFullDismember;                    // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          MinimumDamageToExplode;                                    // 0x01D8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          MinimumDamageToDismember;                                  // 0x0228(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          MinimumDamageToPartialDismember;                           // 0x0278(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector2D                                   DismemberArmsSpineYawPitchLimit;                           // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      DismemberableBones[0x50];                                  // 0x02D0(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DismemberableComponent");
		return ptr;
	}



	bool TryDismember(const struct FName& bone, const struct FVector& Point, class AMordhauWeapon* Weapon, Mordhau_EAttackMove Move, bool bIsRagdollDismember);
	bool QueueDismember(const struct FName& bone, bool bIsDismemberPartial, bool bIsBluntForce, const struct FVector& Force, class AActor* Agent);
	bool ProcessQueuedDismemberment();
	void OnCharacterCameraStyleChanged(class AMordhauCharacter* Character);
	bool IsBoneDismembered(const struct FName& bone);
	class ASeparatedBodyPart* Dismember(struct FDismemberedBoneData* InDismemberedBoneData);
	bool CanDismember(const struct FName& bone);
};

// Class Mordhau.DriverComponent
// 0x00B0 (FullSize[0x0160] - InheritedSize[0x00B0])
class UDriverComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_MB73[0xB0];                                    // 0x00B0(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DriverComponent");
		return ptr;
	}



	void OnLateTick(float DeltaTime);
};

// Class Mordhau.DropEquipmentMotion
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UDropEquipmentMotion : public UMordhauMotion
{
public:
	bool                                               bIsDroppingRightHand;                                      // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WW7C[0x7];                                     // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauEquipment*                           DroppingEquipment;                                         // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DropTime;                                                  // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasDropped;                                               // 0x00BC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HD8M[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DropEquipmentMotion");
		return ptr;
	}



};

// Class Mordhau.ECSActor
// 0x0108 (FullSize[0x0328] - InheritedSize[0x0220])
class AECSActor : public AActor
{
public:
	int                                                TotalCharacters;                                           // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlaneTopLeft;                                              // 0x0224(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlaneBottomRight;                                          // 0x0230(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveVelocityMax;                                           // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AnimTicksPerFrame;                                         // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TW5N[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionEnabled>              CollisionEnabled;                                          // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4AIA[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicsAsset*                               PhysicsAsset;                                              // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AnimInstance;                                              // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UECSSkeletalMeshComponent*>           SkeletalMeshComponents;                                    // 0x0268(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharPhysics>                        CharPhysics;                                               // 0x0278(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharMove>                           CharMove;                                                  // 0x0288(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ACharacter*>                          ManagedCharacters;                                         // 0x0298(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharPhysics>                        ManagedCharPhysics;                                        // 0x02A8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharMove>                           ManagedCharMove;                                           // 0x02B8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FECSDuringPhysicsTickFunction               DuringPhysicsTickFunction;                                 // 0x02C8(0x0030) (NativeAccessSpecifierPublic)
	struct FECSPostPhysicsTickFunction                 PostPhysicsTickFunction;                                   // 0x02F8(0x0030) (NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ECSActor");
		return ptr;
	}



	void AddManagedCharacter(class ACharacter* Character);
};

// Class Mordhau.ECSSkeletalMeshComponent
// 0x0004 (FullSize[0x0AC0] - InheritedSize[0x0ABC])
class UECSSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	float                                              AccumulatedDeltaTime;                                      // 0x0ABC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ECSSkeletalMeshComponent");
		return ptr;
	}



};

// Class Mordhau.Emblem
// 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
class UEmblem : public UMordhauInventoryItem
{
public:
	class UTexture2D*                                  Texture;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Emblem");
		return ptr;
	}



};

// Class Mordhau.EmoteCancelMotion
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UEmoteCancelMotion : public UMordhauMotion
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EmoteCancelMotion");
		return ptr;
	}



};

// Class Mordhau.EmoteMotion
// 0x0090 (FullSize[0x0130] - InheritedSize[0x00A0])
class UEmoteMotion : public UMordhauMotion
{
public:
	struct FText                                       EmoteName;                                                 // 0x00A0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CanEmoteAfter;                                             // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CancelTime;                                                // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CancelBlendTime;                                           // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   TurnCaps;                                                  // 0x00C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                TransitionInMontage;                                       // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                TransitionOutMontage;                                      // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FaceMontage;                                               // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartMontageTime;                                          // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartTransitionOutMontageTime;                             // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForce3P;                                                  // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideLeftHand;                                             // 0x00F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideRightHand;                                            // 0x00FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUnequipLeftHand;                                          // 0x00FB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUnequipRightHand;                                         // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDropLeftHand;                                             // 0x00FD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UXK9[0x2];                                     // 0x00FE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LeftHandDropForce;                                         // 0x0100(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDropRightHand;                                            // 0x010C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3IJP[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RightHandDropForce;                                        // 0x0110(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasIn1P;                                                  // 0x011C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasStartedMainMontage;                                    // 0x011D(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasStartedMainMontageTransitionOut;                       // 0x011E(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S8V1[0x1];                                     // 0x011F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMordhauEquipment>            HidLeft;                                                   // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            HidRight;                                                  // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EmoteMotion");
		return ptr;
	}



	void DoDrop(class AMordhauEquipment* Equipment, const struct FVector& Force);
};

// Class Mordhau.EmoteSwitcherMotion
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UEmoteSwitcherMotion : public UMordhauMotion
{
public:
	unsigned char                                      SwitchToID;                                                // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FHHZ[0x7];                                     // 0x00A1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EmoteSwitcherMotion");
		return ptr;
	}



};

// Class Mordhau.EnterVehicleMotion
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UEnterVehicleMotion : public UMordhauMotion
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EnterVehicleMotion");
		return ptr;
	}



};

// Class Mordhau.EnvironmentMovable
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class AEnvironmentMovable : public AActor
{
public:
	Mordhau_ESwayMethod                                SwayMethod;                                                // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9Y1W[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class USceneComponent>              SwayingComponent;                                          // 0x0224(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RollPitchYawFrequency;                                     // 0x022C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RollPitchYawMagnitude;                                     // 0x0238(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RollPitchYawSpeed;                                         // 0x0244(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EnvironmentMovable");
		return ptr;
	}



	void InitializeMovable(class USceneComponent* InSwayingComponent, const struct FVector& InRollPitchYawFrequency, const struct FVector& InRollPitchYawMagnitude, const struct FVector& InRollPitchYawSpeed);
};

// Class Mordhau.EnvQueryGenerator_Equipment
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UEnvQueryGenerator_Equipment : public UEnvQueryGenerator
{
public:
	unsigned char                                      UnknownData_B9NX[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EnvQueryGenerator_Equipment");
		return ptr;
	}



};

// Class Mordhau.EnvQueryGenerator_Objectives
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UEnvQueryGenerator_Objectives : public UEnvQueryGenerator
{
public:
	unsigned char                                      UnknownData_M4NI[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EnvQueryGenerator_Objectives");
		return ptr;
	}



};

// Class Mordhau.EnvQueryTest_Objectives
// 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
class UEnvQueryTest_Objectives : public UEnvQueryTest
{
public:
	unsigned char                                      UnknownData_GSOI[0x8];                                     // 0x01F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EnvQueryTest_Objectives");
		return ptr;
	}



};

// Class Mordhau.EquipmentModeSwitchMotion
// 0x0050 (FullSize[0x00F0] - InheritedSize[0x00A0])
class UEquipmentModeSwitchMotion : public UMordhauMotion
{
public:
	float                                              Stage1Duration;                                            // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Stage2Duration;                                            // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMordhauEquipment*                           SwitchingEquipment;                                        // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VirtualReparentLocation;                                   // 0x00B8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OTY1[0xC];                                     // 0x00C4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FQuat                                       VirtualReparentRotation;                                   // 0x00D0(0x0010) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsSwitchingToAlt;                                         // 0x00E0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EModeSwitchType                            SwitchType;                                                // 0x00E1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZLD3[0x2];                                     // 0x00E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstStageEnd;                                             // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondStageEnd;                                            // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Stage;                                                     // 0x00EC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFinishedSwitch;                                        // 0x00ED(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GNQU[0x2];                                     // 0x00EE(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EquipmentModeSwitchMotion");
		return ptr;
	}



};

// Class Mordhau.EquipmentSwitchMotion
// 0x0038 (FullSize[0x00D8] - InheritedSize[0x00A0])
class UEquipmentSwitchMotion : public UMordhauMotion
{
public:
	float                                              UnhideAfterTimeIfDropped;                                  // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B6DV[0x1];                                     // 0x00A4(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasFinishedSwitch;                                        // 0x00A5(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SwitchingToSlot;                                           // 0x00A6(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NLL1[0x1];                                     // 0x00A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMordhauEquipment>            SwitchingTo;                                               // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            HiddenLeft;                                                // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            HiddenRight;                                               // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReachEnd;                                                  // 0x00C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_ESwitchStage                               Stage;                                                     // 0x00CC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CRST[0x3];                                     // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LocalVirtualReparentStart;                                 // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9FSF[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EquipmentSwitchMotion");
		return ptr;
	}



	class AMordhauEquipment* GetSwitchingTo();
};

// Class Mordhau.EquipmentSystemComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UEquipmentSystemComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_C912[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AMordhauEquipment>>    PrevReplicatedEquipment;                                   // 0x00C0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            PrevReplicatedLeftHandEquipment;                           // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            PrevReplicatedRightHandEquipment;                          // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        QuiverStaticMeshComponent;                                 // 0x00E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathEquipmentRagdollAngularFactor;                        // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathEquipmentRagdollTranslationalFactor;                  // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.EquipmentSystemComponent");
		return ptr;
	}



	void OnUnPossessed(class AAdvancedCharacter* Character);
	void OnPreBeginPlay(class AMordhauCharacter* Character);
	void OnLODTick(float DeltaTime);
	void OnLateTick(float DeltaTime);
	void OnCharacterVehicleChanged(class AMordhauCharacter* Character);
	void OnCharacterCameraStyleChanged(class AMordhauCharacter* Character);
	void OnAnyEquipmentStateChanged();
};

// Class Mordhau.FaceCustomizationComponent
// 0x01A8 (FullSize[0x0258] - InheritedSize[0x00B0])
class UFaceCustomizationComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_IMA9[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, int>                            BoneToParentGroupIdx;                                      // 0x00B8(0x0050) (NativeAccessSpecifierPublic)
	TMap<int, int>                                     BoneIdxToSculptableFaceBoneIdx;                            // 0x0108(0x0050) (NativeAccessSpecifierPublic)
	TMap<int, int>                                     SelectionBoneIdxToSculptableFaceBoneIdx;                   // 0x0158(0x0050) (NativeAccessSpecifierPublic)
	TMap<struct FName, int>                            BoneNameToSculptableFaceBoneIdx;                           // 0x01A8(0x0050) (NativeAccessSpecifierPublic)
	TArray<int>                                        BakedDefaultFaceValuesTranslate;                           // 0x01F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        BakedDefaultFaceValuesRotate;                              // 0x0208(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        BakedDefaultFaceValuesScale;                               // 0x0218(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HideEarsAmount;                                            // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HideNoseAmount;                                            // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegenerateBakedDefaultFaceValues;                         // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasScaryFace;                                             // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6AOB[0x2];                                     // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ScaryFaceRotationMultipliers;                              // 0x0234(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ScaryFaceTranslationMultipliers;                           // 0x0240(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ScaryFaceScaleMultipliers;                                 // 0x024C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FaceCustomizationComponent");
		return ptr;
	}



	void OnCharacterBuilt(class AMordhauCharacter* Character);
};

// Class Mordhau.FeintedMotion
// 0x0048 (FullSize[0x00E8] - InheritedSize[0x00A0])
class UFeintedMotion : public UMordhauMotion
{
public:
	float                                              SpineSpaceAdditiveBlendOutTime;                            // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QueueWindow;                                               // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowKickDuration;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StrikeAndStabLockoutIn;                                    // 0x00AC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   StrikeAndStabLockoutOut;                                   // 0x00B4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1U3A[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 StrikeAndStabLateFeintAdjustmentCurve;                     // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraStabLockout;                                          // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraStrikeLockout;                                        // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FSXM[0xC];                                     // 0x00D0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Mordhau_EFeintType                                 Type;                                                      // 0x00DC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                FromMove;                                                  // 0x00DD(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasQueuedMove;                                            // 0x00DE(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                QueuedMove;                                                // 0x00DF(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QueuedAngle;                                               // 0x00E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SW5G[0x4];                                     // 0x00E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FeintedMotion");
		return ptr;
	}



};

// Class Mordhau.FieldSpawnComponent
// 0x0030 (FullSize[0x0220] - InheritedSize[0x01F0])
class UFieldSpawnComponent : public USceneComponent
{
public:
	class UClass*                                      SubFieldClass;                                             // 0x01F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSnapLocationToGround;                                     // 0x01F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSnapLocationToGroundDestroyIfNoGround;                    // 0x01F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSnapRotationToGroundNormal;                               // 0x01FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UKZW[0x1];                                     // 0x01FB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAllowedRotation;                                        // 0x01FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SnapGroundTraceOffsetZ;                                    // 0x0200(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SnapGroundRadius;                                          // 0x0204(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceSnapGround;                                     // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldCheckLineOfSight;                                   // 0x020C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ED5F[0x3];                                     // 0x020D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LineOfSightRadiusCheck;                                    // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E552[0xC];                                     // 0x0214(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FieldSpawnComponent");
		return ptr;
	}



};

// Class Mordhau.MordhauActor
// 0x0158 (FullSize[0x0378] - InheritedSize[0x0220])
class AMordhauActor : public AActor
{
public:
	unsigned char                                      UnknownData_S4IZ[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMordhauPlayerController>     InstanceOwner;                                             // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedThud;                                            // 0x0230(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X69F[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDamageableComponent*                        DamageableComponent;                                       // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ThudSound;                                                 // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ThudPitchMultiplierRange;                                  // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ThudVolumeMultiplierRange;                                 // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldReplicateThud;                                      // 0x0258(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_979F[0x3];                                     // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ThudMinVelocity;                                           // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThudMaxVelocity;                                           // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDelayBetweenThuds;                                      // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoThudUntilTime;                                           // 0x0268(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OV1V[0x4];                                     // 0x026C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPreventClimbing;                                          // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TeamkillsCountForAutoKick;                                 // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I2GO[0x2];                                     // 0x0272(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStat                                       KillsStat;                                                 // 0x0274(0x000C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIgnoresBleedOut;                                          // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceLongDeathYell;                                       // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReceiveCosmeticHits;                                      // 0x0282(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T5EB[0x1];                                     // 0x0283(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollForceMultiplier;                                    // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceRagdollOnDeath;                                      // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LI0G[0x3];                                     // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastDamageLocation;                                        // 0x028C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastDamageNormal;                                          // 0x0298(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReplayPriorityFactor;                                      // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InterpolationSmoothTime;                                   // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSmoothNetworkMovement;                                    // 0x02AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RNWW[0x3];                                     // 0x02AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SmoothedLocationOffset;                                    // 0x02B0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YMJ2[0x4];                                     // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FQuat                                       SmoothedRotationOffset;                                    // 0x02C0(0x0010) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNetworkMovementSmoothingCompleted;                        // 0x02D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZQPD[0x7];                                     // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      InteractionWidgetComponentClass;                           // 0x02D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InteractionWidgetClass;                                    // 0x02E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       HeldInteractionText;                                       // 0x02E8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       InteractionText;                                           // 0x0300(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bNoInteractionWidgetWhenAttachedToChar;                    // 0x0318(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MEB7[0x7];                                     // 0x0319(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  InteractionWidgetRelativeTransform;                        // 0x0320(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bAutoDetermineWidgetTransform;                             // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W1OV[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauWidgetComponent*                     InteractionWidgetComponent;                                // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPerformCustomDepthHighlight;                              // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHighlighted;                                            // 0x0361(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IDE0[0x2];                                     // 0x0362(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxInteractWithDistance;                                   // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInteractable;                                           // 0x0368(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPassivelyInteractable;                                  // 0x0369(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FYWH[0x2];                                     // 0x036A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxInteractionHoldTime;                                    // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastLocallyRequestedPassiveInteractionTime;                // 0x0370(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TYQO[0x4];                                     // 0x0374(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauActor");
		return ptr;
	}



	void UpdateThudVelocity(float NewThudVelocity);
	void PostInteractionWidgetCreated();
	void OnUsedToKillOther(class AAdvancedCharacter* Character, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source);
	void OnThud();
	void OnRep_ReplicatedThud();
	void OnReceiveCosmeticHit(class AActor* Source, class AActor* Agent, Mordhau_EAttackMove Move, const struct FHitResult& Hit);
	void OnPostDismemberedOther(const struct FName& bone, class ASeparatedBodyPart* Part);
	void OnLocalPlayerUsedToKillOther(class AAdvancedCharacter* Character, Mordhau_EMordhauDamageType Type, unsigned char SubType, const struct FName& bone, const struct FVector& Point, class AActor* Source);
	bool IsAnyInstanceOwner(TArray<class AMordhauPlayerController*> ControllerArray);
};

// Class Mordhau.MordhauEquipment
// 0x0950 (FullSize[0x0CC8] - InheritedSize[0x0378])
class AMordhauEquipment : public AMordhauActor
{
public:
	unsigned char                                      UnknownData_QZKW[0x4];                                     // 0x0378(0x0004) Fix Super Size
	int                                                PreviousAmmo;                                              // 0x037C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsStateDirty;                                             // 0x0380(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsTick;                                                // 0x0381(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceEquipmentToAlwaysTick;                               // 0x0382(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceRefPoseOnMesh;                                       // 0x0383(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PQIV[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               EquipmentTraitNames;                                       // 0x0388(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FText>                 ActionToDescriptionMap;                                    // 0x0398(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FText>                 SecondActionToDescriptionMap;                              // 0x03E8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0HQ4[0x8];                                     // 0x0438(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  DefaultMeshRelativeTransform;                              // 0x0440(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                HideInGameOverride;                                        // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NP1F[0xC];                                     // 0x0474(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  EquippedOffset;                                            // 0x0480(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseEquippedOffset;                                        // 0x04B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanThrowPommel;                                           // 0x04B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondUseEquippedOffset;                                  // 0x04B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHeldInHand;                                             // 0x04B3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsParentInFirstPerson;                                    // 0x04B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MTNV[0x3];                                     // 0x04B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AttachedToSocket;                                          // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsToRebuildParts;                                      // 0x04C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      LastOwnerTeam;                                             // 0x04C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceTeamColor1;                                          // 0x04C2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceTeamColor2;                                          // 0x04C3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor1;                                                // 0x04C4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor2;                                                // 0x04C5(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor3;                                                // 0x04C6(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZGQT[0x1];                                     // 0x04C7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMordhauEquipmentPart*>               PartInstances;                                             // 0x04C8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauCharacter>            ParentCharacter;                                           // 0x04D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauCharacter>            YoinkTrackingParentCharacter;                              // 0x04E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasLastParentCharacterLocalPlayer;                        // 0x04E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHeldInteractIsSwap;                                       // 0x04E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EEquipmentType                             EquipmentUIType;                                           // 0x04EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EEquipmentCategory                         EquipmentUICategory;                                       // 0x04EB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_60Y0[0x4];                                     // 0x04EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       EquipmentName;                                             // 0x04F0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bDisablesDodge;                                            // 0x0508(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightHanded;                                            // 0x0509(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondIsRightHanded;                                      // 0x050A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsTwoHanded;                                              // 0x050B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondIsTwoHanded;                                        // 0x050C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T59F[0x3];                                     // 0x050D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EquipTimeModifier;                                         // 0x0510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRangedActionAllowsRegen;                                  // 0x0514(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTakesHuntsmanDamage;                                      // 0x0515(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LHIU[0x2];                                     // 0x0516(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RangedDrawFOVOffset;                                       // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JFWA[0x4];                                     // 0x051C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                RangedDrawSway;                                            // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRangedSwayCameraBased;                                  // 0x0528(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ASWT[0x3];                                     // 0x0529(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RangedAirborneSway;                                        // 0x052C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedAirborneSwayBlendInSpeed;                            // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedAirborneSwayBlendOutSpeed;                           // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RangedDrawSwayLoopSegment;                                 // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedDrawTremblingStartAfter;                             // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedDrawTremblingMaxAfter;                               // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedDrawTremblingMagnitude;                              // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedDrawTremblingFrequency;                              // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0558(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      AuxiliarySkeletalMeshComponent;                            // 0x0560(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAuxiliaryMeshMode                         AuxiliaryMeshMode;                                         // 0x0568(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9PD6[0x7];                                     // 0x0569(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  AuxiliaryMeshOffset;                                       // 0x0570(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  DefaultAuxiliaryMeshRelativeTransform;                     // 0x05A0(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               CombinedSkeletalMesh;                                      // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFollowingProjectile;                                    // 0x05D8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EPhysicalSurface>               EquipmentPhysicalSurface;                                  // 0x05D9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_19R3[0x6];                                     // 0x05DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauProjectile*                          CurrentProjectile;                                         // 0x05E0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ProjectileClass;                                           // 0x05E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              RestockAmmoForEquipment;                                   // 0x05F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxAmountPerLoadout;                                       // 0x0600(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanRestockFromEquipmentDefaults;                          // 0x0604(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8T24[0x3];                                     // 0x0605(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxAmmoBoxRestockAmount;                                   // 0x0608(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MaxAmmoBoxRestockAmountCategory;                           // 0x060C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0SDU[0x4];                                     // 0x0614(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APhysicsProxy*                               PhysicsProxy;                                              // 0x0618(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               PhysicsAsset;                                              // 0x0620(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotDisarmOnMeleeWeaponHit;                              // 0x0628(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCannotChaseOthers;                                        // 0x0629(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeChasedFromFront;                                     // 0x062A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanRagdoll;                                               // 0x062B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesPhysicsProxy;                                         // 0x062C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyPeasants;                                             // 0x062D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAllowedForPeasants;                                     // 0x062E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N6O1[0x1];                                     // 0x062F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  ArmoryTransformOffset;                                     // 0x0630(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                CharacterPointCost;                                        // 0x0660(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CullDistanceHeld;                                          // 0x0664(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CullDistanceNotHeld;                                       // 0x0668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CullDistanceAuxiliaryHeld;                                 // 0x066C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CullDistanceAuxiliaryNotHeld;                              // 0x0670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceInstantMeshUpdate;                                   // 0x0674(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceMipStreaming;                                        // 0x0675(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceMaxLOD;                                              // 0x0676(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPartsUseAuxiliaryMesh;                                    // 0x0677(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UMeshComponent>>       MeshComponents;                                            // 0x0678(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Quiver;                                                    // 0x0688(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaxAmmo;                                                   // 0x0690(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaxAmmoWithoutQuiver;                                      // 0x0691(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      LastReplicatedAmmo;                                        // 0x0692(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyIfNoAmmo;                                          // 0x0693(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       MovementRestriction;                                       // 0x0694(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreventsClimbing;                                         // 0x0695(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7TTC[0x2];                                     // 0x0696(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SubSprintSpeedBonusEquipped;                               // 0x0698(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondSubSprintSpeedBonusEquipped;                         // 0x069C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedOverrideEquipped;                                     // 0x06A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackpedalSpeedFactorEquipped;                              // 0x06A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedBonusPercentageEquipped;                              // 0x06A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccelerationBonusPercentageEquipped;                       // 0x06AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedBonusPercentageHolstered;                             // 0x06B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccelerationBonusPercentageHolstered;                      // 0x06B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEquipmentCustomization                     AssignedCustomization;                                     // 0x06B8(0x0030) (BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedColors[0x3];                                     // 0x06E8(0x0003) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedPartsId[0x3];                                    // 0x06EB(0x0003) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedSkin;                                            // 0x06EE(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedEmblem;                                          // 0x06EF(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedEmblemColors[0x2];                               // 0x06F0(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedPattern;                                         // 0x06F2(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReplicatedColors;                                      // 0x06F3(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReplicatedPartsId;                                     // 0x06F4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReplicatedSkin;                                        // 0x06F5(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReplicatedEmblem;                                      // 0x06F6(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReplicatedEmblemColors;                                // 0x06F7(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReplicatedPattern;                                     // 0x06F8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J8RL[0x7];                                     // 0x06F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FEquipmentSkinEntry>                 Skins;                                                     // 0x0700(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Colors[0x3];                                               // 0x0710(0x0003) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PartsId[0x3];                                              // 0x0713(0x0003) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Skin;                                                      // 0x0716(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Pattern;                                                   // 0x0717(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Emblem;                                                    // 0x0718(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      EmblemColors[0x2];                                         // 0x0719(0x0002) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoAssignCustomizationOnBeginPlay;                       // 0x071B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EQOY[0x4];                                     // 0x071C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FEquipmentCustomization                     AutoAssignCustomization;                                   // 0x0720(0x0030) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      AutoAssignCustomizationEmblem;                             // 0x0750(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AutoAssignCustomizationEmblemColor1;                       // 0x0751(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AutoAssignCustomizationEmblemColor2;                       // 0x0752(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsEmotingAllowed;                                         // 0x0753(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J4ID[0x4];                                     // 0x0754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FEmoteEntry>                         EquipmentEmotes;                                           // 0x0758(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           KickAnimation;                                             // 0x0768(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           JumpKickAnimation;                                         // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           KickRiposteAnimation;                                      // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           JumpKickRiposteAnimation;                                  // 0x0780(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           KickComboAnimation;                                        // 0x0788(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           JumpKickComboAnimation;                                    // 0x0790(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                KickBounce;                                                // 0x0798(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UpperBlendSpace1P;                                         // 0x07A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UpperAdditive1P;                                           // 0x07A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UpperBlendSpaceUnloaded1P;                                 // 0x07B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UpperAdditiveUnloaded1P;                                   // 0x07B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UpperBlendSpace;                                           // 0x07C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UpperAdditive;                                             // 0x07C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UpperBlendSpaceUnloaded;                                   // 0x07D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UpperAdditiveUnloaded;                                     // 0x07D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LowerAnimation;                                            // 0x07E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             ShieldUpperBlendSpace1P;                                   // 0x07E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               ShieldUpperAdditive1P;                                     // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             ShieldUpperBlendSpace;                                     // 0x07F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               ShieldUpperAdditive;                                       // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               ShieldLowerAnimation;                                      // 0x0808(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             ShieldHorseUpperBlendSpace1P;                              // 0x0810(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               ShieldHorseUpperAdditive1P;                                // 0x0818(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             ShieldHorseUpperBlendSpace;                                // 0x0820(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               ShieldHorseUpperAdditive;                                  // 0x0828(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             HorseUpperBlendSpace1P;                                    // 0x0830(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperAdditive1P;                                      // 0x0838(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             HorseUpperBlendSpaceUnloaded1P;                            // 0x0840(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperAdditiveUnloaded1P;                              // 0x0848(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             HorseUpperBlendSpace;                                      // 0x0850(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperAdditive;                                        // 0x0858(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             HorseUpperBlendSpaceUnloaded;                              // 0x0860(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperAdditiveUnloaded;                                // 0x0868(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperRearing;                                         // 0x0870(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperRearing1P;                                       // 0x0878(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperJump;                                            // 0x0880(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperJump1P;                                          // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ModeSwitchAnimation;                                       // 0x0890(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DropAnimation;                                             // 0x0898(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                InteractWithAnimation;                                     // 0x08A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                InteractWith1PAnimation;                                   // 0x08A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpUnloadedAnimation;                                     // 0x08B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpAnimation;                                             // 0x08B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpAnimationShield;                                       // 0x08C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpUnloadedAnimation1P;                                   // 0x08C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpAnimation1P;                                           // 0x08D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpAnimationShield1P;                                     // 0x08D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingUnloadedAnimation;                                  // 0x08E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingAnimation;                                          // 0x08E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingAnimationShield;                                    // 0x08F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingUnloadedAnimation1P;                                // 0x08F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingAnimation1P;                                        // 0x0900(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingAnimationShield1P;                                  // 0x0908(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandUnloadedAnimation;                                     // 0x0910(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandAnimation;                                             // 0x0918(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandAnimationShield;                                       // 0x0920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandUnloadedAnimation1P;                                   // 0x0928(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandAnimation1P;                                           // 0x0930(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandAnimationShield1P;                                     // 0x0938(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                SecondDropAnimation;                                       // 0x0940(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                SecondInteractWithAnimation;                               // 0x0948(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                SecondInteractWith1PAnimation;                             // 0x0950(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondJumpUnloadedAnimation;                               // 0x0958(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondJumpAnimation;                                       // 0x0960(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondJumpUnloadedAnimation1P;                             // 0x0968(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondJumpAnimation1P;                                     // 0x0970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondFallingUnloadedAnimation;                            // 0x0978(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondFallingAnimation;                                    // 0x0980(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondFallingUnloadedAnimation1P;                          // 0x0988(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondFallingAnimation1P;                                  // 0x0990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondLandUnloadedAnimation;                               // 0x0998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondLandAnimation;                                       // 0x09A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondLandUnloadedAnimation1P;                             // 0x09A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondLandAnimation1P;                                     // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        CharacterPreviewPoses;                                     // 0x09B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedDrawAnimation;                                       // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedDrawAnimation1P;                                     // 0x09D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             RangedDrawnAdditive;                                       // 0x09D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedDrawEquipmentAnimation;                              // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedDrawEquipmentAnimation1P;                            // 0x09E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedReleaseAnimation;                                    // 0x09F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedReleaseAnimation1P;                                  // 0x09F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedReleaseEquipmentAnimation;                           // 0x0A00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RangedReleaseEquipmentAnimation1P;                         // 0x0A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadAnimation;                                           // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ReloadSound;                                               // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadAnimation1P;                                         // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ReloadSound1P;                                             // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadEquipmentAnimation;                                  // 0x0A30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadEquipmentAnimation1P;                                // 0x0A38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                QuickthrowAnimation1P;                                     // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                QuickthrowAnimation;                                       // 0x0A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableSpineArmsCompensation1P;                           // 0x0A50(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableHandSpringAnimation;                               // 0x0A51(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HV2X[0x2];                                     // 0x0A52(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RightHandIKPositionOffset;                                 // 0x0A54(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightShoulderOffset1P;                                     // 0x0A60(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftShoulderOffset1P;                                      // 0x0A6C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftShoulderIdleOffset1P;                                  // 0x0A78(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesOffhandIK;                                            // 0x0A84(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInvertOffhandUp;                                          // 0x0A85(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondInvertOffhandUp;                                    // 0x0A86(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4CNF[0x1];                                     // 0x0A87(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpaceBase*                             SecondUpperBlendSpace1P;                                   // 0x0A88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondUpperAdditive1P;                                     // 0x0A90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             SecondUpperBlendSpaceUnloaded1P;                           // 0x0A98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondUpperAdditiveUnloaded1P;                             // 0x0AA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             SecondUpperBlendSpace;                                     // 0x0AA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondUpperAdditive;                                       // 0x0AB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             SecondUpperBlendSpaceUnloaded;                             // 0x0AB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondUpperAdditiveUnloaded;                               // 0x0AC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               SecondLowerAnimation;                                      // 0x0AC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                SecondModeSwitchAnimation;                                 // 0x0AD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondUsesOffhandIK;                                      // 0x0AD8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I9KC[0x3];                                     // 0x0AD9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OffhandIKUpOffset;                                         // 0x0ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffhandIKUpOffset1P;                                       // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondOffhandIKUpOffset;                                   // 0x0AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondOffhandIKUpOffset1P;                                 // 0x0AE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightHandEquipOffset;                                      // 0x0AEC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OU8A[0x8];                                     // 0x0AF8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  RightWeaponBoneCosmeticTransform;                          // 0x0B00(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  RightWeaponBoneCosmeticTransform1P;                        // 0x0B30(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  SecondRightWeaponBoneCosmeticTransform;                    // 0x0B60(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  SecondRightWeaponBoneCosmeticTransform1P;                  // 0x0B90(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    RotationOffset;                                            // 0x0BC0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SecondRotationOffset;                                      // 0x0BCC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     GripLocationLocal;                                         // 0x0BD8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SecondGripLocationLocal;                                   // 0x0BE4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GV8N[0x10];                                    // 0x0BF0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FEquipmentHolsterInfo>               HolsterInfo;                                               // 0x0C00(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanHolster;                                               // 0x0C10(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanEquipOnHorse;                                          // 0x0C11(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanEquipOnLadder;                                         // 0x0C12(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondCanEquipOnHorse;                                    // 0x0C13(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondCanEquipOnLadder;                                   // 0x0C14(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NB01[0x3];                                     // 0x0C15(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   AmmoRefillSound;                                           // 0x0C18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   EquipSound;                                                // 0x0C20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   HolsterSound;                                              // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   DrawSound;                                                 // 0x0C30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DrawSoundPlayAtNormalizedTime;                             // 0x0C38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DrawSoundPlayAtNormalizedTime1P;                           // 0x0C3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   RangedCancelSound;                                         // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   FireSound;                                                 // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAlwaysDestroyOnDeath;                                     // 0x0C50(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeferDestroyUntilRagdoll;                                 // 0x0C51(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RBRM[0x2];                                     // 0x0C52(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollStayTime;                                           // 0x0C54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDrop;                                                // 0x0C58(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAttack;                                                // 0x0C59(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAttackOnFoot;                                          // 0x0C5A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAttackOnHorseback;                                     // 0x0C5B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowFire;                                                // 0x0C5C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFireThrowsEquipment;                                      // 0x0C5D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9VMV[0x2];                                     // 0x0C5E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExtraSwitchTime;                                           // 0x0C60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRangedReleasePlaysAttackYell;                             // 0x0C64(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesRangedCamera;                                         // 0x0C65(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowHoldDraw;                                            // 0x0C66(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowCancelDraw;                                          // 0x0C67(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHoldDrawTime;                                           // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       ReloadMovementRestriction;                                 // 0x0C6C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       RangedDrawMovementRestriction;                             // 0x0C6D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AM7P[0x2];                                     // 0x0C6E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RangedDrawSpeedFactor;                                     // 0x0C70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedDrawSpeedFactorWithRangerPerk;                       // 0x0C74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RangedDrawTurnCaps;                                        // 0x0C78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       RangedReleaseMovementRestriction;                          // 0x0C80(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotFireAfterMaxHoldDrawTime;                            // 0x0C81(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bQuickthrowOnly;                                           // 0x0C82(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OFDZ[0x1];                                     // 0x0C83(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ForceAppliedOnDrop;                                        // 0x0C84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowCleanup;                                             // 0x0C88(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X7XG[0x3];                                     // 0x0C89(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RangedDrawTime;                                            // 0x0C8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedCancelTime;                                          // 0x0C90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedReleaseTime;                                         // 0x0C94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RangedReleaseCameraShake;                                  // 0x0C98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedReloadTime;                                          // 0x0CA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RangedReloadTurnCaps;                                      // 0x0CA4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedReloadGrabAmmoNormTime;                              // 0x0CAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangedReloadFinishReloadNormTime;                          // 0x0CB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoReloadTime;                                            // 0x0CB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoReloadTimeSpent;                                       // 0x0CB8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanReload;                                                // 0x0CBC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUnloadOnUnequip;                                          // 0x0CBD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoadOnUnequip;                                            // 0x0CBE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLoaded;                                                 // 0x0CBF(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHiddenWhenUnloaded;                                       // 0x0CC0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HDGH[0x1];                                     // 0x0CC1(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsUsingAlternateMode;                                     // 0x0CC2(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasAlternateMode;                                         // 0x0CC3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRevertModeOnUnequip;                                      // 0x0CC4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRevertModeOnDrop;                                         // 0x0CC5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CFD7[0x2];                                     // 0x0CC6(0x0002) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauEquipment");
		return ptr;
	}



	void UpdateMaterial(class USkeletalMeshComponent* SkeletalMeshComp);
	void UpdateInteractionCollision();
	void UpdateEquipmentVisualState();
	void UpdateEquipmentState();
	void UpdateCapsuleShadowStatus();
	void SwitchMode();
	bool ShouldShine();
	void SetPartsUseAuxiliaryMesh(bool bNewValue);
	void SetParts(TArray<unsigned char> NewPartsId, bool bRebuild);
	void SetLoaded(bool bNewLoaded);
	void SetColors(TArray<unsigned char> NewColors);
	void SetAmmo(unsigned char NewAmmo);
	bool RestockOtherEquipmentOnCharacter(class AMordhauCharacter* Character);
	void ResetMeshRelativeTransform();
	void RequestAttack(Mordhau_EAttackMove Move, float Angle);
	void RebuildIfAllReplicated();
	void RebuildEquipment(bool bDoOnlyQuickJob);
	bool OnRequestModeSwitch(class AMordhauCharacter* Character);
	bool OnRequestFire(class AMordhauCharacter* Character);
	void OnRep_ReplicatedSkin();
	void OnRep_ReplicatedPattern();
	void OnRep_ReplicatedPartsId();
	void OnRep_ReplicatedEmblemColors();
	void OnRep_ReplicatedEmblem();
	void OnRep_ReplicatedColors();
	void OnRep_IsUsingAlternateMode();
	void OnRep_IsLoaded();
	void OnRep_Ammo();
	void OnPickedUp(class AMordhauCharacter* Character);
	void OnPartsChanged();
	void OnLoadedChanged();
	void OnHolsteredOrDropped(class AMordhauCharacter* Character);
	void OnHolstered(class AMordhauCharacter* Character);
	void OnEquipped(class AMordhauCharacter* Character);
	void OnDropped(class AMordhauCharacter* Character);
	void OnAmmoChanged();
	void MarkSkinSeen(int SkinIdx);
	void MarkSeen();
	void LocalPlayerTick(float DeltaTime);
	void LocalPlayerLateTick(float DeltaTime);
	void LateTick(float DeltaSeconds);
	bool GetWasSkinSeen(int SkinIdx);
	bool GetWasSeen();
	struct FEquipmentCustomization GetRandomCustomization(bool bOnlyColors);
	class AMordhauCharacter* GetParentCharacter();
	unsigned char GetCurrentMaxAmmo();
	unsigned char GetAmmo();
	class AMordhauProjectile* FireProjectile_Internal(const struct FVector& InOrigin, const struct FRotator& InOrientation, class AController* Controller, float ExpectedDelay, bool bIsLocal);
	void FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay);
	struct FEquipmentHolsterInfo FindCurrentHolsterInfo();
	void EquipmentCommand(int Command);
	void DestroyPhysicsProxy();
	struct FBoxSphereBounds ComputeAccurateBounds();
	bool CanPerformAttack(class AMordhauCharacter* Character, Mordhau_EAttackMove Move);
	bool BelongsToCharacter();
	void AssignCustomizationToProjectile(class AMordhauProjectile* Projectile);
	void AssignCustomization(const struct FEquipmentCustomization& Customization, unsigned char CustomizationEmblem, unsigned char CustomizationEmblemColor1, unsigned char CustomizationEmblemColor2);
};

// Class Mordhau.MordhauWeapon
// 0x0F58 (FullSize[0x1C20] - InheritedSize[0x0CC8])
class AMordhauWeapon : public AMordhauEquipment
{
public:
	TArray<struct FHitResult>                          SingleTraceHitsCache;                                      // 0x0CC8(0x0010) (ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAudioComponent>              LastWoosh;                                                 // 0x0CD8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAreCurrentTracersValid;                                   // 0x0CE0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bArePreviousTracersValid;                                  // 0x0CE1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAreCurrentTracersInvalidated;                             // 0x0CE2(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasAdditionalTracers;                                     // 0x0CE3(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondHasAdditionalTracers;                               // 0x0CE4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8WV6[0x3];                                     // 0x0CE5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     CurrentTraceStart;                                         // 0x0CE8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CurrentTraceEnd;                                           // 0x0CF4(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousTraceStart;                                        // 0x0D00(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousTraceEnd;                                          // 0x0D0C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CurrentAdditionalTraceStart;                               // 0x0D18(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CurrentAdditionalTraceEnd;                                 // 0x0D24(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousAdditionalTraceStart;                              // 0x0D30(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousAdditionalTraceEnd;                                // 0x0D3C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                LastObservedMove;                                          // 0x0D48(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P6UI[0x7];                                     // 0x0D49(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             LastTraceStarts;                                           // 0x0D50(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActorSetAndArray                           CosmeticIgnoreActors;                                      // 0x0D60(0x0060) (NativeAccessSpecifierPublic)
	struct FActorTraceData                             CosmeticActorTraceData;                                    // 0x0DC0(0x0068) (NativeAccessSpecifierPublic)
	TArray<class AActor*>                              ActorIgnoreCache;                                          // 0x0E28(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ActorSetCache[0x50];                                       // 0x0E38(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FHitResult>                          HitResultCache;                                            // 0x0E88(0x0010) (ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBlock;                                                 // 0x0E98(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBlockOnFoot;                                           // 0x0E99(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBlockOnHorseback;                                      // 0x0E9A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanCouchOnHorseback;                                      // 0x0E9B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4HRX[0x4];                                     // 0x0E9C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                CouchWindUpAnim;                                           // 0x0EA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CouchWindUpAnim1P;                                         // 0x0EA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CouchLoopAnim;                                             // 0x0EB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CouchReleaseAnim;                                          // 0x0EB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CouchReleaseAnim1P;                                        // 0x0EC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EDismembermentType                         StrikeDismembermentType;                                   // 0x0EC8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EDismembermentType                         SecondStrikeDismembermentType;                             // 0x0EC9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EDismembermentType                         StabDismembermentType;                                     // 0x0ECA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EDismembermentType                         SecondStabDismembermentType;                               // 0x0ECB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideRadius;                                               // 0x0ECC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackSupersprintDuration;                                 // 0x0ED0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondAttackSupersprintDuration;                           // 0x0ED4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StabReleaseModifier;                                       // 0x0ED8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3K0E[0x4];                                     // 0x0EDC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAttackInfo                                 StabAttack;                                                // 0x0EE0(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 SecondStabAttack;                                          // 0x1008(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 CouchAttack;                                               // 0x1130(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 SecondCouchAttack;                                         // 0x1258(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 StrikeAttack;                                              // 0x1380(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 SecondStrikeAttack;                                        // 0x14A8(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 KickAttack;                                                // 0x15D0(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 SecondKickAttack;                                          // 0x16F8(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAttackInfo                                 BashAttack;                                                // 0x1820(0x0128) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int                                                AttackMask;                                                // 0x1948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ParryMask;                                                 // 0x194C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryWindowOffset;                                         // 0x1950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1BEP[0xC];                                     // 0x1954(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  ParryBoxTransform;                                         // 0x1960(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                                   ParryTurnCap;                                              // 0x1990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ShieldWallTurnCap;                                         // 0x1998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ParrySuccessTurnCap;                                       // 0x19A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryBackpedalSpeedFactor;                                 // 0x19A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsParryHeld;                                              // 0x19AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WEDZ[0x3];                                     // 0x19AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BoostCosmeticTracersBy;                                    // 0x19B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesExtraEnvironmentTracers;                              // 0x19B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHitKnockbackOnTeammates;                                  // 0x19B5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DPJK[0x2];                                     // 0x19B6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ClashNormal;                                               // 0x19B8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SecondClashNormal;                                         // 0x19C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       BlockMovementRestriction;                                  // 0x19D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J1M5[0x3];                                     // 0x19D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BlockStaminaNegation;                                      // 0x19D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BlockStaminaClamp;                                         // 0x19D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondBlockStaminaNegation;                                // 0x19E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SecondBlockStaminaClamp;                                   // 0x19E4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ASZI[0x4];                                     // 0x19EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         ClashCollider;                                             // 0x19F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                         BlockCollider;                                             // 0x19F8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponAnimationProfileClass;                               // 0x1A00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SecondWeaponAnimationProfileClass;                         // 0x1A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HorseWeaponAnimationProfileClass;                          // 0x1A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LadderWeaponAnimationProfileClass;                         // 0x1A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeleeWeaponAnimationProfile*                HorseWeaponAnimationProfile;                               // 0x1A20(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeleeWeaponAnimationProfile*                LadderWeaponAnimationProfile;                              // 0x1A28(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeleeWeaponAnimationProfile*                WeaponAnimationProfile;                                    // 0x1A30(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeleeWeaponAnimationProfile*                SecondWeaponAnimationProfile;                              // 0x1A38(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BlockedSound;                                              // 0x1A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BlockedViewTargetSweetener;                                // 0x1A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   HitCancelSound;                                            // 0x1A50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   WasBlockedSound;                                           // 0x1A58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   EnvironmentPitchScaleByDamageIn;                           // 0x1A60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   EnvironmentPitchScaleByDamageOut;                          // 0x1A68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   EnvironmentVolumeScaleByDamageIn;                          // 0x1A70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   EnvironmentVolumeScaleByDamageOut;                         // 0x1A78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WooshVolumeMultiplierViewTarget;                           // 0x1A80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OMT9[0x4];                                     // 0x1A84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   StrikeHitSound;                                            // 0x1A88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   StabHitSound;                                              // 0x1A90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   EnvironmentHitSound;                                       // 0x1A98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SecondStrikeHitSound;                                      // 0x1AA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SecondStabHitSound;                                        // 0x1AA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SecondEnvironmentHitSound;                                 // 0x1AB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   StrikeWooshSound;                                          // 0x1AB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   StabWooshSound;                                            // 0x1AC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SlideStartSound;                                           // 0x1AC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SlideEndSound;                                             // 0x1AD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeriveHandGripFromTracers;                                // 0x1AD8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondDeriveHandGripFromTracers;                          // 0x1AD9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasWoodenHandle;                                          // 0x1ADA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JZKS[0x1];                                     // 0x1ADB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TrailLifeTimeFactor;                                       // 0x1ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailExtraTime;                                            // 0x1AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloodTrailMaxDuration;                                     // 0x1AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwingTrailFadeOutDuration;                                 // 0x1AE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MK8U[0x4];                                     // 0x1AEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SwingTrailParticles;                                       // 0x1AF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BloodTrailParticles;                                       // 0x1AF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BlockParticles;                                            // 0x1B00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             HitCancelParticles;                                        // 0x1B08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>                     ImpactParticlesBySurface;                                  // 0x1B10(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SlideParticles;                                            // 0x1B20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauWeapon>               SlidingWith;                                               // 0x1B28(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   EndCurrentSlideWithSound;                                  // 0x1B30(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlidingStartTime;                                          // 0x1B38(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              CurrentSlideStartSound;                                    // 0x1B3C(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastHitSoundA;                                             // 0x1B44(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastHitSoundB;                                             // 0x1B4C(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentSlideParticles;                                     // 0x1B54(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentSwingTrailParticles;                                // 0x1B5C(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentBloodTrailParticles;                                // 0x1B64(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailTimeBeforeStop;                                       // 0x1B6C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwingTrailOriginalLifeTime;                                // 0x1B70(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwingTrailEndTime;                                         // 0x1B74(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloodTrailEndTime;                                         // 0x1B78(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Length;                                                    // 0x1B7C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondLength;                                              // 0x1B80(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloodLevel1;                                               // 0x1B84(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloodLevel2;                                               // 0x1B88(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayedHitEffect;                                          // 0x1B8C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IB8I[0x3];                                     // 0x1B8D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     TrailUp;                                                   // 0x1B90(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SecondTrailUp;                                             // 0x1B9C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TrailRight;                                                // 0x1BA8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SecondTrailRight;                                          // 0x1BB4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultTrailFactor;                                        // 0x1BC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondDefaultTrailFactor;                                  // 0x1BC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegularAttacksUseBlood2;                                  // 0x1BC8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSecondRegularAttacksUseBlood2;                            // 0x1BC9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TFXF[0x2];                                     // 0x1BCA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TrailFactor;                                               // 0x1BCC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondTrailFactor;                                         // 0x1BD0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailWeight;                                               // 0x1BD4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X358[0x8];                                     // 0x1BD8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  LastTrailTransform;                                        // 0x1BE0(0x0030) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     LastObservedTraceDirection;                                // 0x1C10(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G88V[0x4];                                     // 0x1C1C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauWeapon");
		return ptr;
	}



	void UpdateTrail(float Weight);
	void SetIsAllowedToAddForce(bool bIsAllowed);
	bool RequestBlock(Mordhau_EBlockType BlockType, bool bAllowFTP);
	void OnWasBlocked(const struct FBlockResult& Result, Mordhau_EAttackMove Move);
	void OnHit(class AActor* Actor, Mordhau_EAttackMove Move, const struct FName& bone, const struct FVector& WorldLocation, unsigned char Tier, unsigned char SurfaceType);
	void OnCosmeticHit(Mordhau_EAttackMove Move, const struct FHitResult& Hit);
	void OnBlockStarted(Mordhau_EBlockType Type);
	void OnBlocked(const struct FBlockResult& Result, Mordhau_EAttackMove Move);
	void OnAttackStopped();
	void OnAttackStarted(Mordhau_EAttackMove Move, float Angle);
	bool IsAllowedToAddForce();
	void IncreaseBloodLevel(float Amount);
	void GetTrace(struct FVector* TraceStart, struct FVector* TraceEnd);
	struct FAttackInfo GetBaseAttackInfo(Mordhau_EAttackMove Move);
	void GetAdditionalTrace(struct FVector* TraceStart, struct FVector* TraceEnd);
	void AddTraceEntryData(class AActor* Actor, const struct FName& bone);
};

// Class Mordhau.VirtualWeapon
// 0x0000 (FullSize[0x1C20] - InheritedSize[0x1C20])
class AVirtualWeapon : public AMordhauWeapon
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.VirtualWeapon");
		return ptr;
	}



	void InitializeVirtualWeapon(class AMordhauCharacter* Character);
};

// Class Mordhau.FistsWeapon
// 0x0000 (FullSize[0x1C20] - InheritedSize[0x1C20])
class AFistsWeapon : public AVirtualWeapon
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FistsWeapon");
		return ptr;
	}



};

// Class Mordhau.FlinchMotion
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UFlinchMotion : public UMordhauMotion
{
public:
	bool                                               bHasDoneFlinchEffect;                                      // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SK72[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FlinchDuration;                                            // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryLockOutTime;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FlinchDurationModifierToShakeScaleIn;                      // 0x00AC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FlinchDurationModifierToShakeScaleOut;                     // 0x00B4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9TUJ[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FlinchMotion");
		return ptr;
	}



};

// Class Mordhau.GameModeMetadata
// 0x00A8 (FullSize[0x00D0] - InheritedSize[0x0028])
class UGameModeMetadata : public UObject
{
public:
	struct FString                                     Prefix;                                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Name;                                                      // 0x0038(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0050(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Thumbnail;                                                 // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FText>                               Tips;                                                      // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<MordhauOnlineSubsystem_EServerRegion, struct FPlayerCountArray> PlayerCount;                                               // 0x0080(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GameModeMetadata");
		return ptr;
	}



	TArray<int> GetPlayerCount(MordhauOnlineSubsystem_EServerRegion ServerRegion);
	class UGameModeMetadata* STATIC_GetDefaultObject(class UClass* MetadataClass);
};

// Class Mordhau.GoreActor
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AGoreActor : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                   // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GoreActor");
		return ptr;
	}



};

// Class Mordhau.HeadWearable
// 0x0028 (FullSize[0x01C8] - InheritedSize[0x01A0])
class UHeadWearable : public UMordhauWearable
{
public:
	unsigned char                                      DefaultCoif;                                               // 0x01A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TLT0[0x7];                                     // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      CoifWearables[0x10];                                       // 0x01A1(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              HelmetAOOffset;                                            // 0x01B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HelmetAOPower;                                             // 0x01BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HelmetAOIntensity;                                         // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HelmetAOEyeIntensity;                                      // 0x01C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HeadWearable");
		return ptr;
	}



	int GetCoifWearablesNum();
	class UClass* GetCoifWearable(int Index);
	void AddCoifWearable();
};

// Class Mordhau.StatComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UStatComponent : public UActorComponent
{
public:
	int                                                StatValue;                                                 // 0x00B0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H4PE[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                InitialStatValue;                                          // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinStatValue;                                              // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxStatValue;                                              // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRegenerable;                                            // 0x00C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JFRA[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RegenerationStoppedDelay;                                  // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RegenerationPerTick;                                       // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RegenerationTickRate;                                      // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WOE8[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StatComponent");
		return ptr;
	}



	void TickStat(float DeltaTime);
	void OnRep_StatValue(int OldStatValue);
	int GetStatValue();
};

// Class Mordhau.HealthStatComponent
// 0x0030 (FullSize[0x0108] - InheritedSize[0x00D8])
class UHealthStatComponent : public UStatComponent
{
public:
	bool                                               bPlaysHeartbeatSound;                                      // 0x00D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KUBO[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   HeartbeatSound;                                            // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                HeartbeatSoundPlayBelowHealth;                             // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastHeartbeat;                                             // 0x00EC(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9OAW[0x14];                                    // 0x00F4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HealthStatComponent");
		return ptr;
	}



	void OnCharacterDied(class AAdvancedCharacter* Character);
};

// Class Mordhau.HelpCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UHelpCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HelpCommand");
		return ptr;
	}



};

// Class Mordhau.HolsterMotion
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UHolsterMotion : public UMordhauMotion
{
public:
	unsigned char                                      Mode;                                                      // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z5YS[0x7];                                     // 0x00A1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HolsterMotion");
		return ptr;
	}



};

// Class Mordhau.MordhauVehicle
// 0x0080 (FullSize[0x0B68] - InheritedSize[0x0AE8])
class AMordhauVehicle : public AAdvancedCharacter
{
public:
	TMap<struct FString, struct FText>                 ActionToDescriptionMap;                                    // 0x0AE8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bShowVehicleHealth;                                        // 0x0B38(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseVisualPingCompensationOnAttacks;                       // 0x0B39(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_53UB[0x2];                                     // 0x0B3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDistanceCorrectionForLeaveSpot;                         // 0x0B3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableCameraDistance;                                    // 0x0B40(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetLookUpWhenNoDriver;                                  // 0x0B41(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OHUO[0x6];                                     // 0x0B42(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       VehicleName;                                               // 0x0B48(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UMordhauVehicleComponent*                    VehicleComponent;                                          // 0x0B60(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauVehicle");
		return ptr;
	}



	void RequestUse();
	void KnockOffDriver(class AMordhauCharacter* Character);
	class AMordhauCharacter* GetDriver();
};

// Class Mordhau.Horse
// 0x00D8 (FullSize[0x0C40] - InheritedSize[0x0B68])
class AHorse : public AMordhauVehicle
{
public:
	TMap<TWeakObjectPtr<class AActor>, float>          RecentKnockbacks;                                          // 0x0B68(0x0050) (NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           BumpCapsule;                                               // 0x0BB8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurdSpawnInterval;                                         // 0x0BC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurdSpawnChance;                                           // 0x0BC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastTurdSpawnCheck;                                        // 0x0BC8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FastFootstepParticlesMinVelocity;                          // 0x0BCC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>                     FastFootstepParticles;                                     // 0x0BD0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SoundTrot;                                                 // 0x0BE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SoundCanter;                                               // 0x0BE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SoundGallop;                                               // 0x0BF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 BumpDamageBySpeedModifierCurve;                            // 0x0BF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 AttackDamageBySpeedModifierCurve;                          // 0x0C00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DesiredGear;                                               // 0x0C08(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                UncontrolledGear;                                          // 0x0C0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackForce;                                            // 0x0C10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackForceVelocityFactor;                              // 0x0C14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackDamage;                                           // 0x0C18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3I9S[0x4];                                     // 0x0C1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   KnockbackSound;                                            // 0x0C20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RearingDuration;                                           // 0x0C28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedRearing;                                         // 0x0C2C(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ED7D[0x3];                                     // 0x0C2D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReplicatedRearingTimeOut;                                  // 0x0C30(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRearingTime;                                           // 0x0C34(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRearingRealTime;                                       // 0x0C38(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRearing;                                                // 0x0C3C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EHorseGear                                 MinimumGearToCouch;                                        // 0x0C3D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_67K9[0x2];                                     // 0x0C3E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Horse");
		return ptr;
	}



	void SpawnTurd();
	void ServerRequestRearing();
	void SecondaryTurnNotAbsolute(float Value);
	void RequestRearing();
	void OnRep_ReplicatedRearing();
	void OnBumpCapsuleOverlapped(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool GetIsInRearingMode();
	float CalculateBumpDamage(const struct FVector& OurWorldVelocity);
};

// Class Mordhau.HorseAnimInstance
// 0x01A0 (FullSize[0x0520] - InheritedSize[0x0380])
class UHorseAnimInstance : public UCreatureAnimInstance
{
public:
	struct FVector2D                                   BackLimits;                                                // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FrontLimits;                                               // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootOffsetTranslationToRotationFactor;                     // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4X68[0x4];                                     // 0x0394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     BackOffset;                                                // 0x0398(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftBackLegOffset;                                         // 0x03A4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightBackLegOffset;                                        // 0x03B0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FrontOffset;                                               // 0x03BC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftFrontLegOffset;                                        // 0x03C8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightFrontLegOffset;                                       // 0x03D4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRearing;                                                // 0x03E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R048[0x3];                                     // 0x03E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     CurrentForwardPrediction;                                  // 0x03E4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForwardPredictionUpdateSpeed;                              // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForwardPredictionMaxPredictTime;                           // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceDuckLimit;                                           // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopTiltFactorLeftRight;                                   // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopTiltFactorForward;                                     // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopTiltFactorBack;                                        // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopBounceLimit;                                           // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceInterpSpeed;                                         // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadStopTiltFactorLeftRight;                               // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadStopTiltFactorForward;                                 // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadStopTiltFactorBack;                                    // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadStopBounceLimit;                                       // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadBounceInterpSpeed;                                     // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FastVelocityLagTime;                                       // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlowVelocityLagTime;                                       // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    StopBounce;                                                // 0x042C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    StopBounceWorld;                                           // 0x0438(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    HeadStopBounce;                                            // 0x0444(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    HeadStopBounceWorld;                                       // 0x0450(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     BounceDuck;                                                // 0x045C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FastVelocity;                                              // 0x0468(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SlowVelocity;                                              // 0x0474(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FastVelocityChangeVelocity;                                // 0x0480(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SlowVelocityChangeVelocity;                                // 0x048C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    PreviousMeshRotation;                                      // 0x0498(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              FrontBackLegsDistance;                                     // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FeetShuffleWeight;                                         // 0x04A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FeetShuffleAnimRate;                                       // 0x04AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorseVelocity;                                             // 0x04B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KR0O[0x8];                                     // 0x04B4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimatedHorseVelocity;                                     // 0x04BC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopSmoothSpeed;                                           // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementAnimRate;                                          // 0x04C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorseDirection;                                            // 0x04C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CWC1[0x4];                                     // 0x04CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeanFactor;                                                // 0x04D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmoothedDirectionSmoothTime;                               // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmoothedDirectionSmoothTimeNoMovement;                     // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    FrontHorseRotator;                                         // 0x04DC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    BackHorseRotator;                                          // 0x04E8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    HorseLeanRotator;                                          // 0x04F4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     HorseLeanOffset;                                           // 0x0500(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    HorseHeadRotator;                                          // 0x050C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              HasDriverFloat;                                            // 0x0518(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VL7H[0x4];                                     // 0x051C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HorseAnimInstance");
		return ptr;
	}



};

// Class Mordhau.PseudoVehicleMovementComponent
// 0x0048 (FullSize[0x07A0] - InheritedSize[0x0758])
class UPseudoVehicleMovementComponent : public UAdvancedCharacterMovement
{
public:
	TArray<class UPrimitiveComponent*>                 SecondaryComponents;                                       // 0x0758(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>                 SecondaryStepCapableComponents;                            // 0x0768(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningVelocity;                                           // 0x0778(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QZJA[0x4];                                     // 0x077C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 TurningBrakeAccelerationByVelocity;                        // 0x0780(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TurningFactorByVelocity;                                   // 0x0788(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TurningAccelerationByVelocity;                             // 0x0790(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningFactorScaleAirborne;                                // 0x0798(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VMXF[0x4];                                     // 0x079C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PseudoVehicleMovementComponent");
		return ptr;
	}



};

// Class Mordhau.HorseMovementComponent
// 0x0070 (FullSize[0x0810] - InheritedSize[0x07A0])
class UHorseMovementComponent : public UPseudoVehicleMovementComponent
{
public:
	float                                              HeadOnCollisionMinSpeedToRear;                             // 0x07A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SoftBubbleEllipseRelativeLocation;                         // 0x07A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftBubbleEllipseLength;                                   // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftBubbleEllipseRadius;                                   // 0x07B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftBubbleMaxHeight;                                       // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FrontAndRearCapsuleHalfHeight;                             // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FrontAndRearCapsuleRadius;                                 // 0x07C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FrontCapsuleRelativeLocation;                              // 0x07C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RearCapsuleRelativeLocation;                               // 0x07D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AvoidanceTurningAcceleration;                              // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EHorseGear                                 Gear;                                                      // 0x07E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6O17[0x7];                                     // 0x07E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHorseGearInfo>                      GearInfo;                                                  // 0x07E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EHorseGear                                 DesiredGear;                                               // 0x07F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5V9F[0x3];                                     // 0x07F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpeedMultiplierOnBump;                                     // 0x07FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedMultiplierOnReceivedMeleeDamage;                      // 0x0800(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LXPA[0xC];                                     // 0x0804(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HorseMovementComponent");
		return ptr;
	}



};

// Class Mordhau.MordhauVehicleComponent
// 0x0100 (FullSize[0x01B0] - InheritedSize[0x00B0])
class UMordhauVehicleComponent : public UActorComponent
{
public:
	bool                                               bLeaveOnDamage;                                            // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLeaveOnDamageIfFriendly;                                  // 0x00B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTickDriverAnimsAfterOurs;                                 // 0x00B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseVisualPingCompensationOnAttacks;                       // 0x00B3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AttachSocketName;                                          // 0x00B4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z0GJ[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  AttachSocketOffset;                                        // 0x00C0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseDetachRotation;                                        // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_73P4[0x3];                                     // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DetachSocketName;                                          // 0x00F4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDriverTurnCaps;                                        // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HSX7[0x3];                                     // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OriginalNetUpdateFrequency;                                // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasEverDriven;                                            // 0x0104(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L2MY[0x3];                                     // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MainAnimationType;                                         // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentUnusedTime;                                         // 0x0110(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinTimeToStartUnusedDying;                                 // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnusedDyingHealthReduction;                                // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ABWW[0x3];                                     // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnusedDyingHealthReductionInterval;                        // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnusedNetUpdateFrequency;                                  // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillDieIfUnused;                                          // 0x0124(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDriverRegenHealth;                                     // 0x0125(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDriverRegenStamina;                                    // 0x0126(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EBIZ[0x1];                                     // 0x0127(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinXYDistanceToEnter;                                      // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   MinZDistanceToEnter;                                       // 0x012C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumInteractableVelocity;                               // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastObservedVehicleYaw;                                    // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCounteractTurnWithSecondaryTurn;                          // 0x013C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetSecondaryTurnWhenNoDriver;                           // 0x013D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T613[0x2];                                     // 0x013E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondaryTurnValue;                                        // 0x0140(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondaryTurnLimit;                                        // 0x0144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedSecondaryTurnValue;                              // 0x0148(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9E8F[0x3];                                     // 0x0149(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondaryTurnValueSmoothingTarget;                         // 0x014C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondaryTurnValueSmoothingFrom;                           // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondaryTurnValueSmoothingStartTime;                      // 0x0154(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothedTurnValue;                                    // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothingTurnVelocity;                                // 0x015C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnRateCap;                                               // 0x0160(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnCapRemaining;                                          // 0x0164(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisarmOnEnter;                                            // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NJSS[0x7];                                     // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauCharacter*                           Driver;                                                    // 0x0170(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLadder;                                                 // 0x0178(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHorse;                                                  // 0x0179(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SEX7[0x6];                                     // 0x017A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AAdvancedCharacter*                          CharacterOwner;                                            // 0x0180(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AVehicleBase*                                VehicleOwner;                                              // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      MeshComponent;                                             // 0x0190(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           CapsuleComponent;                                          // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterMovementComponent*                 CharacterMovement;                                         // 0x01A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                       PawnOwner;                                                 // 0x01A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauVehicleComponent");
		return ptr;
	}



	void UpdateFPCameraFor(class AMordhauCharacter* Character, float DeltaSeconds, bool bRotationOnly);
	void UpdateAnimationFor(class AMordhauCharacter* Character, class UMordhauAnimInstance* AnimInst, float DeltaTime);
	void Suicide();
	void StopDriving();
	void StartDriving(class AMordhauCharacter* Character);
	void SetDriver(class AMordhauCharacter* NewDriver);
	void ServerSecondaryTurn(float NewTurn);
	void SecondaryTurnAtRate(float Value);
	void SecondaryTurn(float Value, bool bIsAbsolute);
	void RequestMeshEnablePhysics(float Duration);
	struct FPOV PostProcessCameraPOV(const struct FPOV& InPOV, class AMordhauCharacter* Character);
	float OverrideAttackAngle(class UAttackMotion* Motion);
	void OnStoppedDriving(class AMordhauCharacter* Character);
	void OnStartedDriving(class AMordhauCharacter* Character);
	void OnRep_ReplicatedSecondaryTurnValue();
	void OnDriverChanged();
	struct FVehicleTransitionInfo GetVehicleLeaveInfo(class AMordhauCharacter* Character, const struct FTransform& FromTransform);
	struct FVehicleTransitionInfo GetVehicleEnterInfo(class AMordhauCharacter* Character, const struct FTransform& FromTransform);
	class APawn* GetPawnOwner();
	class USkeletalMeshComponent* GetMesh();
	float GetLookUpValue();
	struct FTransform GetExitTransform();
	class AMordhauCharacter* GetDriver();
	void DriverLateTick(class AMordhauCharacter* FromDriver, float DeltaTime);
	bool CanDrive(class AMordhauCharacter* Character);
};

// Class Mordhau.HorseVehicleComponent
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UHorseVehicleComponent : public UMordhauVehicleComponent
{
public:
	class UCurveFloat*                                 RiderRearingCurve;                                         // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_91FR[0x8];                                     // 0x01B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HorseVehicleComponent");
		return ptr;
	}



};

// Class Mordhau.HumanMeshComponent
// 0x01F0 (FullSize[0x0E30] - InheritedSize[0x0C40])
class UHumanMeshComponent : public UCharacterMeshComponent
{
public:
	unsigned char                                      UnknownData_7A1U[0x10];                                    // 0x0C40(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               FPMesh;                                                    // 0x0C50(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               FPDeadMesh;                                                // 0x0C58(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               UnifiedMesh;                                               // 0x0C60(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULODSkeletalMeshComponent*>           SlaveSkeletalMeshComponents;                               // 0x0C68(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClothBlendWeightInterpSpeed;                               // 0x0C78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FOVLODDistanceScaleIn;                                     // 0x0C7C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   FOVLODDistanceScaleOut;                                    // 0x0C84(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceInstantMeshUpdate;                                   // 0x0C8C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R18S[0x3];                                     // 0x0C8D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnifiedMeshDistance;                                       // 0x0C90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SeparatedMeshDistance;                                     // 0x0C94(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      LODIncreaseDistance;                                       // 0x0C98(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      LODDecreaseDistance;                                       // 0x0CA8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentForcedLOD;                                          // 0x0CB8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMeshesAreInitialized;                                     // 0x0CBC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMaterialsAreInitialized;                                  // 0x0CBD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasInvisibleBody;                                         // 0x0CBE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GVGY[0x1];                                     // 0x0CBF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USkeletalMesh*>                       OverrideMeshConstructionParts;                             // 0x0CC0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EWearableSlot                              SingleSlotMode;                                            // 0x0CD0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PVT4[0x7];                                     // 0x0CD1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SingleSlotModeWearableToUse;                               // 0x0CD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeleton*                                   BodySkeleton;                                              // 0x0CE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               ShadowPhysicsAsset;                                        // 0x0CE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasScaryBody;                                             // 0x0CF0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K1NB[0x3];                                     // 0x0CF1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HelmetAOOffset;                                            // 0x0CF4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HelmetAOPower;                                             // 0x0CF8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HelmetAOIntensity;                                         // 0x0CFC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HelmetAOEyeIntensity;                                      // 0x0D00(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J2F7[0x4];                                     // 0x0D04(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          LODMasterMaterial;                                         // 0x0D08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          UberMergeHighMaterial;                                     // 0x0D10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          UberMergeLowMaterial;                                      // 0x0D18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          HelmetCoifMaterial;                                        // 0x0D20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ChestShouldersMaterial;                                    // 0x0D28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ArmsGlovesMaterial;                                        // 0x0D30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          LowerChestMaterial;                                        // 0x0D38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          LegsBootsMaterial;                                         // 0x0D40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          HelmetCoifChestMaterial;                                   // 0x0D48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          LegsBootsChestLowMaterial;                                 // 0x0D50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ArmsGlovesShouldersMaterial;                               // 0x0D58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        UnarmedPreviewPoses;                                       // 0x0D60(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UnarmedUpperBlendSpace1P;                                  // 0x0D70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedUpperAdditive1P;                                    // 0x0D78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UnarmedUpperBlendSpace;                                    // 0x0D80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedUpperAdditive;                                      // 0x0D88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedLowerAnimation;                                     // 0x0D90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedJumpAnimation;                                      // 0x0D98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedLandAnimation;                                      // 0x0DA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedFallingAnimation;                                   // 0x0DA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedJumpAnimation1P;                                    // 0x0DB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedLandAnimation1P;                                    // 0x0DB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               UnarmedFallingAnimation1P;                                 // 0x0DC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             HorseUnarmedUpperBlendSpace1P;                             // 0x0DC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUnarmedUpperAdditive1P;                               // 0x0DD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             HorseUnarmedUpperBlendSpace;                               // 0x0DD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUnarmedUpperAdditive;                                 // 0x0DE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUnarmedRearing;                                       // 0x0DE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUnarmedRearing1P;                                     // 0x0DF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUnarmedJump;                                          // 0x0DF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUnarmedJump1P;                                        // 0x0E00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                InteractWithAnimation;                                     // 0x0E08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                InteractWith1PAnimation;                                   // 0x0E10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreAngularVelocityAnimation;                           // 0x0E18(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3OJU[0x7];                                     // 0x0E19(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 RiposteBlendInCurve;                                       // 0x0E20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2J79[0x8];                                     // 0x0E28(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.HumanMeshComponent");
		return ptr;
	}



	void UpdateSkeletalMeshComponentMaterials(class USkeletalMeshComponent* USMC);
	void UpdateAllSkeletalMeshComponentMaterials();
	void SetMaterialParamsForMergedSlot(const struct FString& Prefix, class UMordhauWearable* Wearable, class UMaterialInstanceDynamic* Mid, bool LowQuality);
	void SetMaterialParamsForLODMasterSlot(const struct FString& Slot, class UMordhauWearable* Wearable, class UMaterialInstanceDynamic* Mid);
	void OnCharacterTornOff(class AAdvancedCharacter* Character);
	void OnCharacterChangedTeam(class AAdvancedCharacter* Character);
	void OnCharacterCameraStyleChanged(class AMordhauCharacter* Character);
	void OnCharacterBuilt(class AMordhauCharacter* Character);
	void ModifyBodyColors(const struct FLinearColor& InSkinColor, const struct FLinearColor& InHairColor, const struct FLinearColor& InEyeColor, struct FLinearColor* OutSkinColor, struct FLinearColor* OutHairColor, struct FLinearColor* OutEyeColor);
	bool CreateUnifiedMeshIfNone(bool bRequireHeavyDutyCheck);
	bool CreateFPMeshIfNone();
	bool CreateFPDeadMeshIfNone();
};

// Class Mordhau.IdleMotion
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UIdleMotion : public UMordhauMotion
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.IdleMotion");
		return ptr;
	}



};

// Class Mordhau.Interactable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInteractable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Interactable");
		return ptr;
	}



	void UnHighlight();
	void OnInteractPassively(class AMordhauCharacter* Character);
	void OnInteractionStart(class AMordhauCharacter* Character);
	void OnInteractionMaintained(class AMordhauCharacter* Character);
	void OnInteractionEnd();
	void OnHighlightStart();
	void OnHighlightMaintained(class AMordhauCharacter* Character);
	void OnHighlightEnd();
	void OnHeldInteractionStart(class AMordhauCharacter* Character);
	void InteractPassively(class AMordhauCharacter* Character);
	void InteractionStart(class AMordhauCharacter* Character);
	void InteractionMaintained(class AMordhauCharacter* Character);
	void InteractionEnd();
	void Highlight();
	void HeldInteractionStart(class AMordhauCharacter* Character);
	float GetMaxInteractionHoldTime();
	bool CanInteractPassively(class AMordhauCharacter* Character);
	bool CanInteract(class AMordhauCharacter* Character);
	bool CanHeldInteract(class AMordhauCharacter* Character);
};

// Class Mordhau.InteractionComponent
// 0x0018 (FullSize[0x0430] - InheritedSize[0x0418])
class UInteractionComponent : public UBoxComponent
{
public:
	TArray<class UMeshComponent*>                      VisualMeshComponents;                                      // 0x0418(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInteractable;                                           // 0x0428(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHighlighted;                                            // 0x0429(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4AFU[0x6];                                     // 0x042A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.InteractionComponent");
		return ptr;
	}



	void UnHighlight();
	void OnInteractionStart(class AAdvancedCharacter* Character);
	void OnInteractionEnd();
	void OnHighlightStart();
	void OnHighlightEnd();
	void InteractionStart(class AAdvancedCharacter* Character);
	void InteractionEnd();
	void Highlight();
	bool CanInteract(class AAdvancedCharacter* Character);
};

// Class Mordhau.InteractionSystemComponent
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UInteractionSystemComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_6IUU[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       RequestedInteractionTarget;                                // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumberOfSweeps;                                            // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SweepSphereRadius;                                         // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SweepRadius;                                               // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawAllSections;                                          // 0x00CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NVFL[0x1B];                                    // 0x00CD(0x001B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.InteractionSystemComponent");
		return ptr;
	}



	void OnUnPossessed(class AAdvancedCharacter* Character);
	void OnLODTick(float DeltaTime);
	void OnLateTick(float DeltaTime);
	void OnCharacterDestroyed(class AAdvancedCharacter* Character);
};

// Class Mordhau.InteractWithMotion
// 0x0038 (FullSize[0x00D8] - InheritedSize[0x00A0])
class UInteractWithMotion : public UMordhauMotion
{
public:
	unsigned char                                      UnknownData_G30C[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimPauseAt1P;                                             // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimPauseAt3P;                                             // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayOut1PAnimRate;                                         // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayOut3PAnimRate;                                         // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Interact1PMontage;                                         // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Interact3PMontage;                                         // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O9MV[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.InteractWithMotion");
		return ptr;
	}



};

// Class Mordhau.ItemPattern
// 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
class UItemPattern : public UMordhauInventoryItem
{
public:
	class UTexture2D*                                  Texture;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor1;                                                // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor2;                                                // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor3;                                                // 0x0062(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8AYK[0x5];                                     // 0x0063(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ItemPattern");
		return ptr;
	}



};

// Class Mordhau.KickMotion
// 0x0018 (FullSize[0x1108] - InheritedSize[0x10F0])
class UKickMotion : public UAttackMotion
{
public:
	float                                              KickDamageModifierTier3Legs;                               // 0x10F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpKickStaminaDrain;                                      // 0x10F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpKickExtraWindup;                                       // 0x10F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       JumpKickAirMovementRestriction;                            // 0x10FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7YYI[0x3];                                     // 0x10FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAirborneTimeForJumpKickAnim;                            // 0x1100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAirKick;                                                // 0x1104(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0S9L[0x3];                                     // 0x1105(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.KickMotion");
		return ptr;
	}



};

// Class Mordhau.KickWeapon
// 0x0000 (FullSize[0x1C20] - InheritedSize[0x1C20])
class AKickWeapon : public AVirtualWeapon
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.KickWeapon");
		return ptr;
	}



};

// Class Mordhau.KillCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UKillCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.KillCommand");
		return ptr;
	}



};

// Class Mordhau.LateTickComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class ULateTickComponent : public UActorComponent
{
public:
	float                                              LODDeltaTime;                                              // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7L5A[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LateTickComponent");
		return ptr;
	}



};

// Class Mordhau.LeaveVehicleMotion
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class ULeaveVehicleMotion : public UMordhauMotion
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LeaveVehicleMotion");
		return ptr;
	}



};

// Class Mordhau.LegsWearable
// 0x0018 (FullSize[0x01B8] - InheritedSize[0x01A0])
class ULegsWearable : public UMordhauWearable
{
public:
	unsigned char                                      DefaultFeet;                                               // 0x01A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GZBC[0x7];                                     // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      FeetWearables[0x10];                                       // 0x01A1(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LegsWearable");
		return ptr;
	}



	int GetFeetWearablesNum();
	class UClass* GetFeetWearable(int Index);
};

// Class Mordhau.LODStaticMeshActor
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class ALODStaticMeshActor : public AActor
{
public:
	class ULODStaticMeshComponent*                     StaticMeshComponent;                                       // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LODStaticMeshActor");
		return ptr;
	}



};

// Class Mordhau.LODStaticMeshComponent
// 0x0000 (FullSize[0x0480] - InheritedSize[0x0480])
class ULODStaticMeshComponent : public UStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LODStaticMeshComponent");
		return ptr;
	}



};

// Class Mordhau.LogCommand
// 0x0050 (FullSize[0x00D0] - InheritedSize[0x0080])
class ULogCommand : public URconCommand
{
public:
	unsigned char                                      UnknownData_HP4Z[0x50];                                    // 0x0080(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LogCommand");
		return ptr;
	}



};

// Class Mordhau.ManageAdminCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UManageAdminCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ManageAdminCommand");
		return ptr;
	}



};

// Class Mordhau.ManageMatchCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UManageMatchCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ManageMatchCommand");
		return ptr;
	}



};

// Class Mordhau.MapCameraActor
// 0x0010 (FullSize[0x07A0] - InheritedSize[0x0790])
class AMapCameraActor : public ACameraActor
{
public:
	int                                                Team;                                                      // 0x0790(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AtmosphericFogMultiplierOverride;                          // 0x0794(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CE6W[0x8];                                     // 0x0798(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MapCameraActor");
		return ptr;
	}



};

// Class Mordhau.MapListCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UMapListCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MapListCommand");
		return ptr;
	}



};

// Class Mordhau.MapMetadataBase
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
class UMapMetadataBase : public UObject
{
public:
	struct FText                                       Name;                                                      // 0x0028(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     Maps;                                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             Thumbnail;                                                 // 0x0050(0x0018) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     BackgroundImages;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     ForegroundImages;                                          // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FText>                               Tips;                                                      // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MapMetadataBase");
		return ptr;
	}



};

// Class Mordhau.MapMetadataOverride
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UMapMetadataOverride : public UMapMetadataBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MapMetadataOverride");
		return ptr;
	}



};

// Class Mordhau.MapMetadata
// 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
class UMapMetadata : public UMapMetadataBase
{
public:
	TArray<class UClass*>                              Overrides;                                                 // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MapMetadata");
		return ptr;
	}



};

// Class Mordhau.MasterField
// 0x0118 (FullSize[0x0338] - InheritedSize[0x0220])
class AMasterField : public AActor
{
public:
	unsigned char                                      UnknownData_4ZVR[0x5C];                                    // 0x0220(0x005C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CreatedTime;                                               // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeactivatedTime;                                           // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeactivationStartedTime;                                   // 0x0284(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAreSubfieldsHidden;                                       // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFieldActive;                                            // 0x0289(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasBegunDeactivation;                                     // 0x028A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q4PK[0x5];                                     // 0x028B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFieldSpawnComponent*>                SubFieldSpawns;                                            // 0x0290(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ASubField>>            SubFields;                                                 // 0x02A0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                        CombinedBoundsBox;                                         // 0x02B0(0x001C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              FieldLifeTime;                                             // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FieldDeactivationTime;                                     // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FieldFadeOutTime;                                          // 0x02D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              CollisionFilter;                                           // 0x02D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AActor*, int>                           ActorPresenceTickCount;                                    // 0x02E8(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MasterField");
		return ptr;
	}



	void UpdateField();
	void SetSubFieldsHidden(bool bAreHidden);
	void RecomputeCombinedBoundingBox();
	TArray<class ASubField*> GetSubFields();
	struct FVector GetFieldBoundsCenter();
	void DeactivateAndDestroyField();
	void CreateField();
	float ComputeDistanceIntoField(const struct FVector& Location);
	void BeginFieldDeactivation();
};

// Class Mordhau.CreateMatchmakingTicket
// 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
class UCreateMatchmakingTicket : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B9DA[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     QueueName;                                                 // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabMatchmakingAttributes               Attributes;                                                // 0x0068(0x0060) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             Members;                                                   // 0x00C8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                Timeout;                                                   // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5O0D[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CreateMatchmakingTicket");
		return ptr;
	}



	class UCreateMatchmakingTicket* STATIC_CreateMatchmakingTicket(const struct FString& QueueName, const struct FPlayFabMatchmakingAttributes& Attributes, TArray<struct FString> Members, int Timeout);
};

// Class Mordhau.JoinMatchmakingTicket
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UJoinMatchmakingTicket : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LXGC[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     QueueName;                                                 // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     TicketId;                                                  // 0x0068(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabMatchmakingAttributes               Attributes;                                                // 0x0078(0x0060) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.JoinMatchmakingTicket");
		return ptr;
	}



	class UJoinMatchmakingTicket* STATIC_JoinMatchmakingTicket(const struct FString& QueueName, const struct FString& TicketId, const struct FPlayFabMatchmakingAttributes& Attributes);
};

// Class Mordhau.CancelMatchmakingTicket
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UCancelMatchmakingTicket : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BGUM[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     QueueName;                                                 // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CancelMatchmakingTicket");
		return ptr;
	}



	class UCancelMatchmakingTicket* STATIC_CancelMatchmakingTicket(const struct FString& QueueName);
};

// Class Mordhau.GetMatchmakingTicket
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UGetMatchmakingTicket : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GS8S[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     QueueName;                                                 // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     TicketId;                                                  // 0x0068(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetMatchmakingTicket");
		return ptr;
	}



	class UGetMatchmakingTicket* STATIC_GetMatchmakingTicket(const struct FString& QueueName, const struct FString& TicketId);
};

// Class Mordhau.GetMatchmakingMatch
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UGetMatchmakingMatch : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FXUP[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     QueueName;                                                 // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     MatchId;                                                   // 0x0068(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetMatchmakingMatch");
		return ptr;
	}



	class UGetMatchmakingMatch* STATIC_GetMatchmakingMatch(const struct FString& QueueName, const struct FString& MatchId);
};

// Class Mordhau.GetGameServers
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UGetGameServers : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NC8G[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameServerFilter                           Filter;                                                    // 0x0058(0x0048) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetGameServers");
		return ptr;
	}



	class UGetGameServers* STATIC_GetGameServers(const struct FGameServerFilter& Filter);
};

// Class Mordhau.GetGameServer
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UGetGameServer : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ITR1[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerId;                                                  // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     IPV4Address;                                               // 0x0068(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                Port;                                                      // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7F33[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetGameServer");
		return ptr;
	}



	class UGetGameServer* STATIC_GetGameServer(const struct FString& ServerId, const struct FString& IPV4Address, int Port);
};

// Class Mordhau.ReserveServerSlots
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class UReserveServerSlots : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFull;                                                    // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PMK3[0x8];                                     // 0x0060(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ConnectString;                                             // 0x0068(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMordhauBeaconClient*                        BeaconClient;                                              // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorld*                                      World;                                                     // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabServerDetails                       ServerDetails;                                             // 0x0088(0x0028) (NativeAccessSpecifierPrivate)
	TArray<struct FPlayFabMatchmakingPlayer>           Players;                                                   // 0x00B0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ReserveServerSlots");
		return ptr;
	}



	class UReserveServerSlots* STATIC_ReserveServerSlots(class UObject* WorldContextObject, const struct FPlayFabServerDetails& ServerDetails, TArray<struct FPlayFabMatchmakingPlayer> Players);
};

// Class Mordhau.JoinMatchmakingMatch
// 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
class UJoinMatchmakingMatch : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VWI8[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayFabMatchmakingMatch                    Match;                                                     // 0x0058(0x00A8) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.JoinMatchmakingMatch");
		return ptr;
	}



	class UJoinMatchmakingMatch* STATIC_JoinMatchmakingMatch(const struct FPlayFabMatchmakingMatch& Match);
};

// Class Mordhau.LeaveMatchmakingMatch
// 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
class ULeaveMatchmakingMatch : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KJ09[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayFabMatchmakingMatch                    Match;                                                     // 0x0058(0x00A8) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.LeaveMatchmakingMatch");
		return ptr;
	}



	class ULeaveMatchmakingMatch* STATIC_LeaveMatchmakingMatch(const struct FPlayFabMatchmakingMatch& Match);
};

// Class Mordhau.UpdateMatchmakingMatch
// 0x0160 (FullSize[0x0190] - InheritedSize[0x0030])
class UUpdateMatchmakingMatch : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T8O0[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorld*                                      World;                                                     // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabMatchmakingMatch                    Match;                                                     // 0x0060(0x00A8) (NativeAccessSpecifierPrivate)
	struct FString                                     GroupID;                                                   // 0x0108(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GroupName;                                                 // 0x0118(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabGroup                               Group;                                                     // 0x0128(0x0068) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.UpdateMatchmakingMatch");
		return ptr;
	}



	class UUpdateMatchmakingMatch* STATIC_UpdateMatchmakingMatch(class UObject* WorldContextObject, const struct FPlayFabMatchmakingMatch& Match);
};

// Class Mordhau.StartMatchmakingMatch
// 0x0160 (FullSize[0x0190] - InheritedSize[0x0030])
class UStartMatchmakingMatch : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G37A[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorld*                                      World;                                                     // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabMatchmakingMatch                    Match;                                                     // 0x0060(0x00A8) (NativeAccessSpecifierPrivate)
	struct FString                                     GroupID;                                                   // 0x0108(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GroupName;                                                 // 0x0118(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayFabGroup                               Group;                                                     // 0x0128(0x0068) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StartMatchmakingMatch");
		return ptr;
	}



	class UStartMatchmakingMatch* STATIC_StartMatchmakingMatch(class UObject* WorldContextObject, const struct FPlayFabMatchmakingMatch& Match);
};

// Class Mordhau.SetMatchmakingMatchServerDetails
// 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
class USetMatchmakingMatchServerDetails : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4BH9[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayFabMatchmakingMatch                    Match;                                                     // 0x0058(0x00A8) (NativeAccessSpecifierPrivate)
	struct FPlayFabServerDetails                       ServerDetails;                                             // 0x0100(0x0028) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SetMatchmakingMatchServerDetails");
		return ptr;
	}



	class USetMatchmakingMatchServerDetails* STATIC_SetMatchmakingMatchServerDetails(const struct FPlayFabMatchmakingMatch& Match, const struct FPlayFabServerDetails& ServerDetails);
};

// Class Mordhau.GetMatchmakingPenalty
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UGetMatchmakingPenalty : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_70RW[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayFabPlayerEntity                        PlayerEntity;                                              // 0x0058(0x0020) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GroupName;                                                 // 0x0078(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GroupID;                                                   // 0x0088(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetMatchmakingPenalty");
		return ptr;
	}



	class UGetMatchmakingPenalty* STATIC_GetMatchmakingPenalty(const struct FPlayFabPlayerEntity& PlayerEntity);
};

// Class Mordhau.PenalizeForLeavingActiveMatch
// 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
class UPenalizeForLeavingActiveMatch : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M8HU[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayFabPlayerEntity                        PlayerEntity;                                              // 0x0058(0x0020) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGetMatchmakingPenalty*                      GetMatchmakingPenalty;                                     // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GroupName;                                                 // 0x0080(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GroupID;                                                   // 0x0090(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                LeaveCount;                                                // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AS1J[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            LeaveTimestamp;                                            // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64_t                                            BanEndTimestamp;                                           // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PenalizeForLeavingActiveMatch");
		return ptr;
	}



	class UPenalizeForLeavingActiveMatch* STATIC_PenalizeForLeavingActiveMatch(const struct FPlayFabPlayerEntity& PlayerEntity);
	void OnGetMatchmakingPenaltySuccess(const struct FPlayFabPlayerEntity& InPlayerEntity, int InLeaveCount, const struct FDateTime& InLeaveTime, const struct FDateTime& InBanEndTime);
	void OnGetMatchmakingPenaltyFailure(const struct FPlayFabPlayerEntity& InPlayerEntity, int InLeaveCount, const struct FDateTime& InLeaveTime, const struct FDateTime& InBanEndTime);
};

// Class Mordhau.RequestPartyStats
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class URequestPartyStats : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VHDV[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorld*                                      World;                                                     // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             PlayFabIds;                                                // 0x0060(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bSuccess;                                                  // 0x0070(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SNMA[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RequestPartyStats");
		return ptr;
	}



	class URequestPartyStats* STATIC_RequestPartyStats(class UObject* WorldContextObject);
};

// Class Mordhau.MeleeWeaponAnimationProfile
// 0x0098 (FullSize[0x00C0] - InheritedSize[0x0028])
class UMeleeWeaponAnimationProfile : public UObject
{
public:
	TMap<Mordhau_EAttackMove, class UClass*>           Attacks;                                                   // 0x0028(0x0050) (Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      ParryMotion;                                               // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               RightStabBounce;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LeftStabBounce;                                            // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               RightStabBounce1P;                                         // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LeftStabBounce1P;                                          // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               RightStrikeBounce;                                         // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LeftStrikeBounce;                                          // 0x00A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               RightStrikeBounce1P;                                       // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LeftStrikeBounce1P;                                        // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MeleeWeaponAnimationProfile");
		return ptr;
	}



};

// Class Mordhau.MeleeWeaponComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UMeleeWeaponComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MeleeWeaponComponent");
		return ptr;
	}



};

// Class Mordhau.MessageCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UMessageCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MessageCommand");
		return ptr;
	}



};

// Class Mordhau.Mods
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMods : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Mods");
		return ptr;
	}



	bool STATIC_UnmountMod(int ModId);
	bool STATIC_UninstallMod(int ModId);
	void STATIC_Process();
	void STATIC_MountMods(TArray<int> ModIds);
	bool STATIC_MountMod(int ModId);
	int STATIC_MountAllPaksInCustomPakFolder();
	void STATIC_MountAllInstalledMods();
	bool STATIC_IsModMounted(int ModId);
	TArray<struct FQueuedModDownload> STATIC_GetModDownloadQueue();
	struct FInstalledMod STATIC_GetInstalledMod(int ModId);
	TArray<struct FInstalledMod> STATIC_GetAllInstalledMods();
	void STATIC_CancelModDownload(int ModId);
};

// Class Mordhau.GetMod
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UGetMod : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CLNY[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetMod");
		return ptr;
	}



	class UGetMod* STATIC_GetMod(int ModId);
};

// Class Mordhau.DownloadModfilesById
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UDownloadModfilesById : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HDKL[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DownloadModfilesById");
		return ptr;
	}



	class UDownloadModfilesById* STATIC_DownloadModfilesById(TArray<int> ModIds);
};

// Class Mordhau.Mordhau1DVehicle
// 0x0008 (FullSize[0x0B70] - InheritedSize[0x0B68])
class AMordhau1DVehicle : public AMordhauVehicle
{
public:
	unsigned char                                      UnknownData_CXNX[0x8];                                     // 0x0B68(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Mordhau1DVehicle");
		return ptr;
	}



	void OnStepChanged();
};

// Class Mordhau.MordhauAIController
// 0x02D8 (FullSize[0x0600] - InheritedSize[0x0328])
class AMordhauAIController : public AAIController
{
public:
	unsigned char                                      UnknownData_4H7V[0x14];                                    // 0x0328(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       FacingActor;                                               // 0x033C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USkeletalMeshComponent>       FacingSkelMesh;                                            // 0x0344(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FacingBone;                                                // 0x034C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3JX3[0x24];                                    // 0x0354(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAISenseConfig_Sight*                        SightConfig;                                               // 0x0378(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Hearing*                      HearingConfig;                                             // 0x0380(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Damage*                       DamageConfig;                                              // 0x0388(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I922[0x50];                                    // 0x0390(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    DesiredControlRotationOverride;                            // 0x03E0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauCharacter>            ReallyCloseEnemyCached;                                    // 0x03EC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauCharacter>            LastClosestEnemy;                                          // 0x03F4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsClosestEnemySaturated;                                  // 0x03FC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W4HE[0xB];                                     // 0x03FD(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMordhauCharacter>            ClosestEnemyOverride;                                      // 0x0408(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ClosestEnemyIgnoreSet[0x50];                               // 0x0410(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bFirstRun;                                                 // 0x0460(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FC6D[0x3];                                     // 0x0461(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LODDeltaTime;                                              // 0x0464(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomFloat;                                               // 0x0468(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NE07[0x4];                                     // 0x046C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBotProfile*                                 BotProfile;                                                // 0x0470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBotBehaviorProfile*                         BehaviorProfile;                                           // 0x0478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8PDO[0xC];                                     // 0x0480(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RotationInterpolationTime;                                 // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterProfile                           CharacterProfile;                                          // 0x0490(0x00B8) (NativeAccessSpecifierPublic)
	class ACustomizationReplicationActor*              CustomizationReplicationActor;                             // 0x0548(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePassedCustomizationReplicationActor;                   // 0x0550(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GGGS[0x3];                                     // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EnemyScanInterval;                                         // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnemyScanIntervalVariance;                                 // 0x0558(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoRespawn;                                              // 0x055C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsRespawn;                                             // 0x055D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7Q15[0x2];                                     // 0x055E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NextRespawnTime;                                           // 0x0560(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWants1DMovementBackwards;                                 // 0x0564(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LM6I[0x3];                                     // 0x0565(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     DesiredClimbTarget;                                        // 0x0568(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableAnticipateTurns;                                    // 0x0574(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableObstacleAvoidance;                                  // 0x0575(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableSeparation;                                         // 0x0576(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableOptimizeVisibility;                                 // 0x0577(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableOptimizeTopology;                                   // 0x0578(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnablePathOffset;                                         // 0x0579(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableSlowdownAtGoal;                                     // 0x057A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CLV0[0x1];                                     // 0x057B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SeparationWeight;                                          // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CollisionQueryRange;                                       // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathOptimizationRange;                                     // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AvoidanceRangeMultiplier;                                  // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<AIModule_ECrowdAvoidanceQuality>       AvoidanceQuality;                                          // 0x058C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	AIModule_ECrowdSimulationState                     SimulationState;                                           // 0x058D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MCAV[0x2];                                     // 0x058E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DefaultNavQueryFilter;                                     // 0x0590(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Team1NavQueryFilter;                                       // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Team2NavQueryFilter;                                       // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      NoLadderNavQueryFilter;                                    // 0x05A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ISRO[0x48];                                    // 0x05B0(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MidPointAcceptanceRadius;                                  // 0x05F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DQX0[0x4];                                     // 0x05FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauAIController");
		return ptr;
	}



	void UpdatePerceptionInfo(class AAdvancedCharacter* InCharacter, struct FPerceptionInfo* PerceptionInfo);
	void StopInteract();
	void StartInteract(class AActor* Target);
	void StartFacingMovement(float LocationUpOffset);
	void StartFacingLocation(const struct FVector& WorldLocation);
	void StartFacingBone(class USkeletalMeshComponent* SkelMesh, const struct FName& BoneToFace, float LocationUpOffset, const struct FVector2D& DegreeOffset);
	void StartFacingActor2D(class AActor* Actor, float LocationUpOffset);
	void StartFacingActor(class AActor* Actor, float LocationUpOffset, const struct FVector2D& DegreeOffset);
	void SetClosestEnemyOverride(class AMordhauCharacter* Override);
	void ResumeLogic(const struct FString& Reason);
	void RequestVoiceCommand(unsigned char Command);
	void RefreshCharacterProfile();
	bool PerceivesEnemy();
	bool PerceivesAlly();
	void PauseLogic(const struct FString& Reason);
	void OnStoppedPerceivingCharacter(class AAdvancedCharacter* PerceivedCharacter, const struct FPerceptionInfo& PerceptionInfo);
	void OnStartedPerceivingCharacter(class AAdvancedCharacter* PerceivedCharacter, const struct FPerceptionInfo& PerceptionInfo);
	void OnPerceptionUpdated(TArray<class AActor*> InUpdatedActors);
	void OnCharacterDiedOrDestroyed(class AAdvancedCharacter* AdvancedCharacter);
	void OnAfterUnPossess();
	TEnumAsByte<AIModule_EPathFollowingRequestResult> MoveToLocationWithRandomMidpoint(const struct FVector& Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, class UClass* FilterClass, bool bAllowPartialPath);
	bool IsMovePending();
	int GetTeam();
	TArray<class AMordhauCharacter*> GetPerceivedEnemies();
	TArray<class AMordhauCharacter*> GetPerceivedAllies();
	struct FVector GetMoveMidpoint(const struct FVector& Goal, class ANavigationData* NavData, class UClass* FilterClass);
	float GetMotionBasedRandom();
	class AMordhauCharacter* GetKthClosestOfThree(int Idx);
	class AActor* GetCurrentlyFacingActor();
	Mordhau_EAIFacingMode GetCurrentFacingMode();
	class AMordhauCharacter* GetClosestEnemyOverride();
	class AMordhauCharacter* GetClosestEnemy();
	class AMordhauCharacter* GetClosestAlly();
	int GetAllyClearanceSides();
	void DestroyController();
	bool CanSee(class AActor* Target, float Distance);
	bool CanInteract(class AActor* Target);
};

// Class Mordhau.MordhauAnimInstance
// 0x0AE0 (FullSize[0x0E60] - InheritedSize[0x0380])
class UMordhauAnimInstance : public UCreatureAnimInstance
{
public:
	int                                                CreatedFrame;                                              // 0x0380(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastUpdateFrame;                                           // 0x0384(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InternalScaledTimeSeconds;                                 // 0x0388(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshRelativeZScale;                                        // 0x038C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimNodePackedFaceCustomization            FaceCustomization;                                         // 0x0390(0x0020) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAnimNodePackedDismemberment                Dismemberment;                                             // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            PreviousRightHandEquipment;                                // 0x03C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            MainEquipmentPtr;                                          // 0x03C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MainAnimationType;                                         // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasRagdollFalling;                                        // 0x03D8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F6K8[0x3];                                     // 0x03D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastRagdollFallingTime;                                    // 0x03DC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldPerformInstantAnimSwitch;                           // 0x03E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UVV3[0x1];                                     // 0x03E1(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsGetUpFront;                                             // 0x03E2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B8RS[0x1];                                     // 0x03E3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GetUpAnimationDuration;                                    // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    GetUpRotation;                                             // 0x03E8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      DeathSyncedRandom;                                         // 0x03F4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HJ4J[0x3];                                     // 0x03F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsDedicatedServer;                                         // 0x03F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimLOD0;                                                  // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimLOD1;                                                  // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecentlyRendered;                                          // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecentlyRenderedNonAuth;                                   // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z6N0[0x8];                                     // 0x040C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimLOD0Distance;                                          // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimLOD1Distance;                                          // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsFemale;                                                  // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3AB0[0x3];                                     // 0x0420(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsClimbingA;                                              // 0x0423(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClimbOffsetA;                                              // 0x0424(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClimbOffsetEndOffsetA;                                     // 0x0430(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClimbLedgeOffsetA;                                         // 0x043C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsSlowClimbingA;                                           // 0x0448(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ClimbRotationA;                                            // 0x044C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsClimbingB;                                              // 0x0458(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZYTE[0x3];                                     // 0x0459(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ClimbOffsetB;                                              // 0x045C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClimbOffsetEndOffsetB;                                     // 0x0468(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClimbLedgeOffsetB;                                         // 0x0474(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ClimbRotationB;                                            // 0x0480(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              IsSlowClimbingB;                                           // 0x048C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FastSmoothedIsCrouching;                                   // 0x0490(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnclampedFastSmoothedIsCrouching;                          // 0x0494(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatSpringState                           CrouchSpringState;                                         // 0x0498(0x0008) (NoDestructor, NativeAccessSpecifierPublic)
	float                                              ServerCrouchSpeed;                                         // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   CrouchSpringLimits;                                        // 0x04A4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchSpringStiffness;                                     // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UncrouchSpringStiffness;                                   // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchSpringDamping;                                       // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchSpringMass;                                          // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DB5F[0x4];                                     // 0x04BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               VehicleTransitionAnimation;                                // 0x04C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleTransitionBlendWeight;                              // 0x04C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleTransitionComponentLocation;                        // 0x04CC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    VehicleTransitionComponentRotation;                        // 0x04D8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              IsDrivingFloat;                                            // 0x04E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GOCM[0x4];                                     // 0x04E8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    LowerBodyRotationOffset;                                   // 0x04EC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BKFU[0x4];                                     // 0x04F8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Direction;                                                 // 0x04FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    MovementCorrectionHips;                                    // 0x0500(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MovementCorrectionHipsInterpSpeed;                         // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementCorrectionAnimRate;                                // 0x0510(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionWithOffset;                                       // 0x0514(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionOffset;                                           // 0x0518(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionOffsetSlowInterpSpeed;                            // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionOffsetSlow;                                       // 0x0520(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_90SC[0x8];                                     // 0x0524(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Velocity;                                                  // 0x052C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmoothedVelocity;                                          // 0x0530(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OneToZeroAtWalkSpeed;                                      // 0x0534(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3DIM[0x4];                                     // 0x0538(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimRateFactor1PMaxSprint;                                 // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementSpeedScale;                                        // 0x0540(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementAnimRate;                                          // 0x0544(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedWarping;                                              // 0x0548(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThirdPersonVelocity;                                       // 0x054C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseBackBlendSpace;                                        // 0x0550(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RQMW[0x3];                                     // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    StopBounce;                                                // 0x0554(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    StopBounceWorld;                                           // 0x0560(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              StopBounceLimit;                                           // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BounceInterpSpeedIn;                                       // 0x0570(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BounceInterpSpeedOut;                                      // 0x0578(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BounceDuck;                                                // 0x0580(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceDuckLimit;                                           // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_57K7[0x18];                                    // 0x0590(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SlowVelocityLagTime;                                       // 0x05A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4QXB[0x18];                                    // 0x05AC(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FastVelocityLagTime;                                       // 0x05C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopTiltFactor;                                            // 0x05C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopDuckFactor;                                            // 0x05CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngularVelocityInterpSpeed;                                // 0x05D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngularVelocity;                                           // 0x05D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbsoluteAngularVelocityLowerBody;                          // 0x05D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CQHN[0x4];                                     // 0x05DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AngularVelocityLowerBody;                                  // 0x05E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5DVJ[0x4];                                     // 0x05E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AngularVelocityLowerBodyWindow;                            // 0x05E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BKIN[0x4];                                     // 0x05EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AnimatedMovementDirectionInCompSpace;                      // 0x05F0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngularVelocityPitch;                                      // 0x05FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpringPitchYawValue;                                       // 0x0600(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatSpringState                           PitchSpringState;                                          // 0x0608(0x0008) (NoDestructor, NativeAccessSpecifierPublic)
	struct FFloatSpringState                           YawSpringState;                                            // 0x0610(0x0008) (NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpringPitchYawStiffness;                                   // 0x0618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpringPitchYawDamping;                                     // 0x0620(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SpringPitchYawMass;                                        // 0x0628(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandSpringWeight;                                          // 0x0630(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9SZN[0x4];                                     // 0x0634(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsFirstPerson;                                            // 0x0638(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4O7Y[0x3];                                     // 0x0639(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsFirstPersonFloat;                                        // 0x063C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsNotFirstPersonFloat;                                     // 0x0640(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraCollisionOffset;                                     // 0x0644(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  RightWeaponBoneBaseTransform;                              // 0x0650(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     WeaponSlideVector;                                         // 0x0680(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     WeaponSlideVectorInverse;                                  // 0x068C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UO3U[0x4];                                     // 0x0698(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WeaponSlideCompensationWeight;                             // 0x069C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightShoulderOffset1P;                                     // 0x06A0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftShoulderOffset1P;                                      // 0x06AC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShoulderOffset1PWeight;                                    // 0x06B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftShoulderIdleOffset1P;                                  // 0x06BC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightHandIKOffset;                                         // 0x06C8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RightHandIKOffsetWeight;                                   // 0x06D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffhandIKWeight;                                           // 0x06D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TFCD[0x4];                                     // 0x06DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  OffhandSlidingAxis;                                        // 0x06E0(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsOffhandFixedTarget;                                     // 0x0710(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PY77[0x3];                                     // 0x0711(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     OffhandFixedTargetVector;                                  // 0x0714(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftHandGripPosition;                                      // 0x0720(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightHandGripPosition;                                     // 0x072C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    RightHandGripRotation;                                     // 0x0738(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              OffhandIsRightHand;                                        // 0x0744(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               JumpAnimation;                                             // 0x0748(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FallingAnimation;                                          // 0x0750(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LandAnimation;                                             // 0x0758(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YC5Q[0x18];                                    // 0x0760(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BouncyMagnitudeOffset;                                     // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BouncySlowVelocityLagTime;                                 // 0x077C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IF0U[0x18];                                    // 0x0780(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BouncyFastVelocityLagTime;                                 // 0x0798(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D5GD[0x4];                                     // 0x079C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               SkinnyPose;                                                // 0x07A0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FatPose;                                                   // 0x07A8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               StrongPose;                                                // 0x07B0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BouncyInterpSpeed;                                         // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BouncyFactorBreasts;                                       // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BouncyFactorArms;                                          // 0x07C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BouncyFactorBelly;                                         // 0x07C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BouncyFactorLegs;                                          // 0x07C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BreastsT;                                                  // 0x07CC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LowerBackBellyT;                                           // 0x07D8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpineAdjustT;                                              // 0x07E4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftArmAdjustT;                                            // 0x07F0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightArmAdjustT;                                           // 0x07FC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftUpLegAdjustT;                                          // 0x0808(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightUpLegAdjustT;                                         // 0x0814(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsTankFloat;                                               // 0x0820(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsDwarfFloat;                                              // 0x0824(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfSlowerAnimSpeedFactor;                                // 0x0828(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Fat;                                                       // 0x082C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Skinny;                                                    // 0x0830(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Strong;                                                    // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsHeadDismembered;                                         // 0x0838(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    NeckDismemberedRotation;                                   // 0x083C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    LeftShoulderDismemberedRotation;                           // 0x0848(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              IsLeftArmDismembered;                                      // 0x0854(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    RightShoulderDismemberedRotation;                          // 0x0858(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              IsRightArmDismembered;                                     // 0x0864(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsAnythingDismembered;                                     // 0x0868(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrackingWeight;                                            // 0x086C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C59G[0x4];                                     // 0x0870(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    LookingAtRotationNeck;                                     // 0x0874(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    LookingAtRotationHead;                                     // 0x0880(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    LookingAtRotationEyes;                                     // 0x088C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              HideEars;                                                  // 0x0898(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HideNose;                                                  // 0x089C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 BreathCurve;                                               // 0x08A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   HealthToBreathDuration;                                    // 0x08A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Breath;                                                    // 0x08B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5IIR[0x10];                                    // 0x08B4(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CounterCompensateLookWeight;                               // 0x08C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6CK1[0xC];                                     // 0x08C8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    CounterCompensateRotation;                                 // 0x08D4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              LookUpValue;                                               // 0x08E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RightLegBendBlendWeight;                                   // 0x08E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpineBendBlendWeight;                                      // 0x08E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpineArmsCompensationFactor;                               // 0x08EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnValue;                                                 // 0x08F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftHandIsEmpty;                                           // 0x08F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AtmosphericsWeight;                                        // 0x08F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Arms3PSyncWeight;                                          // 0x08FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X6MD[0x8];                                     // 0x0900(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BlockDirection;                                            // 0x0908(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisarmDirection;                                           // 0x090C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpineSpaceAdditive                         SpineSpaceAdditive;                                        // 0x0910(0x0084) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              LeftTorsoBlendWeight;                                      // 0x0994(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               AttackBounce;                                              // 0x0998(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             RangedDrawnAdditive;                                       // 0x09A0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    SwayRotation;                                              // 0x09A8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SwayWeight;                                                // 0x09B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             ParryAdditive;                                             // 0x09B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             ParryPushAdditive;                                         // 0x09C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             AltParryPushAdditive;                                      // 0x09C8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerBodyBlendSpaceBlendTime;                              // 0x09D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WFSS[0x4];                                     // 0x09D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpaceBase*                             UpperBlendSpaceA;                                          // 0x09D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperBlendSpaceABlendTime;                                 // 0x09E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KTWJ[0x4];                                     // 0x09E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               UpperAdditiveA;                                            // 0x09E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                             UpperBlendSpaceB;                                          // 0x09F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperBlendSpaceBBlendTime;                                 // 0x09F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LBRQ[0x4];                                     // 0x09FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               UpperAdditiveB;                                            // 0x0A00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCurrentUpperA;                                          // 0x0A08(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_69XB[0x7];                                     // 0x0A09(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               LowerBodyAnimationA;                                       // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               LowerBodyAnimationB;                                       // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               HorseUpperRearing;                                         // 0x0A20(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCurrentLowerA;                                          // 0x0A28(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHorseRearing;                                           // 0x0A29(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CHEJ[0x2];                                     // 0x0A2A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Couching;                                                  // 0x0A2C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Rearing;                                                   // 0x0A30(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Lean;                                                      // 0x0A34(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleAnimTime;                                           // 0x0A38(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleAnimRate;                                           // 0x0A3C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleLeftHandTarget;                                     // 0x0A40(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleRightHandTarget;                                    // 0x0A4C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleTurn;                                               // 0x0A58(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleLookUp;                                             // 0x0A5C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleLeftFootTarget;                                     // 0x0A60(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleRightFootTarget;                                    // 0x0A6C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    VehicleLeftFootRotation;                                   // 0x0A78(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    VehicleRightFootRotation;                                  // 0x0A84(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              VehicleVelocity;                                           // 0x0A90(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VehicleDirection;                                          // 0x0A94(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VehicleSeat;                                               // 0x0A98(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    VehicleActorRotation;                                      // 0x0AA4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    VehicleRotationOffset;                                     // 0x0AB0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    VehicleSeatRotation;                                       // 0x0ABC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bBallistaReloading;                                        // 0x0AC8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2YZG[0x3];                                     // 0x0AC9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitEffectIKWeight;                                         // 0x0ACC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitEffectLocationSlideSpeed;                               // 0x0AD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitEffectDisableSpeed;                                     // 0x0AD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HitEffectIKLocation;                                       // 0x0AD8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HitEffectIKLocationStart;                                  // 0x0AE4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    HitEffectRotation;                                         // 0x0AF0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    HitEffectRotationStart;                                    // 0x0AFC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F3GR[0x4];                                     // 0x0B08(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FlinchFreezeBlendInDuration;                               // 0x0B0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchFreezeRotationBlendInSpeed;                          // 0x0B10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchFreezeTranslationBlendInSpeed;                       // 0x0B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchFreezeBlendInAlpha;                                  // 0x0B18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchBlendInDuration;                                     // 0x0B1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchRotationBlendInSpeed;                                // 0x0B20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchTranslationBlendInSpeed;                             // 0x0B24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchRotationBlendOutSpeed;                               // 0x0B28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchTranslationBlendOutSpeed;                            // 0x0B2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchRotationBlendOutSpeedFast;                           // 0x0B30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchTranslationBlendOutSpeedFast;                        // 0x0B34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchPitchAmount;                                         // 0x0B38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchYawAmount;                                           // 0x0B3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchPitchYawFactor;                                      // 0x0B40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchHipsZFactor;                                         // 0x0B44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponDirHipsZFactor;                                      // 0x0B48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TranslationNonHipsFactor;                                  // 0x0B4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    FlinchRotationTarget;                                      // 0x0B50(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     FlinchTranslationTarget;                                   // 0x0B5C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FlinchHipsTranslationTarget;                               // 0x0B68(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FlinchHitSpineIdx;                                         // 0x0B74(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchStartTime;                                           // 0x0B78(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    CurrentFlinchSpineRotationsCombined;                       // 0x0B7C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    HipsFlinchRotation;                                        // 0x0B88(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     HipsFlinchTranslation;                                     // 0x0B94(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HipsFlinchTranslationInternal;                             // 0x0BA0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LowerBackFlinchRotation;                                   // 0x0BAC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     LowerBackFlinchTranslation;                                // 0x0BB8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    SpineFlinchRotation;                                       // 0x0BC4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     SpineFlinchTranslation;                                    // 0x0BD0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Spine1FlinchRotation;                                      // 0x0BDC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Spine1FlinchTranslation;                                   // 0x0BE8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    NeckFlinchRotation;                                        // 0x0BF4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     NeckFlinchTranslation;                                     // 0x0C00(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    HeadFlinchRotation;                                        // 0x0C0C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     HeadFlinchTranslation;                                     // 0x0C18(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_WeaponSlideVectorIsNonzero;                         // 0x0C24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_UBCrouchAlpha;                                      // 0x0C28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_LBCrouchAlpha;                                      // 0x0C2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_UBCrouchSpine;                                      // 0x0C30(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_UBCrouchForearms;                                   // 0x0C3C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_UBCrouchArms;                                       // 0x0C48(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_UBCrouchHead;                                       // 0x0C54(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_UBCrouchShoulder;                                   // 0x0C60(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_UBSpineArmsCompensationAlpha;                       // 0x0C6C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_UBSpineArmsCompensationRotator;                     // 0x0C70(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHelper_LBFootShuffling;                                   // 0x0C7C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S4I9[0x3];                                     // 0x0C7D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Helper_LBFootShufflingPlayRate;                            // 0x0C80(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHelper_LBFootShufflingRight;                              // 0x0C84(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JAV8[0x3];                                     // 0x0C85(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    Helper_LBDirectionOffsetSlowRotator;                       // 0x0C88(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_LBDirectionOffsetSlowRotatorInverse;                // 0x0C94(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_LBDirectionOffsetSlowHipsZ;                         // 0x0CA0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_LBDirectionOffsetSlowHipsZInverse;                  // 0x0CAC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_LBDirectionOffsetSlowFootRotationOffset;            // 0x0CB8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_UBVelocity;                                         // 0x0CC4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHelper_LBVelocityIsZero;                                  // 0x0CC8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SN53[0x3];                                     // 0x0CC9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     Helper_LBCrouchOffset;                                     // 0x0CCC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_LBCrouchOffsetInverse;                              // 0x0CD8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_LBHipsZOverrideAlpha;                               // 0x0CE4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_TrackingWeightAlpha;                                // 0x0CE8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_BreathAlpha;                                        // 0x0CEC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_IsNotDrivingFloat;                                  // 0x0CF0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_IsAnyFlinchValueNonZero;                            // 0x0CF4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_HipsFlinchTranslationInverse;                       // 0x0CF8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_HipsFlinchRotationInverse;                          // 0x0D04(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_ArmsShoulderFlinchInverse;                          // 0x0D10(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_FirstPersonNotDead;                                 // 0x0D1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_FirstPersonZoomOffsetAndCollision;                  // 0x0D20(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_CameraCollisionOffsetWithNot3PArmsSync;             // 0x0D2C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_FirstPersonNotDeadWith3PArmsSync;                   // 0x0D38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_IsNotFemale;                                        // 0x0D3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_SpineBendBlendWeightHalf;                           // 0x0D40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_SpineBendBlendWeightThird;                          // 0x0D44(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_GroundingRightFootRotationOffset;                   // 0x0D48(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_GroundingLeftFootRotationOffset;                    // 0x0D54(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_GroundingRightFootTranslationOffset;                // 0x0D60(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_GroundingLeftFootTranslationOffset;                 // 0x0D6C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_GroundingWeightWithFirstPerson;                     // 0x0D78(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_GroundingWeightWithNotFirstPerson;                  // 0x0D7C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NotFirstPersonWithAtmospherics;                            // 0x0D80(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NotFirstPersonWithAtmosphericsAndAnimLOD1;                 // 0x0D84(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_FaceUpperLids;                                      // 0x0D88(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_LeftHandIKWeight;                                   // 0x0D94(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_RightHandIKWeight;                                  // 0x0D98(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_RootRotationOffsetInverse;                          // 0x0D9C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_StopBounceMediumWeight;                             // 0x0DA8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_StopBounceLightWeight;                              // 0x0DAC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_StopBounceInverse;                                  // 0x0DB0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_StopBounceInverseHead;                              // 0x0DBC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_StopBounceHips;                                     // 0x0DC8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_BounceDuckWithBounceWeight;                         // 0x0DD4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_BounceDuckWithBounceWeightInverse;                  // 0x0DE0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_SpineBendRotation;                                  // 0x0DEC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_HipsBendRotation;                                   // 0x0DF8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_SpineBendRotationAlpha;                             // 0x0E04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_RightLegBendRotation;                               // 0x0E08(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_ArmsBendRotation;                                   // 0x0E14(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AtmosphericsWeightWithAnimLOD0;                            // 0x0E20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_LowerBodyRotationOffsetInverse;                     // 0x0E24(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Helper_RightWeaponBoneBaseTranslation;                     // 0x0E30(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_RightWeaponBoneBaseRotation;                        // 0x0E3C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    Helper_SpringPitchYawValueRotator;                         // 0x0E48(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Helper_HandSpringWeight;                                   // 0x0E54(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Helper_ShoulderOffset1PWith1PWeight;                       // 0x0E58(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LI45[0x4];                                     // 0x0E5C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauAnimInstance");
		return ptr;
	}



};

// Class Mordhau.MordhauAnimMetaData
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UMordhauAnimMetaData : public UAnimMetaData
{
public:
	float                                              OverrideIdleChangeBlendTime;                               // 0x0028(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesSpineBending;                                     // 0x002C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesAtmospherics;                                     // 0x002D(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9DWN[0x2];                                     // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ForceCinematicCameraWeight;                                // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesOffhandIK;                                        // 0x0034(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForcesOffhandIK;                                          // 0x0035(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverridesOffhandIKChangeSpeed;                            // 0x0036(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DXOP[0x1];                                     // 0x0037(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OffhandIKChangeSpeedOverride;                              // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxOffhandIKDistance;                                      // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinOffhandIKDistance;                                      // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisablesSpineArmsCompensation;                            // 0x0044(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AYM3[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ParamA;                                                    // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParamB;                                                    // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParamC;                                                    // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParamD;                                                    // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauAnimMetaData");
		return ptr;
	}



};

// Class Mordhau.MordhauBeaconClient
// 0x0040 (FullSize[0x02F0] - InheritedSize[0x02B0])
class AMordhauBeaconClient : public AOnlineBeaconClient
{
public:
	Mordhau_EBeaconRequest                             Request;                                                   // 0x02B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B2BM[0x7];                                     // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	double                                             PingStartTime;                                             // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayFabPlayerEntity>                PlayerEntities;                                            // 0x02C0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2R48[0x20];                                    // 0x02D0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauBeaconClient");
		return ptr;
	}



	void ServerReserveSlots(TArray<struct FPlayFabPlayerEntity> InPlayerEntities);
	void ServerPing();
	bool ReserveSlots(struct FURL* ConnectURL, TArray<struct FPlayFabPlayerEntity> InPlayerEntites);
	bool Ping(struct FURL* ConnectURL);
	void ClientPong();
	void ClientNotifyReservationStatus(int OpenSlots, Mordhau_EReservationStatus ReservationStatus);
};

// Class Mordhau.MordhauBeaconHost
// 0x0000 (FullSize[0x0248] - InheritedSize[0x0248])
class AMordhauBeaconHost : public AOnlineBeaconHostObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauBeaconHost");
		return ptr;
	}



};

// Class Mordhau.MordhauCameraComponent
// 0x01F0 (FullSize[0x09A0] - InheritedSize[0x07B0])
class UMordhauCameraComponent : public UCameraComponent
{
public:
	unsigned char                                      UnknownData_3C4E[0x20];                                    // 0x07B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxCameraCycleFrequency;                                   // 0x07D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonLookUpOffset;                                   // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimingCameraActivateChangeSpeed;                           // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimingCameraDisableChangeSpeed;                            // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0VV4[0x4];                                     // 0x07E0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CinematicCameraBlendWeight;                                // 0x07E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumCinematicCameraBlendWeight;                         // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FirstPersonCinematicCameraOffset;                          // 0x07EC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ThirdPersonCinematicCameraOffset;                          // 0x07F8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    CinematicCameraRotationOffset;                             // 0x0804(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MaxThirdPersonFOV;                                         // 0x0810(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ThirdPersonRotationOffset;                                 // 0x0814(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     ThirdPersonCameraOffset;                                   // 0x0820(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ThirdPersonAimingCameraRotationOffset;                     // 0x082C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     ThirdPersonAimingCameraOffset;                             // 0x0838(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThirdPersonHipsSmoothSpeed;                                // 0x0844(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ThirdPersonHipsSmoothLimits;                               // 0x0848(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThirdPersonTeleportThreshold;                              // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeadCameraLocationSmoothSpeed;                             // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeadCameraLocationSmoothMaxDistance;                       // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeadCameraRotationSmoothSpeed;                             // 0x0860(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SmoothedHeadLocation;                                      // 0x0864(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    SmoothedHeadRotation;                                      // 0x0870(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96VZ[0x4];                                     // 0x087C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  PreviousHeadTransform;                                     // 0x0880(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              TurnOnFirstPersonModelDistance;                            // 0x08B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnOnThirdPersonModelDistance;                            // 0x08B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ThirdToFirstBlendCurve;                                    // 0x08B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 FirstToThirdBlendCurve;                                    // 0x08C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MapToFirstBlendCurve;                                      // 0x08C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MapToThirdBlendCurve;                                      // 0x08D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MapToFirstRotationBlendCurve;                              // 0x08D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MapToThirdRotationBlendCurve;                              // 0x08E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CameraStyleBlendingFrom;                                   // 0x08E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CameraStyleBlendingTo;                                     // 0x08E9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MD2H[0x2];                                     // 0x08EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPOV                                        LastCameraStyleChangeCameraPOV;                            // 0x08EC(0x001C) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPOV                                        LastVehicleCameraPOV;                                      // 0x0908(0x001C) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPOV                                        LastNonVehicleCameraPOV;                                   // 0x0924(0x001C) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPOV                                        LastCameraPOV;                                             // 0x0940(0x001C) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsBlendingCameraStyle;                                    // 0x095C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EGUN[0x3];                                     // 0x095D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraStyleChangeBlendDuration;                            // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MapCameraStyleChangeBlendDuration;                         // 0x0964(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SmoothedHipsOffset;                                        // 0x0968(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousHipsLocation;                                      // 0x0974(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 CameraFOVToLocationOffsetScaleCurve;                       // 0x0980(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousCharacterMeshLocation;                             // 0x0988(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1U00[0xC];                                     // 0x0994(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCameraComponent");
		return ptr;
	}



	void UpdateCamera();
	bool IsBlendingFromMapView();
	struct FPOV ComputeCameraPOV();
};

// Class Mordhau.MordhauCameraManager
// 0x0650 (FullSize[0x2D90] - InheritedSize[0x2740])
class AMordhauCameraManager : public APlayerCameraManager
{
public:
	class UTagSystemComponent*                         TagSystemComponent;                                        // 0x2740(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      ClosestWidgetVisibilityQueueDistances;                     // 0x2748(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClosestWidgetVisibilityQueueMaxDistance;                   // 0x2758(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QO10[0x4];                                     // 0x275C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AAtmosphericFog*                             AtmosphericFog;                                            // 0x2760(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K7D1[0x4];                                     // 0x2768(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AtmosphericFogMultiplierChangeSpeed;                       // 0x276C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInMainMenu;                                             // 0x2770(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5K86[0xF];                                     // 0x2771(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMinimalViewInfo                            LastViewInfo;                                              // 0x2780(0x05D0) (NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       QueuedViewTarget;                                          // 0x2D50(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UMordhauWidgetComponent>> LateTickRequests;                                          // 0x2D58(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitFlashFadeInDuration;                                    // 0x2D68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitFlashStayDuration;                                      // 0x2D6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitFlashFadeOutDuration;                                   // 0x2D70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BP18[0x8];                                     // 0x2D74(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitFlashValue;                                             // 0x2D7C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHitFlashDirectional;                                    // 0x2D80(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R7M2[0x3];                                     // 0x2D81(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       HitFlashSource;                                            // 0x2D84(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitFlashDegrees;                                           // 0x2D8C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCameraManager");
		return ptr;
	}



	void SetViewTargetBP(class AActor* NewTarget);
	void SetCameraStyleBP(const struct FName& NewCameraStyle);
	void OnHitFlash(bool bIsDirectional, class AActor* Source);
	void LeaveMapView();
	void LeaveCustomization();
	class AActor* GetViewTargetBP();
	bool GetIsInMapView();
	bool GetIsInCustomization();
	struct FName GetCameraStyleBP();
	struct FMinimalViewInfo GetCameraCache();
	void EnterMapView();
	void EnterCustomization(class AActor* CustomizationTarget);
};

// Class Mordhau.MordhauCapsuleComponent
// 0x0010 (FullSize[0x0420] - InheritedSize[0x0410])
class UMordhauCapsuleComponent : public UCapsuleComponent
{
public:
	unsigned char                                      UnknownData_BL0P[0x10];                                    // 0x0410(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCapsuleComponent");
		return ptr;
	}



};

// Class Mordhau.MordhauCharacter
// 0x07A8 (FullSize[0x1290] - InheritedSize[0x0AE8])
class AMordhauCharacter : public AAdvancedCharacter
{
public:
	class UMordhauMotion*                              Motion;                                                    // 0x0AE8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E9D9[0x8];                                     // 0x0AF0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class UMordhauWearable*>        WearableProtectionCoverageMap;                             // 0x0AF8(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QOAI[0x10];                                    // 0x0B48(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauCameraComponent*                     MordhauCamera;                                             // 0x0B58(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFaceCustomizationComponent*                 FaceCustomizationComponent;                                // 0x0B60(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NextAllowedVoiceCommandTime;                               // 0x0B68(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsClimb;                                               // 0x0B6C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDrop;                                                // 0x0B6D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowClimbing;                                            // 0x0B6E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowVehicles;                                            // 0x0B6F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowEquipmentRotate;                                     // 0x0B70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XI4B[0x3];                                     // 0x0B71(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InTeamAreaSince;                                           // 0x0B74(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideIsInEnemyTeamArea;                                // 0x0B78(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHoldingBlock;                                           // 0x0B79(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHoldingModeSwitch;                                      // 0x0B7A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HN9Q[0x1];                                     // 0x0B7B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HoldingModeSwitchTime;                                     // 0x0B7C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToHoldModeSwitchForOtherHand;                          // 0x0B80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpineSpaceAdditive                         OverrideSpineSpaceAdditive;                                // 0x0B84(0x0084) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseOverrideSpineSpaceAdditive;                            // 0x0C08(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0A7D[0x3];                                     // 0x0C09(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSpineSpaceAdditive                         SpineSpaceAdditiveTarget;                                  // 0x0C0C(0x0084) (NoDestructor, NativeAccessSpecifierPublic)
	struct FSpineSpaceAdditive                         SpineSpaceAdditiveFrom;                                    // 0x0C90(0x0084) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WFBP[0xC];                                     // 0x0D14(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsLeftArmDisabled;                                        // 0x0D20(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightArmDisabled;                                       // 0x0D21(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLeftLegDisabled;                                        // 0x0D22(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightLegDisabled;                                       // 0x0D23(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X1MP[0x4];                                     // 0x0D24(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFacialBoneSetup>                    FaceCustomizationSetup;                                    // 0x0D28(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotAnimateBreathing;                                    // 0x0D38(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotUseGrounding;                                        // 0x0D39(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSoundDisabled;                                          // 0x0D3A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotLookAtOthers;                                        // 0x0D3B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedDodge;                                           // 0x0D3C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedKnockback;                                       // 0x0D3D(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedVoiceCommand;                                    // 0x0D3E(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NU7F[0x1];                                     // 0x0D3F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ACustomizationReplicationActor> ReplicatedCustomizationReplicationActor;                   // 0x0D40(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                          FaceCustomizationBonesTransforms;                          // 0x0D48(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W3IX[0x8];                                     // 0x0D58(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AControlPoint*                               CurrentCapturePoint;                                       // 0x0D60(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentCapturePointTime;                                   // 0x0D68(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceColorOverrides;                                      // 0x0D6C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N3X9[0x3];                                     // 0x0D6D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                ColorAOverride;                                            // 0x0D70(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorBOverride;                                            // 0x0D80(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentForcedLOD;                                          // 0x0D90(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7V6I[0x4];                                     // 0x0D94(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AActor>>               ActorsThatDestroyWithUs;                                   // 0x0D98(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentBleedOutParticles;                                  // 0x0DA8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       LastMovementFrontalHitActor;                               // 0x0DB0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O73B[0xC];                                     // 0x0DB8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bWantsCrouch;                                              // 0x0DC4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IWTY[0x3];                                     // 0x0DC5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CrouchCooldown;                                            // 0x0DC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintingMoveBlockedByFractionToTrigger;                   // 0x0DCC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveBlockedBySlowMinInterval;                              // 0x0DD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MLXA[0x4];                                     // 0x0DD4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ClimbTargetLocation;                                       // 0x0DD8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastNoticeableLookChange;                                  // 0x0DE4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   PreviousLookValues;                                        // 0x0DE8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoticeableLookChangeMinRate;                               // 0x0DF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HXIV[0x4];                                     // 0x0DF4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDamageRecord>                       DamageHistory;                                             // 0x0DF8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1GID[0x10];                                    // 0x0E08(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StructureDamageModifier;                                   // 0x0E18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StructureRepairModifier;                                   // 0x0E1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ExtraStaminaOnHit;                                         // 0x0E20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaCostModifier;                                       // 0x0E24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeWindupModifier;                                       // 0x0E28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeComboExtraWindupModifier;                             // 0x0E2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeReleaseModifier;                                      // 0x0E30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeMissRecoveryModifier;                                 // 0x0E34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LegDamageBonusModifierAirborne;                            // 0x0E38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsUnflinchable;                                           // 0x0E3C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XDPX[0x3];                                     // 0x0E3D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnflinchableDamageThreshold;                               // 0x0E40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHitStopOnTeamHitsDisabled;                              // 0x0E44(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDodge;                                                 // 0x0E45(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Stamina;                                                   // 0x0E46(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedStamina;                                         // 0x0E47(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      StaminaRegenPerTick;                                       // 0x0E48(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IQTO[0x3];                                     // 0x0E49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaminaRegenDelay;                                         // 0x0E4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                StaminaOnKill;                                             // 0x0E50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                HealthOnKill;                                              // 0x0E54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRegenTickRate;                                      // 0x0E58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpStaminaCost;                                           // 0x0E5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastEnemyKilledTimeWithMeleeOrRanged;                      // 0x0E60(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackParry;                                            // 0x0E64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackWorld;                                            // 0x0E68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackClash;                                            // 0x0E6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NOVF[0x4];                                     // 0x0E70(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EasyParryUntilTime;                                        // 0x0E74(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallingTime;                                               // 0x0E78(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallingTimeToRagdoll;                                      // 0x0E7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastDodgeTime;                                             // 0x0E80(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeDuration;                                             // 0x0E84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DodgeCooldown;                                             // 0x0E88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DodgeStaminaCost;                                          // 0x0E8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasDodgeCanceled;                                         // 0x0E90(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DNSY[0x3];                                     // 0x0E91(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     DodgeDirection;                                            // 0x0E94(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     DodgeDirectionLocal;                                       // 0x0EA0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotalChaseTime;                                            // 0x0EAC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastChaseTime;                                             // 0x0EB0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotalChasedTime;                                           // 0x0EB4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastChasedTime;                                            // 0x0EB8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VUO1[0x4];                                     // 0x0EBC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               SkinnyPose;                                                // 0x0EC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FatPose;                                                   // 0x0EC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               StrongPose;                                                // 0x0ED0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoresTeamColors;                                        // 0x0ED8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasHitAfterDeath;                                         // 0x0ED9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K0VV[0x2];                                     // 0x0EDA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       CurrentlyTracking;                                         // 0x0EDC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastTrackingUpdate;                                        // 0x0EE4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFirstPerson;                                            // 0x0EE8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CameraStyle;                                               // 0x0EE9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ODF7[0x2];                                     // 0x0EEA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentSpeedFOVOffset;                                     // 0x0EEC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSprintFOVOffset;                                        // 0x0EF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSprintFOVOffsetInterpSpeed;                             // 0x0EF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraLocation1P;                                          // 0x0EF8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraLocation1PCosmeticOffset;                            // 0x0F04(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    CameraRotation1P;                                          // 0x0F10(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    CameraRotation1PMeshSpace;                                 // 0x0F1C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       InteractionTarget;                                         // 0x0F28(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseHoldTime;                                               // 0x0F30(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EllipseBubbleLength;                                       // 0x0F34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EllipseBubbleRadius;                                       // 0x0F38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EllipseBubbleMaxHeightDiff;                                // 0x0F3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   BlockColliderForwardParryDistance;                         // 0x0F40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               BlockCollider;                                             // 0x0F48(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  LowBlockColliderRelativeOffset;                            // 0x0F50(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  HighBlockColliderRelativeOffset;                           // 0x0F80(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  OriginalBlockColliderRelativeOffset;                       // 0x0FB0(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T5DF[0x10];                                    // 0x0FE0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastRequestedFireOrigin;                                   // 0x0FF0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LastRequestedFireRotation;                                 // 0x0FFC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bWantsFire;                                                // 0x1008(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsBlock;                                               // 0x1009(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsFeintOrBlock;                                        // 0x100A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UYZ5[0x5];                                     // 0x100B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UParticleSystem*>                     SprintFootstepParticles;                                   // 0x1010(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BloodHitEffect;                                            // 0x1020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BloodMetalHitEffect;                                       // 0x1028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BleedingOutParticleEffect;                                 // 0x1030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DodgeParticleEffect;                                       // 0x1038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DodgeCameraShake;                                          // 0x1040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FallDamageCameraShake;                                     // 0x1048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RunLeftHeadBobShake;                                       // 0x1050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RunRightHeadBobShake;                                      // 0x1058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WalkLeftHeadBobShake;                                      // 0x1060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WalkRightHeadBobShake;                                     // 0x1068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BlockShakeEffect;                                          // 0x1070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BlockedShakeEffect;                                        // 0x1078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FlinchShakeEffect;                                         // 0x1080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNetBlock                                   NetBlock;                                                  // 0x1088(0x0010) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FC1N[0x8];                                     // 0x1098(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMordhauVehicleComponent*                    CurrentVehicle;                                            // 0x10A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      DeathSyncedRandom;                                         // 0x10A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNetMotion                                  ReplicatedNetMotion;                                       // 0x10A9(0x0006) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E5TS[0x1];                                     // 0x10AF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              Motions;                                                   // 0x10B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              EmoteMotions;                                              // 0x10C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEmoteEntry>                         CharacterEmotes;                                           // 0x10D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEmoteEntry>                         UnarmedEmotes;                                             // 0x10E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsCharacterRebuild;                                    // 0x10F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XJGT[0x7];                                     // 0x10F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMordhauWearable*>                    WearableObjectInstances;                                   // 0x10F8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterProfile                           Profile;                                                   // 0x1108(0x00B8) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bDestroyEquipmentOnDeath;                                  // 0x11C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      EquipmentInventorySize;                                    // 0x11C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ATY3[0x6];                                     // 0x11C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AMordhauEquipment*>                   Equipment;                                                 // 0x11C8(0x0010) (BlueprintVisible, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMordhauEquipment*                           RightHandEquipment;                                        // 0x11D8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMordhauEquipment*                           LeftHandEquipment;                                         // 0x11E0(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Quiver;                                                    // 0x11E8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKickWeapon*                                 KickWeapon;                                                // 0x11F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanJumpKick;                                              // 0x11F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JOKX[0x3];                                     // 0x11F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FallingTimeToScream;                                       // 0x11FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   DodgeSound;                                                // 0x1200(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   DodgeSoundLocalPlayer;                                     // 0x1208(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SnappyArmorFoley;                                          // 0x1210(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   NonSnappyArmorFoley;                                       // 0x1218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   CrouchStartSound;                                          // 0x1220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   CrouchEndSound;                                            // 0x1228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ReleaseFoley;                                              // 0x1230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastArmorFoley;                                            // 0x1238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreBeginPlay;                                            // 0x1240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnVehicleChanged;                                          // 0x1250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCameraStyleChanged;                                      // 0x1260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GLVO[0x8];                                     // 0x1270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterBuilt;                                          // 0x1278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QNT6[0x8];                                     // 0x1288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCharacter");
		return ptr;
	}



	bool ValidateInteractionTarget(class AActor* TargetActor);
	void UseReleased();
	void UsePressed();
	void UpdateWearableInstanceColorsAndPatterns();
	void UpdateLOD(float DeltaTime);
	void UpdateFPCamera(float DeltaSeconds, float InLookUpValue, bool bOnlyUpdateRotation, const struct FRotator& Offset);
	void UpdateAllSkeletalMeshComponentMaterials();
	bool TryDismember(const struct FName& bone, const struct FVector& Point, class AMordhauWeapon* Weapon, Mordhau_EAttackMove Move, bool bIsRagdollDismember);
	bool TryClimbing();
	void ToggleWeaponModeReleased();
	void ToggleWeaponModePressed();
	void SwitchToFists();
	void SwitchModeAndReAttach(class AMordhauEquipment* ToSwitch);
	void SwitchEquipmentByIndex(unsigned char Index);
	void SwitchEquipment(class AMordhauEquipment* ToSwitch);
	void StopSupersprint();
	void StopStaminaRegen(float ExtraTime);
	void StopSprinting();
	void StopScreaming();
	void StopListenForStrike360();
	void StopListenForStab360();
	void StopCurrentVoiceCommand();
	void StopCrouching();
	void StopAttackYell();
	void StartSupersprint();
	void StartSprinting();
	void StartScreaming();
	void StartCrouching();
	void SprintReleased();
	void SprintPressed();
	void SprintingMoveBlockedBy(class AActor* BlockedBy);
	void ShowEquipmentIfViewTarget();
	void SetQuiver(class UClass* NewQuiver);
	void SetFaceCustomizationTranslate(const struct FName& BoneName, const struct FVector& Vector);
	void SetFaceCustomizationScale(const struct FName& BoneName, const struct FVector& Vector);
	void SetFaceCustomizationRotate(const struct FName& BoneName, const struct FVector& Vector);
	void SetCustomizationReplicationActor(class ACustomizationReplicationActor* CRA);
	void SetCurrentlyTracking(class AActor* NewTrackingTarget);
	void SetCameraStyle(unsigned char NewStyle, bool bBlendCamera);
	void ServerSuggestHitDetection(class AAdvancedCharacter* OtherCharacter, const struct FVector_NetQuantize& HitLocation, unsigned char BoneId);
	void ServerSetInteractionTarget(class AActor* Target);
	void ServerRequestVoiceCommand(unsigned char VoiceRequest);
	void ServerRequestPassiveInteraction(class AActor* Target);
	void ServerRequestDodge(unsigned char PackedWorldYaw);
	void ServerQueueAttack(Mordhau_EAttackMove Move, unsigned char Angle, unsigned char MotionID);
	void ServerFinishInteraction(unsigned char Result);
	void ServerDropParry(unsigned char MotionID);
	void ServerAssignNetMotion(const struct FNetMotion& NewNetMotion, unsigned char LastAuthObserved);
	void ServerAssignFireAim(const struct FVector& Orig, const struct FRotator& Rot);
	bool RestockEquipmentFromAmmoBox();
	TArray<class AMordhauEquipment*> RestockDefaultEquipment(int MaxSlotsToRestock);
	void RequestVoiceCommand(unsigned char CommandType, bool bAllowQueue);
	void RequestUse();
	void RequestToggleWeaponMode();
	void RequestStrike360();
	void RequestStab360();
	void RequestRightUpperStrike();
	void RequestRightStrike();
	void RequestRightStab();
	void RequestRightLowerStrike();
	void RequestRangedCancel();
	bool RequestParry(Mordhau_EBlockType BlockType, bool bAllowFTP);
	void RequestLeftUpperStrike();
	void RequestLeftStrike();
	void RequestLeftStab();
	void RequestLeftLowerStrike();
	void RequestKick();
	void RequestJump();
	void RequestHolster(unsigned char Mode);
	void RequestFire();
	void RequestFeint();
	void RequestEmote(unsigned char EmoteId);
	void RequestDrop();
	void RequestCouchedAttack();
	void RequestClimb(const struct FVector& TargetLocation, bool bIsSlowClimb);
	void RequestBash();
	void RequestAttack(Mordhau_EAttackMove Move, float Angle);
	bool QueueDismember(const struct FName& bone, bool bIsDismemberPartial, bool bIsBluntForce, const struct FVector& Force, class AActor* Agent);
	void PreviousShieldEquipment();
	void PreviousEquipmentReleased();
	void PreviousEquipmentPressed();
	void PreviousEquipment();
	class UAudioComponent* PlaySnappyArmorFoley();
	class UAudioComponent* PlayNonSnappyArmorFoley();
	class UAudioComponent* PlayMouthSound(class USoundBase* Sound, float VolumeMultiplier);
	void PlayHurtYell();
	void PlayDeathYell(bool bIsLongYell);
	void PlayAttackYell();
	bool PickUpToSlot(class AMordhauEquipment* ToEquip, unsigned char Slot);
	bool PickUp(class AMordhauEquipment* ToEquip, int PreferredSlot);
	bool PerformVoiceCommand(unsigned char PackedVoiceCommand);
	void OnRep_RightHandEquipment();
	void OnRep_ReplicatedVoiceCommand();
	void OnRep_ReplicatedStamina();
	void OnRep_ReplicatedNetMotion();
	void OnRep_ReplicatedKnockback();
	void OnRep_ReplicatedDodge();
	void OnRep_ReplicatedCustomizationReplicationActor();
	void OnRep_Quiver();
	void OnRep_NetBlock();
	void OnRep_LeftHandEquipment();
	void OnRep_Equipment();
	void OnPostProfileAssigned();
	void OnPostDismember(const struct FName& bone, class ASeparatedBodyPart* SeparatedPart, class AActor* Agent);
	void OnPickedUp(class AMordhauEquipment* Eq);
	void OnDropped(class AMordhauEquipment* Eq);
	void OnBlockedMelee(const struct FHitResult& HitResult, class AMordhauCharacter* Attacker);
	void OnAttackStarted();
	void OnActionFailed(const struct FName& Reason);
	void OffsetStamina(int Amount, bool bReplicate);
	void NextShieldEquipment();
	void NextEquipmentReleased();
	void NextEquipmentPressed();
	void NextEquipment();
	void MoveBlockedBySlow(const struct FHitResult& Impact);
	bool ModifyParryResult(bool InResult, const struct FHitResult& HitResult, class AMordhauCharacter* Attacker);
	void ListenForStrike360();
	void ListenForStab360();
	void LeftTeamArea(int OwningTeam);
	void JumpReleased();
	void JumpPressed();
	bool STATIC_IsRightLeg(const struct FName& bone);
	bool STATIC_IsRightArm(const struct FName& bone);
	bool STATIC_IsLeg(const struct FName& bone);
	bool STATIC_IsLeftLeg(const struct FName& bone);
	bool STATIC_IsLeftArm(const struct FName& bone);
	bool IsInKnockback();
	bool IsInEnemyTeamArea();
	bool IsInAnyTeamArea();
	bool IsHoldingBlock();
	bool STATIC_IsHead(const struct FName& bone);
	bool IsBoneDismembered(const struct FName& bone);
	bool STATIC_IsBody(const struct FName& bone);
	bool STATIC_IsArm(const struct FName& bone);
	void Holster(class AMordhauEquipment* ToHolster);
	bool HasPerk(unsigned char PerkId);
	bool HasEquipmentHeSpawnedWith();
	Mordhau_EMovementRestriction GetMovementRestriction();
	class UAudioComponent* GetLastVoiceCommand();
	float GetLastVehicleTime();
	class UMordhauVehicleComponent* GetLastUsedVehicle(float MaximumTimeDiscrepancy);
	class AActor* GetLastMovementFrontalHitActor(float MaxAgeSeconds);
	struct FVector GetFaceCustomizationTranslate(const struct FName& BoneName);
	struct FTransform GetFaceCustomizationTransform(const struct FName& BoneName);
	struct FVector GetFaceCustomizationScale(const struct FName& BoneName);
	struct FVector GetFaceCustomizationRotate(const struct FName& BoneName);
	int GetFaceCustomizationBoneIdx(const struct FName& BoneName);
	bool GetEquipmentIndex(class AMordhauEquipment* Equip, unsigned char* OutIndex);
	class ACustomizationReplicationActor* GetCustomizationReplicationActor();
	struct FNetMotion GetCurrentNetMotion();
	class ULODSkeletalMeshComponent* GetClothMesh();
	TArray<struct FName> GetAllFaceSelectionChildBonesRecursive(const struct FName& ParentBone);
	void FreeHandsForEquipment(class AMordhauEquipment* EquipmentInstigator);
	void ForceUpdateMeshVisibility();
	void FlipAttackSideReleased();
	void FlipAttackSidePressed();
	void FireReleased();
	void FirePressed();
	class AMordhauEquipment* FindEquipmentToRestock(TArray<class UClass*> ValidEquipment);
	class AController* FindBestKiller(float CutOffTime);
	void FeintOrBlockReleased();
	void FeintOrBlockPressed();
	void ExplodeLimbs(const struct FVector& Force, class AActor* DamageCauser, class AController* InstigatedByController);
	void EquipSlot9();
	void EquipSlot8();
	void EquipSlot7();
	void EquipSlot6();
	void EquipSlot5();
	void EquipSlot4();
	void EquipSlot3();
	void EquipSlot2();
	void EquipSlot1();
	bool EquipSlot(unsigned char Index, bool bDisplayEquipmentList);
	void EnteredTeamArea(int OwningTeam);
	void EnableBlockCollider();
	void EmptyHands();
	class AMordhauEquipment* DropSlot(unsigned char Index, bool bForce);
	class AMordhauEquipment* DropEquipment(class AMordhauEquipment* ToDrop, bool bForce);
	void DoCameraShakeIfViewTarget(class UClass* Shake, float Scale, TEnumAsByte<Engine_ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot, Mordhau_ECameraShakeType ShakeType);
	class ASeparatedBodyPart* Dismember(struct FDismemberedBoneData* InDismemberedBoneData);
	void DisableLimb(const struct FName& BoneName);
	void DisableBlockCollider();
	void CycleCamera();
	void CrouchReleased();
	void CrouchPressed();
	void ClientSetNetMotion(const struct FNetMotion& NewMotion, float ServerStartTime);
	bool CheckCanEquipAlt(class AMordhauEquipment* Equip);
	bool CheckCanEquip(class AMordhauEquipment* Equip);
	bool CanPerformAttack(Mordhau_EAttackMove Move);
	bool CanInitiateMotion(class UClass* NewMotion, bool bAttemptCancel);
	bool CanEmote();
	bool CanEasyParry();
	bool CanDismember(const struct FName& bone);
	bool CanAccomodate(class UClass* EquipmentToTest);
	void CalculateLedgeOffsetAndNormal(class UClimbingMotion* ClimbingMotion, struct FVector* OutOffset, struct FVector* OutNormal);
	void BlockReleased();
	void BlockPressed();
	void BakeFaceCustomizationTransforms(bool bDeferBake);
	void AssignProfile(const struct FCharacterProfile& NewProfile);
	void AssignNetMotionSimple(unsigned char MotionType, unsigned char Param0, unsigned char Param1, unsigned char Param2);
	void AssignNetBlock(const struct FBlockResult& BlockResult, Mordhau_EAttackMove BlockedMove, class AActor* Weapon);
	void STATIC_AppendRightLegSet();
	void STATIC_AppendRightArmSet();
	void STATIC_AppendLeftLegSet();
	void STATIC_AppendLeftArmSet();
	void STATIC_AppendHeadSet();
	void STATIC_AppendBodySet();
};

// Class Mordhau.MordhauCharacterTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMordhauCharacterTypes : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCharacterTypes");
		return ptr;
	}



};

// Class Mordhau.MordhauCheatManager
// 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
class UMordhauCheatManager : public UCheatManager
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCheatManager");
		return ptr;
	}



};

// Class Mordhau.MordhauColor
// 0x0020 (FullSize[0x0078] - InheritedSize[0x0058])
class UMordhauColor : public UMordhauInventoryItem
{
public:
	struct FLinearColor                                Color;                                                     // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DisplayColor;                                              // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauColor");
		return ptr;
	}



};

// Class Mordhau.MordhauCompoundVehicle
// 0x0008 (FullSize[0x0B70] - InheritedSize[0x0B68])
class AMordhauCompoundVehicle : public AMordhauVehicle
{
public:
	unsigned char                                      UnknownData_EPP1[0x8];                                     // 0x0B68(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCompoundVehicle");
		return ptr;
	}



};

// Class Mordhau.MordhauCrowdFollowingComponent
// 0x0010 (FullSize[0x02A8] - InheritedSize[0x0298])
class UMordhauCrowdFollowingComponent : public UCrowdFollowingComponent
{
public:
	float                                              PheromoneDepositAmount;                                    // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PheromoneDepositInterval;                                  // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MW9F[0x8];                                     // 0x02A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCrowdFollowingComponent");
		return ptr;
	}



};

// Class Mordhau.MordhauCustomizationTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMordhauCustomizationTypes : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauCustomizationTypes");
		return ptr;
	}



};

// Class Mordhau.MordhauDialog
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UMordhauDialog : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauDialog");
		return ptr;
	}



	void Show();
	void Hide();
};

// Class Mordhau.MordhauEngineMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMordhauEngineMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauEngineMessage");
		return ptr;
	}



};

// Class Mordhau.MordhauEQSTestingPawn
// 0x0010 (FullSize[0x0560] - InheritedSize[0x0550])
class AMordhauEQSTestingPawn : public AEQSTestingPawn
{
public:
	unsigned char                                      Team;                                                      // 0x0550(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DYOQ[0xF];                                     // 0x0551(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauEQSTestingPawn");
		return ptr;
	}



};

// Class Mordhau.MordhauEquipmentPart
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UMordhauEquipmentPart : public UMordhauInventoryItem
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               AuxiliarySkeletalMesh;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               SkinOverrideShadowPhysicsAsset;                            // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailFactor;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondTrailFactor;                                         // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor1;                                                // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor2;                                                // 0x0079(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasColor3;                                                // 0x007A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0634[0x5];                                     // 0x007B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauEquipmentPart");
		return ptr;
	}



};

// Class Mordhau.MordhauGameInstance
// 0x09E8 (FullSize[0x0B80] - InheritedSize[0x0198])
class UMordhauGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData_SQBA[0x5D0];                                   // 0x0198(0x05D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FServerSearchResult                         ServerSession;                                             // 0x0768(0x0110) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FBasicServerInfo                            ServerInfo;                                                // 0x0878(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FPlayFabServerDetails                       ServerDetails;                                             // 0x0890(0x0028) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FString                                     ServerPassword;                                            // 0x08B8(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bServerFull;                                               // 0x08C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y3L5[0x3];                                     // 0x08C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ChangeLevelCounter;                                        // 0x08CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       NetworkErrorText;                                          // 0x08D0(0x0018) (BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_97ZX[0xA0];                                    // 0x08E8(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, class UClass*>                GameModeMetadata;                                          // 0x0988(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FString, class UClass*>                MapMetadata;                                               // 0x09D8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FText>                               Tips;                                                      // 0x0A28(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyUpdated;                                            // 0x0A38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	MordhauOnlineSubsystem_EServerRegion               CurrentMatchmakingRegion;                                  // 0x0A48(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QMEN[0x7];                                     // 0x0A49(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             CurrentMatchmakingGameModes;                               // 0x0A50(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchmakingRegionsDetermined;                            // 0x0A60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_888Z[0xD0];                                    // 0x0A70(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     StartupMap;                                                // 0x0B40(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<MordhauOnlineSubsystem_EServerRegion>       CasualMatchmakingRegions;                                  // 0x0B50(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<MordhauOnlineSubsystem_EServerRegion>       RankedMatchmakingRegions;                                  // 0x0B60(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerInformationReceived;                               // 0x0B70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauGameInstance");
		return ptr;
	}



	void UpdateParty(bool bUpdateProfile);
	void UnregisterMetadata(int ModId);
	void StopLoadingScreen();
	void Shutdown();
	void ShowPasswordDialog(const struct FServerSearchResult& SearchResult);
	void ShowNetworkErrorDialog();
	void ShowJoiningDialog(const struct FServerSearchResult& SearchResult);
	void ShowInviteDialog();
	void SetPartyServerDetails(const struct FPlayFabServerDetails& InServerDetails);
	void SetPartyMemberServerDetails(const struct FPlayFabServerDetails& InServerDetails);
	void SetPartyMemberProfile(const struct FPlayFabPlayer& Player, const struct FPlayerProfile& Profile);
	void SetPartyMatchmakingState(Mordhau_EMatchmakingState MatchmakingState);
	void SetPartyMatchmakingMembers(TArray<struct FString> Members);
	void SetPartyMatch(const struct FString& QueueName, const struct FString& MatchId);
	void SetPartyLeader(const struct FPlayFabPlayer& Player);
	void SetPartyGameServer(const struct FServerSearchResult& SearchResult);
	void SetNetworkError(const struct FText& ErrorText);
	void SetMatchmakingMatchID(const struct FString& MatchId);
	void SetLastPlayerLeaveTime(double InLastPlayerLeaveTime);
	void SetIngameEvent(MordhauOnlineSubsystem_EIngameEvent InIngameEvent);
	bool ServerTravel(class UObject* WorldContextObject, const struct FString& MapName);
	void SaveConfig();
	void RespondControllerConnectionChange(bool Status, int UserId, int ControllerId);
	void RequestPlayerInformation(const struct FPlayFabPlayer& Player);
	void RemovePartyMatchmakingTicket(const struct FString& QueueName);
	void RegisterMetadata(int ModId, TArray<struct FString> AssetPaths);
	void PerformPlatformLogin();
	void OnStatsBecameAvailable();
	void OnInventoryBecameAvailable();
	void OnFindMordhauServerSessionByAddressSuccess(const struct FServerSearchResult& SearchResult);
	void LogMatchmakingState(const struct FString& Message);
	void LeaveParty();
	void KickPartyMember(const struct FPlayFabPlayer& Player);
	void JoinSessionSearchResult(const struct FServerSearchResult& SearchResult);
	void JoinPartyGameServer();
	bool IsPartyReadyForMatchmaking();
	bool IsPartyMember(const struct FPlayFabPlayer& Player);
	bool IsPartyLeader();
	bool IsOfficialServerMuted();
	bool IsOfficialServerBanned();
	bool IsLoggingIn();
	bool IsLoggedIn();
	bool IsLoadingScreenActive();
	bool IsInventoryAvailable();
	bool IsGlobalServerMuted();
	bool IsGlobalServerBanned();
	void Init();
	bool HasCompletedLogin();
	TMap<MordhauOnlineSubsystem_EServerLocation, int> GetServerRegionPings(MordhauOnlineSubsystem_EServerRegion Region);
	TArray<MordhauOnlineSubsystem_EServerLocation> GetServerLocationPreference(MordhauOnlineSubsystem_EServerRegion Region);
	TMap<MordhauOnlineSubsystem_EServerLocation, int> GetServerLocationPings();
	int GetServerLocationPing(MordhauOnlineSubsystem_EServerLocation Location);
	TArray<struct FString> GetProfaneWords();
	MordhauOnlineSubsystem_EPlatform GetPlatform();
	int GetPartySize();
	void GetPartyServerDetails(struct FPlayFabServerDetails* OutServerDetails, bool* bWasSuccessful);
	int GetPartyMMR(const struct FString& GameMode);
	struct FString GetPartyMemberStatus(const struct FPlayFabPlayer& Player);
	void GetPartyMemberServerDetails(const struct FPlayFabPlayer& Player, struct FPlayFabServerDetails* OutServerDetails, bool* bWasSuccessful);
	void GetPartyMemberServerAddress(const struct FPlayFabPlayer& Player, struct FServerAddress* Address, bool* bWasSuccessful);
	TArray<struct FPlayFabPlayer> GetPartyMembers();
	bool GetPartyMemberProfile(const struct FPlayFabPlayer& Player, struct FPlayerProfile* Profile);
	TArray<struct FPlayFabPlayerEntity> GetPartyMemberEntities();
	TArray<struct FMatchmakingTicket> GetPartyMatchmakingTickets();
	Mordhau_EMatchmakingState GetPartyMatchmakingState();
	TArray<struct FString> GetPartyMatchmakingMembers();
	void GetPartyMatch(struct FString* QueueName, struct FString* MatchId);
	struct FPlayFabPlayer GetPartyLeader();
	struct FString GetPartyID();
	struct FString GetPartyGroupID();
	TArray<struct FString> GetOtherPartyMembersEntityIDs();
	int GetOfficialServerMuteDuration();
	int GetOfficialServerBanDuration();
	int GetNumReservedSlots();
	int GetNextMatchID();
	struct FString GetMatchmakingMatchID();
	struct FString GetMatchmakingGroupID();
	struct FMapInfo GetMapInfo(const struct FString& MapName);
	double GetLastPlayerLeaveTime();
	MordhauOnlineSubsystem_EIngameEvent GetIngameEvent();
	int GetGlobalServerMuteDuration();
	int GetGlobalServerBanDuration();
	TArray<struct FString> GetBlacklistedServers();
	class UMapMetadata* FindMapMetadata(const struct FString& GameModeMapName);
	class UGameModeMetadata* FindGameModeMetadata(const struct FString& GameModePrefix);
	MordhauOnlineSubsystem_EServerRegion FindBestServerRegion();
	MordhauOnlineSubsystem_EServerLocation FindBestServerLocation();
	void DetermineServerLocationPings();
	bool ClientTravelSession(const struct FServerSearchResult& SearchResult, const struct FString& Password);
	bool ClientTravelServerDetails(const struct FPlayFabServerDetails& InServerDetails, const struct FString& Password);
	bool ClientTravel(const struct FString& MapName, int PlayerCount);
	void ClearPartyServerDetails();
	void ClearPartyMemberServerDetails();
	void ClearPartyMemberProfile(const struct FPlayFabPlayer& Player);
	void ClearPartyMatchmakingTickets();
	void ClearPartyMatchmakingMembers();
	void ClearPartyMatch();
	void ClearPartyGameServer();
	bool CanLeaveParty();
	bool CanInviteToParty();
	void BPStopRecordingReplay();
	void BPStopPlayingReplay();
	void BPStartRecordingReplay(const struct FString& InName, const struct FString& FriendlyName, TArray<struct FString> AdditionalOptions);
	void BPPlayReplay(const struct FString& InName, TArray<struct FString> AdditionalOptions);
	bool AreStatsAvailable();
	void AddPartyMatchmakingTicket(const struct FString& QueueName, const struct FString& TicketId);
};

// Class Mordhau.MordhauGameMode
// 0x0298 (FullSize[0x05A0] - InheritedSize[0x0308])
class AMordhauGameMode : public AGameMode
{
public:
	TArray<struct FGameModeName>                       MapPrefixes;                                               // 0x0308(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             MapRotation;                                               // 0x0318(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FString>               MapGameModeOverrides;                                      // 0x0328(0x0050) (Edit, BlueprintVisible, Config, GlobalConfig, NativeAccessSpecifierPublic)
	struct FString                                     MOTDURL;                                                   // 0x0378(0x0010) (BlueprintVisible, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsThirdPersonCameraDisabled;                              // 0x0388(0x0001) (BlueprintVisible, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7YA9[0x3];                                     // 0x0389(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ConstrainAspectRatio;                                      // 0x038C(0x0004) (BlueprintVisible, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHitStopOnTeamHitsDisabled;                              // 0x0390(0x0001) (BlueprintVisible, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableClientMods;                                        // 0x0391(0x0001) (BlueprintVisible, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X5CH[0x6];                                     // 0x0392(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             SpawnServerActorsOnMapLoad;                                // 0x0398(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLogKillfeed;                                              // 0x03A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLogChat;                                                  // 0x03A9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLogScore;                                                 // 0x03AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowSpawningServerActorsOnMapLoad;                       // 0x03AB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowAdminChat;                                           // 0x03AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowWhisperChat;                                         // 0x03AD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CWHF[0x2];                                     // 0x03AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AController>>          SpawnQueue;                                                // 0x03B0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  CurrentlySpawningController;                               // 0x03C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      CurrentlySpawningPlayerStart;                              // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentlySpawningStage;                                    // 0x03D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMatchTimeRanOut;                                          // 0x03D4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LFKW[0x3];                                     // 0x03D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerRespawnTime;                                         // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesSlowPlayerSpawning;                                   // 0x03DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TAJW[0x3];                                     // 0x03DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AutoKickOnTeamKillAmount;                                  // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayersSpawnInWaves;                                      // 0x03E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayersDropAllGearOnDeath;                                // 0x03E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEquipmentDoesNotDespawn;                                  // 0x03E6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z7NK[0x1];                                     // 0x03E7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverrideEquipmentDespawnTime;                              // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BallistaRespawnTime;                                       // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CatapultRespawnTime;                                       // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorseRespawnTime;                                          // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             MapVoteMaps;                                               // 0x03F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EOfficialServerVisibility                  OfficialServerVisibility;                                  // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4PNO[0x3];                                     // 0x0409(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageFactor;                                              // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamDamageFactor;                                          // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamDamageFlinch;                                          // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnProtectionDuration;                                   // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableDamage;                                            // 0x041C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableStamina;                                           // 0x041D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsScoringDisabled;                                        // 0x041E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BJUC[0x1];                                     // 0x041F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AssistScoreFactor;                                         // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AssistDamageToCountAsKill;                                 // 0x0424(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R3S4[0x3];                                     // 0x0425(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KillScoreChange;                                           // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KillTeamScoreChange;                                       // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamKillScoreChange;                                       // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamKillTeamScoreChange;                                   // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeamKillsDecrementKillerKills;                            // 0x0438(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeamKillsIncrementKilledDeaths;                           // 0x0439(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSuicideDecrementsKills;                                   // 0x043A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T44N[0x5];                                     // 0x043B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             ChatMessages;                                              // 0x0440(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FString>               MessageTypeMap;                                            // 0x0450(0x0050) (BlueprintVisible, Config, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FPlayerChatMessagesContainer> PlayerMessagesMap;                                         // 0x04A0(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRconStringCommand;                                       // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FRconEventStruct>                    RconEvents;                                                // 0x0500(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMessageBroadcasted;                                      // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAfterLogin;                                              // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeforeLogout;                                            // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FChatCommandStruct>                  ChatCommands;                                              // 0x0540(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSBB[0x50];                                    // 0x0550(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauGameMode");
		return ptr;
	}



	bool VoteLevel(class APlayerController* Player, const struct FString& LevelName);
	void SetTeamScore(int Team, float Amount);
	bool SetRconEvent(struct FRconEventStruct* InStruct, const struct FScriptDelegate& InEvent, bool bOverrideExisting);
	void RequestedAssignTeam(class AController* Controller, int Team);
	void RemoveBots(int Amount, int Team);
	void OnTeamScoreChanged(int Team, float OldValue);
	void OnScoreChanged(class APlayerState* State, float OldValue);
	void OnMatchStateChanged(const struct FName& OldState, const struct FName& NewState);
	void OnKillsChanged(class APlayerState* State, int OldValue);
	void OnKilled(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, Mordhau_EMordhauDamageType Type, unsigned char SubType, class AActor* DamageSource, class AActor* DamageAgent);
	void OnDeathsChanged(class APlayerState* State, int OldValue);
	void OnAssistsChanged(class APlayerState* State, int OldValue);
	void MatchTimeRanOut();
	bool IsSpawnpointAllowed(class APlayerStart* PlayerStart, class AController* Player);
	float GetSpawnpointPreference(class APlayerStart* PlayerStart, class AController* Player);
	TArray<struct FString> GetNextMaps(int Count);
	struct FString GetNextMap();
	TArray<struct FString> GetMapVoteMaps();
	TArray<unsigned char> GetMapVoteCounts();
	float GetDamageFactor(class AActor* DamageSource, class AActor* DamageTarget);
	bool ControllerCanRestart(class AController* Controller);
	bool ChangeLevel(const struct FString& LevelName);
	bool CanDealDamage(class AActor* DamageSource, class AActor* DamageTarget);
	bool CanClash(class APawn* Source, class APawn* Target);
	bool CanChamber(class APawn* Source, class APawn* Target);
	void Broadcast(class AActor* Sender, const struct FString& Msg, const struct FName& Type);
	void AddTeamScore(int Team, float Amount);
	void AddBots(int Amount, int Team);
};

// Class Mordhau.MordhauGameSession
// 0x08C8 (FullSize[0x0B00] - InheritedSize[0x0238])
class AMordhauGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData_ABZG[0x32C];                                   // 0x0238(0x032C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxSlots;                                                  // 0x0564(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ServerName;                                                // 0x0568(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6FEW[0x8];                                     // 0x0578(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerPassword;                                            // 0x0580(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        Mods;                                                      // 0x0590(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AdminPassword;                                             // 0x05A0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     RconPassword;                                              // 0x05B0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RconTimeout;                                               // 0x05C0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RconPort;                                                  // 0x05C4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRconTieredAdmins;                                         // 0x05C8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowHttpRequests;                                        // 0x05C9(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6VJ4[0x2];                                     // 0x05CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxNetSkip;                                                // 0x05CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FriendlyNetSkipOffset;                                     // 0x05D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CTFD[0x4];                                     // 0x05D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             Admins;                                                    // 0x05D8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, int64_t>                      BannedPlayers;                                             // 0x05E8(0x0050) (Config, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1GOA[0xA0];                                    // 0x0638(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, int64_t>                      MutedPlayers;                                              // 0x06D8(0x0050) (Config, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GGUA[0xA0];                                    // 0x0728(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<uint64_t>                                   LegacyAdmins;                                              // 0x07C8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<uint64_t, int64_t>                            LegacyBannedPlayers;                                       // 0x07D8(0x0050) (Config, NativeAccessSpecifierPublic)
	TMap<uint64_t, int64_t>                            LegacyMutedPlayers;                                        // 0x0828(0x0050) (Config, NativeAccessSpecifierPublic)
	bool                                               bAdvertiseServerViaSteam;                                  // 0x0878(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseLegacyPakMounting;                                     // 0x0879(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseOfficialBanList;                                       // 0x087A(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseOfficialMuteList;                                      // 0x087B(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O0IK[0x4];                                     // 0x087C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRequestBan;                                              // 0x0880(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestUnban;                                            // 0x0890(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestMute;                                             // 0x08A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestUnmute;                                           // 0x08B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestKick;                                             // 0x08C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchStateChanged;                                       // 0x08D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bAllowJsonForRconClients;                                  // 0x08E0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O0QX[0x3];                                     // 0x08E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxRconPacketSize;                                         // 0x08E4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAdminTierSystem;                                       // 0x08E8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K72I[0x7];                                     // 0x08E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     AdminActionWebhookURL;                                     // 0x08F0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AdminActionChatColor;                                      // 0x0900(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AdminPunishmentWebhookURL;                                 // 0x0910(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AdminPunishmentColor;                                      // 0x0920(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AdminChatCommandWebhookURL;                                // 0x0930(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AdminChatCommandColor;                                     // 0x0940(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ServerLagReportsWebhookURL;                                // 0x0950(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ServerLagReportColor;                                      // 0x0960(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ServerLagReportColor2;                                     // 0x0970(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ChatFeedWebhookURL;                                        // 0x0980(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ChatFeedColor;                                             // 0x0990(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URconCommand*>                        RconCommands;                                              // 0x09A0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FRconFlag>             RconFlags;                                                 // 0x09B0(0x0050) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8XTU[0x100];                                   // 0x0A00(0x0100) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauGameSession");
		return ptr;
	}



	void UploadAdminActionDataToWebhook(const struct FString& Command, const struct FPlayFabPlayer& Sender, const struct FString& Details);
	bool UnmutePlayer(const struct FString& PlayFabId, bool bExpired);
	bool UnbanPlayer(const struct FString& PlayFabId, bool bExpired);
	void TriggerRewardDropForPlayer(class APlayerController* Player);
	void TriggerRewardDrop();
	void ReportTimeLeft(TArray<float> TimeLeft);
	bool ReportPlayer(const struct FString& ReporteePlayFabID, const struct FString& ReporterPlayFabID, const struct FString& ReportType, const struct FString& ScreenshotFilename);
	void RemoveAdmin(class APlayerController* AdminPlayer);
	bool MutePlayerWithDuration(class APlayerController* MutedPlayer, int MuteDuration);
	bool MutePlayer(class APlayerController* MutedPlayer);
	bool KickPlayer(class APlayerController* KickedPlayer, const struct FText& KickReason);
	bool IsPlayerMuted(const struct FString& PlayFabId);
	bool IsPlayerBanned(const struct FString& PlayFabId);
	int GetPlayerMuteDuration(const struct FString& PlayFabId);
	int GetPlayerBanDuration(const struct FString& PlayFabId);
	bool BanPlayerWithDuration(class APlayerController* BannedPlayer, int BanDuration, const struct FText& BanReason);
	bool BanPlayer(class APlayerController* BannedPlayer, const struct FText& BanReason);
	bool AllowsJoin();
	void AllowJoin(bool bInAllowJoin);
	void AddTieredAdmin(class APlayerController* AdminPlayer, const struct FString& Tier);
	void AddAdmin(class APlayerController* AdminPlayer);
};

// Class Mordhau.MordhauGameState
// 0x0500 (FullSize[0x0790] - InheritedSize[0x0290])
class AMordhauGameState : public AGameState
{
public:
	struct FGameStateLastDemotableTickFunction         LastDemotableTickFunction;                                 // 0x0290(0x0030) (NativeAccessSpecifierPrivate)
	struct FGameStatePostPhysicsTickFunction           PostPhysicsTickFunction;                                   // 0x02C0(0x0030) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U8U6[0x80];                                    // 0x02F0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AAdvancedCharacter>>   CharacterTemporaryArrayCached;                             // 0x0370(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      NextBudgetTime;                                            // 0x0380(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QL83[0x8];                                     // 0x0390(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AParticleSystemActor*>                ParticleSystemActors;                                      // 0x0398(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6K0I[0x8];                                     // 0x03A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AAdvancedCharacter*>                  CharacterDistanceArray;                                    // 0x03B0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AAdvancedCharacter*, int>               CharacterToDistanceArray;                                  // 0x03C0(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      CharacterPendingForDistanceArray[0x50];                    // 0x0410(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<TWeakObjectPtr<class AAdvancedCharacter>>   RagdollDistanceArray;                                      // 0x0460(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int64_t, class USkeletalMesh*>                EquipmentMeshCacheMap;                                     // 0x0470(0x0050) (NativeAccessSpecifierPrivate)
	class APreSkinnedPoseOracle*                       PreSkinnedPoseOracle;                                      // 0x04C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                             NextLoginTime;                                             // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                             LoginAttemptInterval;                                      // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                LoginAttempts;                                             // 0x04D8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaxLoginAttempts;                                          // 0x04DC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                             NextTokenRefreshTime;                                      // 0x04E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                             TokenRefreshInterval;                                      // 0x04E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     MatchmakingTicketID;                                       // 0x04F0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     MatchmakingMatchID;                                        // 0x0500(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAreStatsAvailable;                                        // 0x0510(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsInventoryAvailable;                                     // 0x0511(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M671[0x6];                                     // 0x0512(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AAdvancedCharacter*>                  ImmutableLivingCharacterArray;                             // 0x0518(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LBZP[0x8];                                     // 0x0528(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLineTraceMemoryEntry>               AttackTracesMemory;                                        // 0x0530(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MetaData;                                                  // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableClientStats;                                       // 0x0548(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableChat;                                              // 0x0549(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableScoreboard;                                        // 0x054A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowHealthRegen;                                         // 0x054B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotLimitPlaceables;                                     // 0x054C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideArmorSpeedAndAccelerationFactor;                  // 0x054D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K1BA[0x2];                                     // 0x054E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverrideArmorSpeedFactor;                                  // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverrideArmorAccelerationFactor;                           // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllPlayersHaveMarkers;                                    // 0x0558(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A0PG[0x7];                                     // 0x0559(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BannedEquipment[0x50];                                     // 0x0559(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      BannedPerks[0x50];                                         // 0x05B0(0x0050) UNKNOWN PROPERTY: SetProperty
	struct FString                                     MOTDURL;                                                   // 0x0600(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsThirdPersonCameraDisabled;                              // 0x0610(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9BUW[0x3];                                     // 0x0611(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ConstrainAspectRatio;                                      // 0x0614(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableClientMods;                                        // 0x0618(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XJ6I[0x3];                                     // 0x0619(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MatchDurationMax;                                          // 0x061C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ReplicatedMatchDurationMax;                                // 0x0620(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VY8Z[0x4];                                     // 0x0624(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, class AMapCameraActor*>                  MapCameraActors;                                           // 0x0628(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              DefaultEndMatchMapChangeTime;                              // 0x0678(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EndMatchMapChangeEnd;                                      // 0x067C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostMatchScreenDelay;                                      // 0x0680(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultWarmupTime;                                         // 0x0684(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipWarmupInDevBuild;                                     // 0x0688(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlockInputInWarmup;                                       // 0x0689(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96ER[0x2];                                     // 0x068A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MinPlayersToStart;                                         // 0x068C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WarmupEnd;                                                 // 0x0690(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotGoToNextMapOnMatchEnd;                               // 0x0694(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotShowPostMatchScreen;                                 // 0x0695(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowSpawning;                                            // 0x0696(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TeamCount;                                                 // 0x0697(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      TeamScores;                                                // 0x0698(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsTeamMode;                                               // 0x06A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnforceTeamColors;                                        // 0x06A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VA0M[0x6];                                     // 0x06AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLinearColor>                        TeamColors;                                                // 0x06B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             TeamNames;                                                 // 0x06C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                        SecondaryTeamColors;                                       // 0x06D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AControlPoint*>                       AllCapturePoints;                                          // 0x06E0(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team1CapturePoints;                                        // 0x06F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team2CapturePoints;                                        // 0x06F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePushTopologicalProgress;                               // 0x06F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PushTopologicalProgressAttackingTeam;                      // 0x06F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V1TM[0x2];                                     // 0x06FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Team1TopologicalProgress;                                  // 0x06FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Team2TopologicalProgress;                                  // 0x0700(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MSW2[0x4];                                     // 0x0704(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCapturePointGroup>                  CapturePointTopologicalOrdering;                           // 0x0708(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FGroupSoundGroup>        SoundGroups;                                               // 0x0718(0x0050) (Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                              LastBotVoiceCommandTime;                                   // 0x0768(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBotEmoteTime;                                          // 0x076C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBotClimbTime;                                          // 0x0770(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_65GZ[0x4];                                     // 0x0774(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UDecalComponent>>      BloodDecalsArray;                                          // 0x0778(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OPSQ[0x8];                                     // 0x0788(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauGameState");
		return ptr;
	}



	void UpdateSoundGroups();
	void UpdateCapturePointData();
	void UnregisterParticleSystemActor(class AParticleSystemActor* ParticleActor);
	void StoreEquipmentMeshInCache(class USkeletalMesh* Mesh, int ID, unsigned char Skin, unsigned char Part1, unsigned char Part2, unsigned char Part3, bool bUseAuxiliaryMesh);
	bool ShouldTickThisFrame(class AAdvancedCharacter* Character);
	bool ShouldTickAnimationThisFrame(class AAdvancedCharacter* Character);
	bool ShouldPaintGearWithTeamColors();
	bool ShouldBlockPawnInput();
	void ReserveCharacterRagdoll(class AAdvancedCharacter* Character);
	void RemoveCharacterFromDistanceArray(class AAdvancedCharacter* Character);
	void RegisterParticleSystemActor(class AParticleSystemActor* ParticleActor);
	void PostPhysicsTick(float DeltaTime);
	void OnReplicatedMOTD();
	void OnRep_ReplicatedMatchDurationMax();
	void OnRep_MOTDURL();
	void LocalPlayerChangedTeam();
	bool LineTraceCharacters(const struct FVector& LineStart, const struct FVector& LineEnd, TArray<struct FHitResult>* Results);
	void LastDemotableTick(float DeltaTime);
	bool IsFriendly(class AActor* ActorA, class AActor* ActorB, bool bIsFriendlyIfSelf);
	struct FString GetTeamName(int Team);
	struct FLinearColor GetTeamColor(int Team);
	struct FLinearColor GetSecondaryTeamColor(int Team);
	TArray<int> GetPlayerCountsPerTeam(bool bOnlyLiving, bool bOnlyWithValidProfiles);
	class USkeletalMesh* GetEquipmentMeshFromCache(int ID, unsigned char Skin, unsigned char Part1, unsigned char Part2, unsigned char Part3, bool bUseAuxiliaryMesh);
	int64_t GetEquipmentCacheHash(int ID, unsigned char Skin, unsigned char Part1, unsigned char Part2, unsigned char Part3, bool bUseAuxiliaryMesh);
	int GetCurrentFrame();
	class AAdvancedCharacter* GetCharacterByDistanceRank(int DistanceRank);
	struct FTransform GetBindPoseTransform(class USkeletalMesh* Mesh, const struct FName& SocketName);
	class AMapCameraActor* GetAppropriateMapCameraActor(class APlayerController* Controller);
	bool CanPlayerJoinTeam(class AMordhauPlayerState* Player, int Team);
	bool CanImmediatelyChangeProfile(class AController* Controller);
};

// Class Mordhau.MordhauGameUserSettings
// 0x0218 (FullSize[0x0338] - InheritedSize[0x0120])
class UMordhauGameUserSettings : public UGameUserSettings
{
public:
	struct FScriptMulticastDelegate                    OnSettingsChanged;                                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EK8T[0x10];                                    // 0x0130(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             AvailableLanguages;                                        // 0x0140(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32_t                                           MordhauVersion;                                            // 0x0150(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IT2G[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     Language;                                                  // 0x0158(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Gore;                                                      // 0x0168(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ProfanityFilter;                                           // 0x016C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ThirdPersonDeathCamera;                                    // 0x0170(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CharacterCloth;                                            // 0x0174(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FriendlyMarkers;                                           // 0x0178(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                HideDefaultLoadouts;                                       // 0x017C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NoTeamColorsOnGear;                                        // 0x0180(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Headbob;                                                   // 0x0184(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementHeadbob;                                           // 0x0188(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CombatHeadbob;                                             // 0x018C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxRagdolls;                                               // 0x0190(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RagdollStayTime;                                           // 0x0194(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseSmoothing;                                            // 0x0198(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RangedSensitivity;                                         // 0x019C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ForceFeedback;                                             // 0x01A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0OLV[0x3];                                     // 0x01A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DrawTracers;                                               // 0x01A4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DrawTracersStayTime;                                       // 0x01A8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WC3T[0x4];                                     // 0x01AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ShowServerInScoreboard;                                    // 0x01B0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CrosshairType;                                             // 0x01B4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowKilledBy;                                              // 0x01B8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowStatusBar;                                             // 0x01BC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowTargetInfo;                                            // 0x01C0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowSpawnInfo;                                             // 0x01C4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowChatBox;                                               // 0x01C8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowEmotesMenu;                                            // 0x01CC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowEquipment;                                             // 0x01D0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowAmmo;                                                  // 0x01D4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowAnnouncements;                                         // 0x01D8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowTips;                                                  // 0x01DC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowObjectives;                                            // 0x01E0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowHitMarker;                                             // 0x01E4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowScoreFeed;                                             // 0x01E8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowCombatHints;                                           // 0x01EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowKillFeed;                                              // 0x01F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                QuickSpawn;                                                // 0x01F4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowObservedDelay;                                         // 0x01F8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                HideWatermark;                                             // 0x01FC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShowInteractionChecks;                                     // 0x0200(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                EnableHordeSquadSpawning;                                  // 0x0204(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScreenPercentage;                                          // 0x0208(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FieldOfView;                                               // 0x020C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraDistance;                                            // 0x0210(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Gamma;                                                     // 0x0214(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NvidiaReflex;                                              // 0x0218(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AntiAliasing;                                              // 0x021C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                IndirectCapsuleShadows;                                    // 0x0220(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CharacterFidelity;                                         // 0x0224(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RagdollFidelity;                                           // 0x0228(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ScreenSpaceReflections;                                    // 0x022C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Bloom;                                                     // 0x0230(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MotionBlur;                                                // 0x0234(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AmbientOcclusion;                                          // 0x0238(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LensFlares;                                                // 0x023C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MasterVolume;                                              // 0x0240(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EffectsVolume;                                             // 0x0244(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MusicVolume;                                               // 0x0248(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VideoVolume;                                               // 0x024C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VoiceVolume;                                               // 0x0250(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InstrumentsVolume;                                         // 0x0254(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	MordhauOnlineSubsystem_EServerRegion               CasualMatchmakingRegion;                                   // 0x0258(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	MordhauOnlineSubsystem_EServerRegion               RankedMatchmakingRegion;                                   // 0x0259(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6OU7[0x6];                                     // 0x025A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             CasualMatchmakingGameModes;                                // 0x0260(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FString>                             RankedMatchmakingGameModes;                                // 0x0270(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FString, struct FPlayerCountArray>     SelectedGameModePlayerCounts;                              // 0x0280(0x0050) (Config, Protected, NativeAccessSpecifierProtected)
	bool                                               bServerBrowserNotFull;                                     // 0x02D0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bServerBrowserHasPlayers;                                  // 0x02D1(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bServerBrowserNoPassword;                                  // 0x02D2(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ME9F[0x5];                                     // 0x02D3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerBrowserServerName;                                   // 0x02D8(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     ServerBrowserGameMode;                                     // 0x02E8(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ServerBrowserMaxPing;                                      // 0x02F8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8EEM[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerBrowserSortType;                                     // 0x0300(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FString>                             FavoriteServers;                                           // 0x0310(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FString>                             RecentServers;                                             // 0x0320(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ServerTypeFilter;                                          // 0x0330(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ServerPopulationFilter;                                    // 0x0331(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ServerModdedFilter;                                        // 0x0332(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ServerPasswordFilter;                                      // 0x0333(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FDYJ[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauGameUserSettings");
		return ptr;
	}



	bool ShouldShowWatermark();
	bool ShouldShowTips();
	bool ShouldShowTargetInfo();
	bool ShouldShowStatusBar();
	bool ShouldShowSpawnInfo();
	bool ShouldShowServerInScoreboard();
	bool ShouldShowScoreFeed();
	bool ShouldShowObservedDelay();
	bool ShouldShowObjectives();
	bool ShouldShowMatchmakingDebug();
	bool ShouldShowKillFeed();
	bool ShouldShowKilledBy();
	bool ShouldShowHUD();
	bool ShouldShowHitMarker();
	bool ShouldShowEquipment();
	bool ShouldShowEmotesMenu();
	bool ShouldShowChatBox();
	bool ShouldShowBlood();
	bool ShouldShowAnnouncements();
	bool ShouldShowAmmo();
	bool ShouldQuickSpawn();
	bool ShouldDrawTracers();
	void SetVoiceVolume(float NewVolume);
	void SetVideoVolume(float NewVolume);
	void SetTracersStayTime(float NewStayTime);
	void SetThirdPersonDeathcamera(int NewThirdPersonDeathCamera);
	void SetShowTips(int NewShowTips);
	void SetShowTargetInfo(int NewShowTargetInfo);
	void SetShowStatusBar(int NewShowStatusBar);
	void SetShowSpawnInfo(int NewShowSpawnInfo);
	void SetShowServerInScoreboard(int NewShowServerInScoreboard);
	void SetShowScoreFeed(int NewShowScoreFeed);
	void SetShowObservedDelay(int NewShowObservedDelay);
	void SetShowObjectives(int NewShowObjectives);
	void SetShowMatchmakingDebug(int NewShowMatchmakingDebug);
	void SetShowKillFeed(int NewShowKillFeed);
	void SetShowKilledBy(int NewShowKilledBy);
	void SetShowHitMarker(int NewShowHitMarker);
	void SetShowEquipment(int NewShowEquipment);
	void SetShowEmotesMenu(int NewEmotesMenu);
	void SetShowCombatHints(int NewShowCombatHints);
	void SetShowChatBox(int NewShowChatBox);
	void SetShowAnnouncements(int NewShowAnnouncements);
	void SetShowAmmo(int NewShowAmmo);
	void SetServerFilter(Mordhau_EServerFilterCategories FilterCategory, unsigned char Value);
	void SetServerBrowserSortType(const struct FString& NewSortType);
	void SetServerBrowserServerName(const struct FString& NewServerName);
	void SetServerBrowserNotFull(bool bNewNotFull);
	void SetServerBrowserNoPassword(bool bNewNoPassword);
	void SetServerBrowserMaxPing(int NewMaxPing);
	void SetServerBrowserHasPlayers(bool bNewHasPlayers);
	void SetServerBrowserGameMode(const struct FString& NewGameMode);
	void SetSelectedGameModePlayerCounts(const struct FString& GameMode, TArray<int> SelectedPlayerCounts);
	void SetScreenSpaceReflections(int NewScreenSpaceReflections);
	void SetScreenPercentage(float NewScreenPercentage);
	void SetRecentServers(TArray<struct FString> NewRecentServers);
	void SetRankedMatchmakingRegion(MordhauOnlineSubsystem_EServerRegion NewRegion);
	void SetRankedMatchmakingGameModes(TArray<struct FString> NewGameModes);
	void SetRangedSensitivity(float NewRangedSensitivity);
	void SetRagdollStayTime(float NewTime);
	void SetRagdollFidelity(int NewFidelity);
	void SetQuickSpawn(int NewQuickSpawn);
	void SetProfanityFilter(int NewProfanityFilter);
	void SetNvidiaReflex(int NewNvidiaReflex);
	void SetNoTeamColorsOnGear(int NewNoTeamColorsOnGear);
	void SetMusicVolume(float NewVolume);
	void SetMovementHeadbob(float NewMovementHeadbob);
	void SetMouseSmoothing(float NewSmoothing);
	void SetMotionBlur(float NewMotionBlur);
	void SetMaxRagdolls(int NewMax);
	void SetMasterVolume(float NewVolume);
	void SetLensFlares(int NewLensFlares);
	void SetLanguage(const struct FString& NewLanguage);
	void SetInstrumentsVolume(float NewVolume);
	void SetIndirectCapsuleShadows(int NewShadows);
	void SetHideWatermark(int NewHideWatermark);
	void SetHideHUD(int NewHideHUD);
	void SetHideDefaultLoadouts(int NewHideDefaultLoadouts);
	void SetHeadbob(float NewHeadbob);
	void SetGore(int NewGore);
	void SetGamma(float NewGamma);
	void SetFriendlyMarkers(int NewFriendlyMarkers);
	void SetForceFeedbackEnabled(bool Enabled);
	void SetFieldOfView(float NewFOV);
	void SetFavoriteServers(TArray<struct FString> NewFavoriteServers);
	void SetEffectsVolume(float NewVolume);
	void SetDrawTracers(int NewDrawTracers);
	void SetCrosshairType(int NewCrosshairType);
	void SetCombatHeadbob(float NewCombatHeadbob);
	void SetCharacterFidelity(int NewFidelity);
	void SetCharacterCloth(int NewCharacterCloth);
	void SetCasualMatchmakingRegion(MordhauOnlineSubsystem_EServerRegion NewRegion);
	void SetCasualMatchmakingGameModes(TArray<struct FString> NewGameModes);
	void SetCameraDistance(float NewCameraDistance);
	void SetBloom(float NewBloom);
	void SetAntiAliasing(int NewAntiAliasing);
	void SetAmbientOcclusion(int NewAmbientOcclusion);
	float GetVoiceVolume();
	float GetVideoVolume();
	struct FVector2D GetTracersStayTimeLimits();
	float GetTracersStayTime();
	int GetThirdPersonDeathCamera();
	int GetShowTips();
	int GetShowTargetInfo();
	int GetShowStatusBar();
	int GetShowSpawnInfo();
	int GetShowServerInScoreboard();
	int GetShowScoreFeed();
	int GetShowObservedDelay();
	int GetShowObjectives();
	int GetShowKillFeed();
	int GetShowKilledBy();
	int GetShowHitMarker();
	int GetShowEquipment();
	int GetShowEmotesMenu();
	int GetShowCombatHints();
	int GetShowChatBox();
	int GetShowAnnouncements();
	int GetShowAmmo();
	unsigned char GetServerFilterValue(Mordhau_EServerFilterCategories FilterCategory);
	struct FString GetServerBrowserSortType();
	struct FString GetServerBrowserServerName();
	bool GetServerBrowserNotFull();
	bool GetServerBrowserNoPassword();
	int GetServerBrowserMaxPing();
	bool GetServerBrowserHasPlayers();
	struct FString GetServerBrowserGameMode();
	TArray<int> GetSelectedGameModePlayerCounts(const struct FString& GameMode);
	int GetScreenSpaceReflections();
	struct FVector2D GetScreenPercentageLimits();
	float GetScreenPercentage();
	TArray<struct FString> GetRecentServers();
	MordhauOnlineSubsystem_EServerRegion GetRankedMatchmakingRegion();
	TArray<struct FString> GetRankedMatchmakingGameModes();
	struct FVector2D GetRangedSensitivityLimits();
	float GetRangedSensitivity();
	float GetRagdollStayTimeLimit();
	float GetRagdollStayTime();
	int GetRagdollFidelity();
	int GetQuickSpawn();
	int GetProfanityFilter();
	int GetNvidiaReflex();
	int GetNoTeamColorsOnGear();
	float GetMusicVolume();
	struct FVector2D GetMovementHeadbobLimits();
	float GetMovementHeadbob();
	struct FVector2D GetMouseSmoothingLimits();
	float GetMouseSmoothing();
	struct FVector2D GetMotionBlurLimits();
	float GetMotionBlur();
	int GetMaxRagdollsLimit();
	int GetMaxRagdolls();
	float GetMasterVolume();
	int GetLensFlares();
	struct FString GetLanguage();
	float GetInstrumentsVolume();
	int GetIndirectCapsuleShadows();
	int GetHideWatermark();
	int GetHideHUD();
	int GetHideDefaultLoadouts();
	struct FVector2D GetHeadbobLimits();
	float GetHeadbob();
	int GetGore();
	struct FVector2D GetGammaLimits();
	float GetGamma();
	int GetFriendlyMarkers();
	struct FVector2D GetFrameRateLimits();
	bool GetForceFeedbackEnabled();
	struct FVector2D GetFieldOfViewLimits();
	float GetFieldOfView();
	TArray<struct FString> GetFavoriteServers();
	float GetEffectsVolume();
	int GetDrawTracers();
	float GetCurrentMotionBlur();
	float GetCurrentGamma();
	float GetCurrentBloom();
	int GetCrosshairType();
	struct FVector2D GetCombatHeadbobLimits();
	float GetCombatHeadbob();
	int GetCharacterFidelity();
	int GetCharacterCloth();
	MordhauOnlineSubsystem_EServerRegion GetCasualMatchmakingRegion();
	TArray<struct FString> GetCasualMatchmakingGameModes();
	struct FVector2D GetCameraDistanceLimits();
	float GetCameraDistance();
	struct FVector2D GetBloomLimits();
	float GetBloom();
	void GetAvailableLanguages(TArray<struct FString>* AvailableLanguages);
	int GetAntiAliasing();
	int GetAmbientOcclusion();
	int GetActualCrosshairType();
	void ApplyTextureQualityUsingTextureGroups(int Quality);
	void ApplyAudioVolumes();
};

// Class Mordhau.MordhauHttpRequest
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UMordhauHttpRequest : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnRequestComplete;                                         // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestFailed;                                           // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2HZ3[0x80];                                    // 0x0050(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauHttpRequest");
		return ptr;
	}



	class UMordhauHttpRequest* STATIC_MordhauHttpRequest(class UObject* WorldContext, const struct FString& InUrl, const struct FString& InVerb, TMap<struct FString, struct FString> InHeaderMap, class UPlayFabJsonObject* InPlayFabJsonObject);
};

// Class Mordhau.MordhauHUD
// 0x0018 (FullSize[0x0328] - InheritedSize[0x0310])
class AMordhauHUD : public AHUD
{
public:
	unsigned char                                      UnknownData_BSKO[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AControlPoint*>                       CapturePointsOfInterest;                                   // 0x0318(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauHUD");
		return ptr;
	}



	void OnGameStateReplicated();
	void EnqueueMordhauDialog(class UMordhauDialog* Dialog);
};

// Class Mordhau.MordhauHUDWidgetComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UMordhauHUDWidgetComponent : public UActorComponent
{
public:
	bool                                               bCreateOnBeginPlay;                                        // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnBeginPlay;                                          // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HMA7[0x6];                                     // 0x00B2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      WidgetBPReference;                                         // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 Widget;                                                    // 0x00C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsPendingToShow;                                          // 0x00C8(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FKOF[0xF];                                     // 0x00C9(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauHUDWidgetComponent");
		return ptr;
	}



	bool ShowWidget();
	void RemoveWidget();
	void OnCharacterOwnerEndViewTarget(class AAdvancedCharacter* CharacterOwner);
	void OnCharacterOwnerBecomeViewTarget(class AAdvancedCharacter* CharacterOwner);
	void InstantiateWidget();
	void HideWidget();
	class UUserWidget* GetHUDWidget();
};

// Class Mordhau.MordhauInput
// 0x00C0 (FullSize[0x00E8] - InheritedSize[0x0028])
class UMordhauInput : public UObject
{
public:
	unsigned char                                      UnknownData_5T52[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDefaultBindingsChecked;                                   // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4FEX[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FInputAxisConfigEntry>               AxisConfig;                                                // 0x0038(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                            // 0x0048(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                              // 0x0058(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FKey>                                ConsoleKeys;                                               // 0x0068(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ControlScheme;                                             // 0x0078(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                AngleAttacksWithMovement;                                  // 0x007C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MouseXIsFlipAttackSide;                                    // 0x0080(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                InverseAttackDirectionX;                                   // 0x0084(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                InverseAttackDirectionY;                                   // 0x0088(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                AngleAttackAfterPress;                                     // 0x008C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ToggleSprint;                                              // 0x0090(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bMouseXInverted;                                           // 0x0094(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AU31[0x3];                                     // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MouseXSensitivity;                                         // 0x0098(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bMouseYInverted;                                           // 0x009C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G93C[0x3];                                     // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MouseYSensitivity;                                         // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bGamepadLeftXInverted;                                     // 0x00A4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L0BO[0x3];                                     // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GamepadLeftXSensitivity;                                   // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GamepadLeftXDeadzone;                                      // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bGamepadLeftYInverted;                                     // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_09U9[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GamepadLeftYSensitivity;                                   // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GamepadLeftYDeadzone;                                      // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bGamepadRightXInverted;                                    // 0x00BC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8MDD[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GamepadRightXSensitivity;                                  // 0x00C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GamepadRightXDeadzone;                                     // 0x00C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bGamepadRightYInverted;                                    // 0x00C8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8DN6[0x3];                                     // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GamepadRightYSensitivity;                                  // 0x00CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GamepadRightYDeadzone;                                     // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O1A9[0x14];                                    // 0x00D4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauInput");
		return ptr;
	}



	void SetToggleSprint(int NewToggleSprint);
	void SetMouseYSensitivity(float NewSensitivity);
	void SetMouseYInverted(bool bNewInverted);
	void SetMouseXSensitivity(float NewSensitivity);
	void SetMouseXIsFlipAttackSide(int NewIsFlipAttackSide);
	void SetMouseXInverted(bool bNewInverted);
	void SetInverseAttackDirectionY(int NewInverseAttackDirectionX);
	void SetInverseAttackDirectionX(int NewInverseAttackDirectionX);
	void SetGamepadRightYSensitivity(float NewSensitivity);
	void SetGamepadRightYInverted(bool bNewInverted);
	void SetGamepadRightYDeadzone(float NewDeadzone);
	void SetGamepadRightXSensitivity(float NewSensitivity);
	void SetGamepadRightXInverted(bool bNewInverted);
	void SetGamepadRightXDeadzone(float NewDeadzone);
	void SetGamepadLeftYSensitivity(float NewSensitivity);
	void SetGamepadLeftYInverted(bool bNewInverted);
	void SetGamepadLeftYDeadzone(float NewDeadzone);
	void SetGamepadLeftXSensitivity(float NewSensitivity);
	void SetGamepadLeftXInverted(bool bNewInverted);
	void SetGamepadLeftXDeadzone(float NewDeadzone);
	void SetControlScheme(int NewControlScheme);
	void SetAngleAttacksWithMovement(int NewAngleAttacksWithMovement);
	void SetAngleAttackAfterPress(int NewAngleAttackAfterPress);
	void SaveSettings();
	void RestoreDefaultSettings();
	int GetToggleSprint();
	struct FInputAxisKeyMapping GetSecondaryAxisKeyBinding(const struct FName& AxisName);
	struct FInputActionKeyMapping GetSecondaryActionKeyBinding(const struct FName& ActionName);
	struct FInputAxisKeyMapping GetPrimaryAxisKeyBinding(const struct FName& AxisName);
	struct FInputActionKeyMapping GetPrimaryActionKeyBinding(const struct FName& ActionName);
	float GetMouseYSensitivity();
	bool GetMouseYInverted();
	float GetMouseXSensitivity();
	int GetMouseXIsFlipAttackSide();
	bool GetMouseXInverted();
	struct FVector2D GetMouseSensitivityLimits();
	int GetInverseAttackDirectionY();
	int GetInverseAttackDirectionX();
	struct FVector2D GetGamepadSensitivityLimits();
	float GetGamepadRightYSensitivity();
	bool GetGamepadRightYInverted();
	float GetGamepadRightYDeadzone();
	float GetGamepadRightXSensitivity();
	bool GetGamepadRightXInverted();
	float GetGamepadRightXDeadzone();
	float GetGamepadLeftYSensitivity();
	bool GetGamepadLeftYInverted();
	float GetGamepadLeftYDeadzone();
	float GetGamepadLeftXSensitivity();
	bool GetGamepadLeftXInverted();
	float GetGamepadLeftXDeadzone();
	struct FVector2D GetGamepadDeadzoneLimits();
	int GetControlScheme();
	void GetConsoleKeyBindings(TArray<struct FKey>* ConsoleKeyBindings);
	float STATIC_GetAxisScale(const struct FInputAxisKeyMapping& AxisKeyBinding);
	struct FName STATIC_GetAxisOppositeDirectionName(const struct FName& AxisName);
	struct FName STATIC_GetAxisName(const struct FInputAxisKeyMapping& AxisKeyBinding);
	void GetAxisKeyBindings(TArray<struct FInputAxisKeyMapping>* AxisKeyBindings);
	struct FKey STATIC_GetAxisKey(const struct FInputAxisKeyMapping& AxisKeyBinding);
	int GetAngleAttacksWithMovement();
	int GetAngleAttackAfterPress();
	struct FName STATIC_GetActionName(const struct FInputActionKeyMapping& ActionKeyBinding);
	void GetActionKeyBindings(TArray<struct FInputActionKeyMapping>* ActionKeyBindings);
	struct FKey STATIC_GetActionKey(const struct FInputActionKeyMapping& ActionKeyBinding);
	void ClearKeyBindings();
	void ApplySettings();
	void AddConsoleKeyBinding(const struct FKey& Key);
	void AddAxisKeyBinding(const struct FName& AxisName, const struct FKey& Key);
	void AddActionKeyBinding(const struct FName& ActionName, const struct FKey& Key);
};

// Class Mordhau.MordhauInventory
// 0x01E0 (FullSize[0x0208] - InheritedSize[0x0028])
class UMordhauInventory : public UObject
{
public:
	unsigned char                                      UnknownData_LLVE[0x1A0];                                   // 0x0028(0x01A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemsRefreshed;                                          // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemsDropped;                                            // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRewardsDropped;                                          // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemsUnlocked;                                           // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauInventory");
		return ptr;
	}



	void UnlockLevelUnlocks(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId);
	void UnlockItems(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, TArray<int> ItemDefIDs);
	void UnlockItem(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, int ItemDefID);
	void TriggerItemDrop(Mordhau_ECallResult* CallResult, int ItemDefID);
	bool SetPlayerXP(const struct FString& PlayFabId, int XP);
	bool SetPlayerGold(const struct FString& PlayFabId, int Gold);
	void SetItemQuantity(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, int ItemDefID, int Quantity);
	void ResetInventory(Mordhau_ECallResult* CallResult);
	void RequestUnlockRecipes();
	void RefreshPlayerItems(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId);
	void RefreshItems(Mordhau_ECallResult* CallResult);
	bool IsSkinAvailable(const struct FString& PlayFabId, const struct FEquipmentSkinEntry& Skin);
	bool IsInventoryAvailable(const struct FString& PlayFabId);
	bool HasSkin(const struct FString& PlayFabId, const struct FEquipmentSkinEntry& Skin);
	bool HasItem(const struct FString& PlayFabId, int ItemDefID);
	int STATIC_GetXPItemDefID();
	int GetXP();
	void GetUnlockRecipe(Mordhau_ECallResult* CallResult, int ItemDefID, struct FUnlockRecipe* Recipe);
	int STATIC_GetTutorialPackageItemDefID();
	int STATIC_GetSupporterPackageItemDefID();
	int STATIC_GetStackQuantity(const struct FItemStack& ItemStack);
	int STATIC_GetStackItemDefID(const struct FItemStack& ItemStack);
	class UMordhauInventoryItem* STATIC_GetStackItem(const struct FItemStack& ItemStack);
	Mordhau_EItemRarity GetSkinRarity(const struct FEquipmentSkinEntry& Skin);
	int GetPlayerXP(const struct FString& PlayFabId);
	int GetPlayerGold(const struct FString& PlayFabId);
	void GetItemStacks(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, TArray<struct FItemStack>* ItemStacks);
	void GetItemQuantity(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, int ItemDefID, int* Quantity);
	class UMordhauInventoryItem* STATIC_GetItem(int ItemDefID);
	int STATIC_GetGoldItemDefID();
	int GetGold();
	void FakeRewardDrop(Mordhau_ECallResult* CallResult, int Gold, int XP);
	void FakeItemDrop(Mordhau_ECallResult* CallResult, int ItemDefID, int Quantity);
	bool ClearPlayerItems(const struct FString& PlayFabId);
	bool CanUnlockItems(const struct FString& PlayFabId, TArray<int> ItemDefIDs);
	bool CanUnlockItem(const struct FString& PlayFabId, int ItemDefID);
	bool AreUnlockRecipesAvailable();
	void AddItems(Mordhau_ECallResult* CallResult, TArray<int> ItemDefIDs);
	void AddItem(Mordhau_ECallResult* CallResult, int ItemDefID);
};

// Class Mordhau.MordhauLevelScriptActor
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class AMordhauLevelScriptActor : public ALevelScriptActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauLevelScriptActor");
		return ptr;
	}



};

// Class Mordhau.MordhauMovementComponent
// 0x0108 (FullSize[0x0860] - InheritedSize[0x0758])
class UMordhauMovementComponent : public UAdvancedCharacterMovement
{
public:
	unsigned char                                      UnknownData_ENQ4[0x4];                                     // 0x0758(0x0004) Fix Super Size
	float                                              SpawnMaxSprintDuration;                                    // 0x075C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EEOX[0x10];                                    // 0x0760(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 TurnSprintPreventionDecayCurve;                            // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TurnSprintPreventionSlowdownCurve;                         // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSprintPreventionMaxAccumulatedAngle;                   // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RushSprintTimeStart;                                       // 0x0784(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChasingSprintTimeStart;                                    // 0x0788(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BeingChasedSlowdownTimeFactor;                             // 0x078C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAngleToChase;                                           // 0x0790(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAngleToStopChasing;                                     // 0x0794(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ChasingMaxDistance;                                        // 0x0798(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     StopChasingMaxDistance;                                    // 0x07A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ChasedMaxDistance;                                         // 0x07B0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToBreakUsChasing;                                      // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToBreakUsBeingChased;                                  // 0x07C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinTimeToStartChasing;                                     // 0x07C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinTimeToStartBeingChased;                                 // 0x07C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWalkSpeedCrouchedWithRatPerk;                           // 0x07CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintModifier;                                            // 0x07D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChasingModifier;                                           // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PartialSprintModifier;                                     // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SupersprintModifier;                                       // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackpedalModifier;                                         // 0x07E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeModifier;                                            // 0x07E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WalkAcceleration;                                          // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PartialSprintAcceleration;                                 // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintAcceleration;                                        // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintTimeToReachMaxSprint;                                // 0x07F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintTime;                                                // 0x07F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TKHY[0x4];                                     // 0x07FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SupersprintAcceleration;                                   // 0x0800(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MotionSpeedFactor;                                         // 0x0804(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MotionBackpedalSpeedFactor;                                // 0x0808(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipmentBackpedalSpeedFactor;                             // 0x080C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipmentSpeedFactorOverride;                              // 0x0810(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmorSpeedFactor;                                          // 0x0814(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmorAccelerationFactor;                                   // 0x0818(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipmentSpeedBonusPercentage;                             // 0x081C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipmentSubSprintSpeedBonus;                              // 0x0820(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EquipmentAccelerationBonusPercentage;                      // 0x0824(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementModifier                          MovementModifier;                                          // 0x0828(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsSprint;                                              // 0x0829(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSprintIsAllowed;                                          // 0x082A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyPartialSprint;                                        // 0x082B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsSupersprint;                                         // 0x082C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PBLY[0x3];                                     // 0x082D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KnockbackGroundFriction;                                   // 0x0830(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackFallingLateralFriction;                           // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackUpImpulse;                                        // 0x0838(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpeedFalling;                                           // 0x083C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseGroundFriction;                                        // 0x0840(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseFallingLateralFriction;                                // 0x0844(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackDuration;                                         // 0x0848(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrakingDecelerationFallingTooFast;                         // 0x084C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EKII[0x10];                                    // 0x0850(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauMovementComponent");
		return ptr;
	}



	void OnInputTypeChange(bool bUsingGamepad);
	void OnCharacterLODTick(float DeltaTime);
	void Knockback(const struct FVector& Amount);
	bool IsInKnockback();
	float GetSpeedFactor(float PartialSprintToSprintWeight);
	float GetAccelerationFactor();
};

// Class Mordhau.MordhauNavigationQueryFilter
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UMordhauNavigationQueryFilter : public UNavigationQueryFilter
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauNavigationQueryFilter");
		return ptr;
	}



};

// Class Mordhau.MordhauNetworkTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMordhauNetworkTypes : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauNetworkTypes");
		return ptr;
	}



};

// Class Mordhau.MordhauPhysicsCollisionHandler
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UMordhauPhysicsCollisionHandler : public UPhysicsCollisionHandler
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauPhysicsCollisionHandler");
		return ptr;
	}



};

// Class Mordhau.MordhauPlayerController
// 0x0630 (FullSize[0x0BA0] - InheritedSize[0x0570])
class AMordhauPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData_8Q8V[0x4];                                     // 0x0570(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APawn>                        LastPawn;                                                  // 0x0574(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VA2U[0x64];                                    // 0x057C(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTagSystemComponent*                         TagSystemComponent;                                        // 0x05E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnServerRestrictionInfoReceived;                           // 0x05E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              TotalMordhauCharacterTeamDamage;                           // 0x05F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotalMordhauCharacterDamage;                               // 0x05FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAnythingRestockable;                                    // 0x0600(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9VL5[0x3];                                     // 0x0601(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SelectedCharacterProfile;                                  // 0x0604(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SelectedDefaultProfile;                                    // 0x0608(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WBSL[0x4];                                     // 0x060C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterProfile                           CharacterProfile;                                          // 0x0610(0x00B8) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bReceivedValidProfileFromClient;                           // 0x06C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0CE7[0x3];                                     // 0x06C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastAskedForSpawnTime;                                     // 0x06CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnToken;                                                // 0x06D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HUZ6[0xC];                                     // 0x06D4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterProfile                           LastSentCharacterProfile;                                  // 0x06E0(0x00B8) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VMY8[0x8];                                     // 0x0798(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACustomizationReplicationActor*              CustomizationReplicationActor;                             // 0x07A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSendsDefaultCustomization;                                // 0x07A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9UBD[0x7];                                     // 0x07A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FEquipmentCustomization>             DefaultCharacterEquipment;                                 // 0x07B0(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L1Z4[0x10];                                    // 0x07C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharacterGearCustomization>         DefaultCharacterTier;                                      // 0x07D0(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PL6T[0x8];                                     // 0x07E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterProfile                           PendingCharacterProfile;                                   // 0x07E8(0x00B8) (BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bIsPendingCharacterProfileASelectedDefaultProfile;         // 0x08A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LX76[0x7];                                     // 0x08A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterProfile                           ConstructingCharacterProfile;                              // 0x08A8(0x00B8) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4X5S[0x4];                                     // 0x0960(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMordhauCharacter>            LastControlledCharacter;                                   // 0x0964(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8VBH[0x54];                                    // 0x096C(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NextRespawnTime;                                           // 0x09C0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VC1C[0x2];                                     // 0x09C4(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseInstancing;                                            // 0x09C6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5W6X[0x1];                                     // 0x09C7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      InInstanceWithControllers[0x50];                           // 0x09C7(0x0050) UNKNOWN PROPERTY: SetProperty
	float                                              LocallyTrackedObjectiveScore;                              // 0x0A18(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsBlockInput;                                          // 0x0A1C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BHT5[0x3];                                     // 0x0A1D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAFKTime;                                                // 0x0A20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyAFKIfAlive;                                           // 0x0A24(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KTG1[0x3];                                     // 0x0A25(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentAFKTime;                                            // 0x0A28(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LastAFKCheckCameraLocation;                                // 0x0A2C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAuthenticating;                                         // 0x0A38(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAuthenticated;                                          // 0x0A39(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClientRequestedRewards;                                   // 0x0A3A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bServerReceivedRewards;                                    // 0x0A3B(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RewardedGold;                                              // 0x0A3C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RewardedXP;                                                // 0x0A40(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerStats                                ServerStats;                                               // 0x0A44(0x0018) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VGPH[0x4];                                     // 0x0A5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             MapVoteMaps;                                               // 0x0A60(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<unsigned char>                              MapVoteCounts;                                             // 0x0A70(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Rank;                                                      // 0x0A80(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0QAL[0x4];                                     // 0x0A84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     MatchmakingMatchID;                                        // 0x0A88(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerCommand                              CurrentPlayerCommand;                                      // 0x0A98(0x0030) (NativeAccessSpecifierPublic)
	TArray<class UClass*>                              PreferredWeaponModes;                                      // 0x0AC8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0BAC[0x10];                                    // 0x0AD8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             ScreenshotFilenames;                                       // 0x0AE8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OC61[0x20];                                    // 0x0AF8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bServerSupportsLagReports;                                 // 0x0B18(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_98MJ[0x7F];                                    // 0x0B19(0x007F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CataClass;                                                 // 0x0B98(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauPlayerController");
		return ptr;
	}



	void VoteMap(const struct FString& MapName);
	void VoteLevel(const struct FString& LevelName);
	void VoteKick(const struct FString& PlayerNameOrPlayFabID);
	void UpdateWeaponMode(class UClass* WeaponToUpdate, bool bAltMode);
	void Unmute(const struct FString& PlayerNameOrPlayFabID);
	void UnmountPak(const struct FString& PakPath);
	void Unban(const struct FString& PlayFabId);
	void Turn(float Value);
	void ToggleStamina();
	void ToggleServerNetProfile();
	void ToggleDamage();
	void TakeReportScreenshot();
	void StopServerStatsFile();
	void StartServerStatsFile();
	void SpectatorCmd(const struct FString& SpecCmd);
	void Slomo(float Value);
	void ShowTips();
	void ShowEquipment();
	void ShowAuthTraces(bool bValue);
	bool SharesInstanceWith(class AActor* OtherActor);
	void SetWeaponModesArray(TArray<class UClass*> InWeapons);
	void SetServerSupportsLagReports(bool bSupported);
	void SetMaxNetSkip(int NewMaxNetSkip);
	void SetFriendlyNetSkipOffset(int NewFriendlyNetSkipOffset);
	void SetChoiceMenuConsumesInput(bool Value);
	void ServerVoteLevel(const struct FString& LevelName);
	void ServerUnbanPlayer(const struct FString& PlayFabId);
	void ServerToggleStamina();
	void ServerToggleNetProfile();
	void ServerToggleDamage();
	void ServerStopServerStatsFile();
	void ServerStartServerStatsFile();
	void ServerSlomo(float Value);
	void ServerSetXPAndMMR(int XP, int DuelMMR, int TeamfightMMR, int CasualMMR);
	void ServerSetSpawnToken(int NewToken);
	void ServerSetSessionTicket(const struct FString& InSessionTicket);
	void ServerSetMaxNetSkip(int NewMaxNetSkip);
	void ServerSetMatchmakingMatchID(const struct FString& InMatchmakingMatchID);
	void ServerSetLevelDisplayType(unsigned char NewLevelDisplayType);
	void ServerSetFriendlyNetSkipOffset(int NewFriendlyNetSkipOffset);
	void ServerSetBadge(unsigned char NewBadge);
	void ServerRequestSphericalHitboxes();
	void ServerRequestSetTeam(int NewTeam);
	void ServerRequestSetSkillsCustomization(const struct FSkillsCustomization& NewCharacterSkills);
	void ServerRequestSetGearCustomization(const struct FCharacterGearCustomization& NewCharacterGear);
	void ServerRequestSetFaceCustomization(const struct FFaceCustomization& NewCharacterFace);
	void ServerRequestSetDefaultProfile(int NewDefaultProfile);
	void ServerRequestSetDefaultCharacterTiers(TArray<struct FCharacterGearCustomization> Tiers);
	void ServerRequestSetDefaultCharacterEquipment(TArray<struct FEquipmentCustomization> Equip);
	void ServerRequestSetAppearanceCustomization(const struct FAppearanceCustomization& NewCharacterAppearance);
	void ServerRequestAuthTraces(bool bEnabled);
	void ServerReportServerLag();
	void ServerRemoveBots(int Amount, int Team);
	void ServerRemoveAdmin(const struct FString& PlayFabId);
	void ServerPlayerStatus(const struct FString& PlayFabId);
	void ServerNotifyPlayerDisconnecting();
	void ServerNotifyItemsUnlocked();
	void ServerMuteList();
	void ServerKickPlayer(const struct FString& PlayFabId, const struct FString& KickReason);
	void ServerHasPassedCheck(unsigned char Param);
	void ServerGetServerStats();
	void ServerGetMapVoteMaps();
	void ServerGetMapVoteCounts();
	void ServerChatUnmutePlayer(const struct FString& PlayFabId);
	void ServerChatMutePlayer(const struct FString& PlayFabId, int MuteDuration);
	void ServerChangeLevel(const struct FString& LevelName);
	void ServerBanPlayer(const struct FString& PlayFabId, int BanDuration, const struct FString& BanReason);
	void ServerBanList();
	void ServerAdminLogin(const struct FString& Password);
	void ServerAdminList();
	void ServerAddBots(int Amount, int Team);
	void ServerAddAdmin(const struct FString& PlayFabId);
	void Server_Reliable_GiveCata();
	void SaveCurrentProfilesAsBotProfiles();
	void RequestSphericalHitboxes();
	void RequestServerRestrictionInfo();
	void RequestRewards();
	void RequestReportPlayer(const struct FString& ReporteePlayFabID, const struct FString& ReportType, const struct FString& Screenshot);
	void ReportServerLag();
	void ReportPlayer(const struct FString& ReporteePlayFabID, const struct FString& ReportType, const struct FString& ScreenshotFilename);
	void RemoveBotsTeam(int Amount, int Team);
	void RemoveBots(int Amount);
	void RemoveAdmin(const struct FString& PlayerNameOrPlayFabID);
	void RegisterAnglingYInput(float Value);
	void RegisterAnglingXInput(float Value);
	void ReceiveServerRestrictionInfo(const struct FServerRestrictionInfo& Info);
	void ProcessChatCommand(const struct FString& Prefix, const struct FString& Command, const struct FString& Args);
	void PrepareAndSendCustomizationIfChanged();
	void PlayerStatus(const struct FString& PlayFabId);
	void PlayerList();
	void ParryThis();
	void OnSpectatorCmd(const struct FString& Cmd, const struct FString& Param);
	void OnSpectatorAction(unsigned char Action);
	void OnSettingsChanged();
	void OnRequestVoteKick(class AMordhauPlayerState* TargetPlayer);
	void OnRequestCancelVoteKick();
	void OnReceivedKillScore(class AMordhauCharacter* Killed);
	void OnReceivedAssistScore(float Percentage, class AMordhauCharacter* Killed);
	void OnPlayFabLoginComplete(bool bWasSuccessful, const struct FString& PlayFabId);
	void OnNewProfileFromClientPreValidation();
	void OnNewProfileFromClientPostValidation();
	void OnMordhauCharacterSpawned(class AMordhauCharacter* SpawnedCharacter);
	void OnIsAnythingRestockableChanged();
	void OnInventoryItemsUnlocked(bool bWasSuccessful, TArray<struct FItemStack> ItemStacks);
	void OnHighlightStart(class AActor* Actor);
	void OnHighlightEnd(class AActor* Actor);
	void OnGetPlayFabPlayerComplete(bool bWasSuccessful, const struct FString& PlayFabId, const struct FPlayFabPlayer& PlayFabPlayer);
	void OnGetPlayFabIDsFromPlatformIDsComplete(bool bWasSuccessful, TMap<struct FString, struct FString> PlayFabIds);
	void OnAmmoChanged(class AMordhauEquipment* Equipment, int AmmoDifference);
	void OnAfterUnPossess();
	void OnAfterPossess(class APawn* APawn);
	void OnAFKTimeExceededMaximum();
	void OnActionFailed(const struct FName& Reason);
	void MuteList();
	void Mute(const struct FString& PlayerNameOrPlayFabID, int MuteDuration);
	void MountPak(const struct FString& PakPath);
	void LookupPlayer(const struct FString& UniqueId);
	void LookUp(float Value);
	void Kick(const struct FString& PlayerNameOrPlayFabID, const struct FString& KickReason);
	bool IsSessionTicketAvailable();
	bool IsInventoryAvailable();
	bool IsAuthenticating();
	bool IsAuthenticated();
	bool IsAllowedServer(const struct FString& Command);
	bool IsAllowedClient(const struct FString& Command);
	bool IsAdmin();
	void GiveClientScoreBP(Mordhau_EScoreFeedReason Reason, int ScoreAmount);
	void GiveCata();
	struct FPlayFabPlayer GetPlayFabPlayer();
	struct FString GetPlayFabId();
	class AAdvancedCharacter* GetNextViewablePlayerNonAuth(bool bReverse, bool bOnlyOwnTeam);
	class AMordhauCharacter* GetLastControlledCharacter();
	bool GetDefaultTierCustomizationForSlot(Mordhau_EMainWearableSlot MainSlot, unsigned char ArmorTier, TMap<Mordhau_EWearableSlot, struct FWearableCustomization>* OutMap);
	bool GetDefaultEquipmentCustomizationFor(class UClass* ForEquipmentClass, struct FEquipmentCustomization* OutCustomization);
	class AMordhauCharacter* GetControlledMordhauCharacter(bool bAlsoSearchVehicle);
	struct FVector2D GetAnglingVector();
	float GetAnglingAngle();
	void FlushPendingAnglingInputs();
	void EquipmentCommand(int Command);
	void DisplayMessage(class APlayerState* SenderPlayerState, const struct FString& S, const struct FName& Type, float MsgLifeTime);
	void DisplayAnnouncement(const struct FString& Text, const struct FString& Subtext, float Duration);
	void CopyName(const struct FString& UniqueId);
	void CopyID(const struct FString& UniqueId);
	int ComputePlayerRank();
	void ClientWasKicked_Implementation(const struct FText& KickReason);
	void ClientSetServerStats(const struct FServerStats& InServerStats);
	void ClientSetServerInfo(const struct FBasicServerInfo& ServerInfo);
	void ClientSetPlayFabMatch(const struct FPlayFabMatch& InMatch);
	void ClientSetMapVoteMaps(TArray<struct FString> InMapVoteMaps);
	void ClientSetMapVoteCounts(TArray<unsigned char> InMapVoteCounts);
	void ClientSetFlags(const struct FString& InMyFlags, TArray<struct FAdminFlag> InAdminFlags);
	void ClientSetControlAndPawnRotation(class APawn* APawn, const struct FRotator& NewRotation);
	void ClientRequestXPAndMMR();
	void ClientRequestSessionTicket();
	void ClientRequestMatchmakingMatchID();
	void ClientReceiveSphericalHitboxes(TArray<struct FVector> Locations, const struct FVector& WeaponTraceStart, const struct FVector& WeaponTraceEnd);
	void ClientReceiveScoreNoState(unsigned char ReasonAndParam, int16_t ScoreAmount);
	void ClientReceiveScoreBP(Mordhau_EScoreFeedReason Reason, unsigned char ReasonParam, float ScoreAmount, class AMordhauPlayerState* AssociatedPlayer);
	void ClientReceiveScore(unsigned char ReasonAndParam, int16_t ScoreAmount, class AMordhauPlayerState* AssociatedPlayer);
	void ClientReceiveMessage(const struct FString& Message);
	void ClientMessageBP(const struct FString& String);
	void ClientDrawTracer(const struct FVector& Start, const struct FVector& End);
	void ChooseExit();
	void Choose9();
	void Choose8();
	void Choose7();
	void Choose6();
	void Choose5();
	void Choose4();
	void Choose3();
	void Choose2();
	void Choose1();
	void ChoiceMenuOptionSelected(int Choice);
	void ChoiceMenu(int Index);
	void ChangeMap(const struct FString& MapName);
	void ChangeLevel(const struct FString& LevelName);
	void CancelVoteKick();
	bool CanAskForSpawn();
	void BanList();
	void Ban(const struct FString& PlayerNameOrPlayFabID, int BanDuration, const struct FString& BanReason);
	void AskForSpawn();
	bool AreStatsAvailable();
	void AdminLogin(const struct FString& Password);
	void AdminList();
	void AddBotsTeam(int Amount, int Team);
	void AddBots(int Amount);
	void AddAdmin(const struct FString& PlayerNameOrPlayFabID);
};

// Class Mordhau.MordhauPlayerStart
// 0x0010 (FullSize[0x0260] - InheritedSize[0x0250])
class AMordhauPlayerStart : public APlayerStart
{
public:
	bool                                               bIsSpawnDisabled;                                          // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RVYY[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Team;                                                      // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Token;                                                     // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0Z3V[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauPlayerStart");
		return ptr;
	}



	void OnSpawnChosen(class AController* Player);
	bool IsAllowedSpawnFor(class AController* Player);
	float GetSpawnPreferenceFor(class AController* Player);
};

// Class Mordhau.MordhauPlayerState
// 0x00F0 (FullSize[0x0410] - InheritedSize[0x0320])
class AMordhauPlayerState : public APlayerState
{
public:
	TWeakObjectPtr<class AMordhauCharacter>            LastMordhauCharacter;                                      // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      MedianPings;                                               // 0x0328(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      MedianPingsSorted;                                         // 0x0338(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurMedianPingIndex;                                        // 0x0348(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PingMedian;                                                // 0x034C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LocalStableShortID;                                        // 0x0350(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16_t                                            ReplicatedRank;                                            // 0x0354(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16_t                                            ReplicatedKills;                                           // 0x0356(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16_t                                            ReplicatedAssists;                                         // 0x0358(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16_t                                           ReplicatedDeathsAndFlags;                                  // 0x035A(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8_t                                             ReplicatedTeam;                                            // 0x035C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Badge;                                                     // 0x035D(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      LevelDisplayType;                                          // 0x035E(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPartyMember;                                            // 0x035F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFriend;                                                 // 0x0360(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WOZS[0x3];                                     // 0x0361(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FilteredTeamKills;                                         // 0x0364(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAlive;                                                  // 0x0368(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_873U[0x3];                                     // 0x0369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Kills;                                                     // 0x036C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Deaths;                                                    // 0x0370(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Assists;                                                   // 0x0374(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team;                                                      // 0x0378(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAdmin;                                                  // 0x037C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I016[0x3];                                     // 0x037D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     AdminTier;                                                 // 0x0380(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                KilledLocalPlayerCounter;                                  // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsMuted;                                                  // 0x0394(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J2N1[0x3];                                     // 0x0395(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                KilledByLocalPlayerCounter;                                // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_58Q0[0x4];                                     // 0x039C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayFabPlayer                              PlayFabPlayer;                                             // 0x03A0(0x0060) (Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SessionTicket;                                             // 0x0400(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauPlayerState");
		return ptr;
	}



	void SetTeam(int NewTeam);
	void SetPlayerName(const struct FString& S);
	void OnRep_ReplicatedTeam();
	void OnRep_ReplicatedKills();
	void OnRep_ReplicatedDeathsAndFlags();
	void OnRep_ReplicatedAssists();
	int GetRank();
	struct FPlayFabPlayer GetPlayFabPlayer();
	struct FString GetPlayFabId();
	class AMordhauCharacter* GetLastPossessedMordhauCharacter();
	void BanPlayer(int BanDuration, const struct FString& BanReason, bool bIsOfficialServerBan, Mordhau_EBanType BanType);
	void AddScore(int Amount);
	void AddKills(int Amount);
	void AddDeaths(int Amount);
	void AddAssists(int Amount);
};

// Class Mordhau.MordhauProjectile
// 0x0448 (FullSize[0x07C0] - InheritedSize[0x0378])
class AMordhauProjectile : public AMordhauActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             SpinComponent;                                             // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyWhenTerminated;                                    // 0x0388(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasAttachedOnClient;                                      // 0x0389(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LOIZ[0x6];                                     // 0x038A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ProjectileName;                                            // 0x0390(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                     LastProjectileLocation;                                    // 0x03A8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideProjectile;                                           // 0x03B4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U9JY[0xB];                                     // 0x03B5(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  CosmeticOffsetToBlendOut;                                  // 0x03C0(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              CosmeticOffsetBlendOutSpeed;                               // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CosmeticOffsetBlendWeight;                                 // 0x03F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TKQF[0x8];                                     // 0x03F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  OriginalMeshRelativeTransform;                             // 0x0400(0x0030) (BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FQuat                                       DefaultMeshRotationOffset;                                 // 0x0430(0x0010) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FWoundInfo>                          WoundInfoArray;                                            // 0x0440(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<Engine_EPhysicalSurface>>       WillStickyOn;                                              // 0x0450(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<Engine_EPhysicalSurface>>       WillPassThroughOn;                                         // 0x0460(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TEnumAsByte<Engine_EPhysicalSurface>, class UParticleSystem*> SurfaceImpactParticles;                                    // 0x0470(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<TEnumAsByte<Engine_EPhysicalSurface>, struct FDecalInfo> SurfaceImpactDecals;                                       // 0x04C0(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                     RotationSpin;                                              // 0x0510(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathBlendDuration;                                         // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollLifeSpan;                                           // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AttackMask;                                                // 0x0524(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IL06[0x3];                                     // 0x0525(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageMultiplier;                                          // 0x0528(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NB1S[0x4];                                     // 0x052C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   FlightSound;                                               // 0x0530(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ImpactSound;                                               // 0x0538(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   FleshImpactSound;                                          // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              CurrentFlightSound;                                        // 0x0548(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActorSetAndArray                           CosmeticIgnoreActors;                                      // 0x0550(0x0060) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CUQP[0x70];                                    // 0x05B0(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHitResult>                          HitResultCache;                                            // 0x0620(0x0010) (ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    AccumulatedRotationSpin;                                   // 0x0630(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FReplicatedProjectileInfo                   ReplicatedProjectileInfo;                                  // 0x063C(0x0034) (BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       Creator;                                                   // 0x0670(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>                  OwningController;                                          // 0x0678(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APawn>                        OwningPawn;                                                // 0x0680(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFromLocalPlayer;                                        // 0x0688(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7I4Q[0x7];                                     // 0x0689(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauProjectile*                          AssociatedProjectile;                                      // 0x0690(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageModifierHuntsmanPerk;                                // 0x0698(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HNK1[0x4];                                     // 0x069C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      Damage;                                                    // 0x06A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      HeadBonus;                                                 // 0x06B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      LegBonus;                                                  // 0x06C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WoodDamage;                                                // 0x06D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StoneDamage;                                               // 0x06D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasReceivedInfo;                                          // 0x06D8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q2QA[0x3];                                     // 0x06D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FiredTime;                                                 // 0x06DC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastProjectileSweepTime;                                   // 0x06E0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesLocalProjectileBlending;                              // 0x06E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsConfirmed;                                              // 0x06E5(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasTerminated;                                            // 0x06E6(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FI0Q[0x1];                                     // 0x06E7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TerminatedTime;                                            // 0x06E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasNetworkOrigin;                                         // 0x06EC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFired;                                                 // 0x06ED(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YIRO[0x2];                                     // 0x06EE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              RestockAmmoForEquipment;                                   // 0x06F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GiveEquipmentOnPickup;                                     // 0x0700(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAssignCustomizationOnPickup;                              // 0x0708(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RHKF[0x7];                                     // 0x0709(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FEquipmentCustomization                     CreatorEquipmentCustomization;                             // 0x0710(0x0030) (NativeAccessSpecifierPublic)
	bool                                               bIsActiveBlendProjectile;                                  // 0x0740(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasStartedTrail;                                          // 0x0741(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutomaticallyDetermineMeshLocation;                       // 0x0742(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7JH0[0x1];                                     // 0x0743(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ProjectileCollisionPrecedence;                             // 0x0744(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWillIgnoreShooter;                                        // 0x0748(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutomaticallyDetermineSpinLocation;                       // 0x0749(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QA4E[0x2];                                     // 0x074A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StickySurfacePitchBlend;                                   // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StickySurfaceYawBlend;                                     // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_25N1[0x4];                                     // 0x0754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             TrailParticleTemplate;                                     // 0x0758(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentTrailParticles;                                     // 0x0760(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TrailStartSocket;                                          // 0x0768(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TrailEndSocket;                                            // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailWidth;                                                // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ETrailWidthMode>                TrailWidthMode;                                            // 0x077C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLocallyPredicted;                                       // 0x077D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4YYI[0x2];                                     // 0x077E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitBounceForce;                                            // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackBounceForce;                                         // 0x0784(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryBounceForce;                                          // 0x0788(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileBounceForce;                                     // 0x078C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnvironmentBounceForce;                                    // 0x0790(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceAngularVelocityFactor;                               // 0x0794(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceMinAngularVelocity;                                  // 0x0798(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldFlinch;                                             // 0x079C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FRF6[0x3];                                     // 0x079D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CullDistanceRagdoll;                                       // 0x07A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NSBY[0x4];                                     // 0x07A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               CollisionComp;                                             // 0x07A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAdvProjectileMovementComponent*             ProjectileMovement;                                        // 0x07B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DJF2[0x8];                                     // 0x07B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauProjectile");
		return ptr;
	}



	bool WillSticky(unsigned char Surface);
	bool WillPassThrough(unsigned char Surface);
	bool UsesProjectileBlending();
	void UpdateProjectileState(float DeltaTime);
	void TerminateProjectile();
	void SweepProjectile();
	void StopTrail();
	void StartTrail();
	void SpawnParticles(const struct FVector& Location, const struct FRotator& Rotation, class UParticleSystem* System);
	void SpawnDecal(const struct FVector& Location, const struct FRotator& Rotation, const struct FDecalInfo& DecalInfo);
	void SetCurrentTrailParticles(class UParticleSystemComponent* ParticleSystemComponent);
	bool RestockCharacter(class AMordhauCharacter* Character);
	void ProcessProjectileHit(bool bIsBlocking, const struct FHitResult& Hit);
	void OnRep_ReplicatedProjectileInfo();
	void OnProjectileHitCosmetic(class AActor* OtherActor, const struct FHitResult& Hit);
	void OnProjectileHit(const struct FVector& HitLocation, const struct FVector& HitNormal, float BounceForce, unsigned char Surface, bool bHasHitWorld, bool bHasStopped);
	void OnProjectileFired();
	void OnProjectileDamagedDamagable(class UDamageableComponent* DamagableComp, bool bWillKill, const struct FVector& WorldLocation, const struct FName& bone);
	void InitializeProjectile(class AController* InOwningController, bool bInIsLocallyPredicted, class AActor* InCreator);
	struct FTransform GetWorldMeshTransformWithOffsets();
	class AController* GetProjectileOwningController();
	class AActor* GetProjectileCreator();
	float GetPercentageOfMaxVelocityClamped();
	class UParticleSystemComponent* GetCurrentTrailParticles();
	struct FTransform GetBlendedTransform(const struct FTransform& Ours, const struct FTransform& Associated, float T);
	struct FTransform GetBlendedMeshTransform(float T);
	struct FTransform GetBlendedActorTransform(float T);
	void Fire();
	void CarryOverTrail(class AMordhauProjectile* NewProjectile);
	void BounceComponent(class USkeletalMeshComponent* ComponentToBounce, const struct FVector& NewVelocity, const struct FVector& NewAngularVelocity);
	bool AttachProjectile(const struct FHitResult& Hit);
};

// Class Mordhau.MordhauSceneComponent
// 0x0010 (FullSize[0x0200] - InheritedSize[0x01F0])
class UMordhauSceneComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_7W0X[0x10];                                    // 0x01F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauSceneComponent");
		return ptr;
	}



};

// Class Mordhau.FindMordhauServerSessions
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UFindMordhauServerSessions : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWorld*                                      World;                                                     // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Mordhau_EServerList                                ServerList;                                                // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EI83[0x3];                                     // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxResults;                                                // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFindServerSessionsFilter                   Filter;                                                    // 0x0060(0x0048) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HM3J[0x28];                                    // 0x00A8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FindMordhauServerSessions");
		return ptr;
	}



	bool STATIC_IsVacSecured(const struct FServerSearchResult& Result);
	bool STATIC_IsRecentServer(const struct FServerSearchResult& Result);
	bool STATIC_IsRanked(const struct FServerSearchResult& Result);
	bool STATIC_IsPasswordProtected(const struct FServerSearchResult& Result);
	bool STATIC_IsOfficial(const struct FServerSearchResult& Result);
	bool STATIC_IsModded(const struct FServerSearchResult& Result);
	bool STATIC_IsMatchmaking(const struct FServerSearchResult& Result);
	bool STATIC_IsFavoriteServer(const struct FServerSearchResult& Result);
	bool STATIC_IsDevBuild(const struct FServerSearchResult& Result);
	struct FString STATIC_GetServerName(const struct FServerSearchResult& Result);
	Mordhau_EServerList STATIC_GetServerList(const struct FServerSearchResult& Result);
	struct FString STATIC_GetServerID(const struct FServerSearchResult& Result);
	struct FString STATIC_GetServerAddress(const struct FServerSearchResult& Result);
	MordhauOnlineSubsystem_EServerRegion STATIC_GetRegion(const struct FServerSearchResult& Result);
	TArray<struct FString> STATIC_GetPlayers(const struct FServerSearchResult& Result);
	int STATIC_GetPing(const struct FServerSearchResult& Result);
	TArray<int> STATIC_GetMods(const struct FServerSearchResult& Result);
	int STATIC_GetMaxPlayers(const struct FServerSearchResult& Result);
	struct FString STATIC_GetMapName(const struct FServerSearchResult& Result);
	struct FString STATIC_GetGameMode(const struct FServerSearchResult& Result);
	int STATIC_GetCurrentPlayers(const struct FServerSearchResult& Result);
	class UFindMordhauServerSessions* STATIC_FindMordhauServerSessions(class UObject* WorldContextObject, Mordhau_EServerList ServerList, int MaxResults, const struct FFindServerSessionsFilter& Filter);
	bool STATIC_AllowsJoin(const struct FServerSearchResult& Result);
};

// Class Mordhau.FindMordhauServerSessionByAddress
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UFindMordhauServerSessionByAddress : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWorld*                                      World;                                                     // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FServerAddress                              Address;                                                   // 0x0058(0x0008) (NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OO4Q[0x8];                                     // 0x0060(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.FindMordhauServerSessionByAddress");
		return ptr;
	}



	class UFindMordhauServerSessionByAddress* STATIC_FindMordhauServerSessionByAddress(class UObject* WorldContextObject, const struct FServerAddress& Address);
};

// Class Mordhau.JoinMordhauServerSession
// 0x0148 (FullSize[0x0178] - InheritedSize[0x0030])
class UJoinMordhauServerSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UKTT[0x128];                                   // 0x0050(0x0128) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.JoinMordhauServerSession");
		return ptr;
	}



	class UJoinMordhauServerSession* STATIC_JoinMordhauServerSession(const struct FServerSearchResult& SearchResult);
};

// Class Mordhau.CancelFindMordhauSessions
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UCancelFindMordhauSessions : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.CancelFindMordhauSessions");
		return ptr;
	}



	bool STATIC_CancelFindMordhauSessions();
};

// Class Mordhau.DestroyMordhauServerSession
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UDestroyMordhauServerSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0UQY[0x18];                                    // 0x0050(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.DestroyMordhauServerSession");
		return ptr;
	}



	class UDestroyMordhauServerSession* STATIC_DestroyMordhauServerSession();
};

// Class Mordhau.PingMordhauServerSession
// 0x0140 (FullSize[0x0170] - InheritedSize[0x0030])
class UPingMordhauServerSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8B75[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorld*                                      World;                                                     // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FServerSearchResult                         SearchResult;                                              // 0x0060(0x0110) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PingMordhauServerSession");
		return ptr;
	}



	class UPingMordhauServerSession* STATIC_PingMordhauServerSession(class UObject* WorldContextObject, const struct FServerSearchResult& SearchResult);
};

// Class Mordhau.ReserveMordhauServerSessionSlots
// 0x0160 (FullSize[0x0190] - InheritedSize[0x0030])
class UReserveMordhauServerSessionSlots : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFull;                                                    // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RUN0[0x8];                                     // 0x0060(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorld*                                      World;                                                     // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FServerSearchResult                         SearchResult;                                              // 0x0070(0x0110) (NativeAccessSpecifierPrivate)
	TArray<struct FPlayFabPlayerEntity>                PartyMembers;                                              // 0x0180(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ReserveMordhauServerSessionSlots");
		return ptr;
	}



	class UReserveMordhauServerSessionSlots* STATIC_ReserveMordhauServerSessionSlots(class UObject* WorldContextObject, const struct FServerSearchResult& SearchResult, TArray<struct FPlayFabPlayerEntity> PartyMembers);
};

// Class Mordhau.GetMordhauServerSessionMods
// 0x0148 (FullSize[0x0178] - InheritedSize[0x0030])
class UGetMordhauServerSessionMods : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    onSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    onFailure;                                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FServerSearchResult                         SearchResult;                                              // 0x0050(0x0110) (NativeAccessSpecifierPrivate)
	struct FString                                     ServerId;                                                  // 0x0160(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QUJR[0x8];                                     // 0x0170(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.GetMordhauServerSessionMods");
		return ptr;
	}



	class UGetMordhauServerSessionMods* STATIC_GetMordhauServerSessionMods(const struct FServerSearchResult& SearchResult);
};

// Class Mordhau.MordhauShield
// 0x0010 (FullSize[0x1C30] - InheritedSize[0x1C20])
class AMordhauShield : public AMordhauWeapon
{
public:
	bool                                               bCanBlockMeleePassively;                                   // 0x1C20(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VW13[0x3];                                     // 0x1C21(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PassiveBlockDamageModifier;                                // 0x1C24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowShieldWall;                                          // 0x1C28(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WE3A[0x7];                                     // 0x1C29(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauShield");
		return ptr;
	}



};

// Class Mordhau.MordhauSingleton
// 0x07C0 (FullSize[0x07E8] - InheritedSize[0x0028])
class UMordhauSingleton : public UObject
{
public:
	unsigned char                                      UnknownData_Q7YC[0x148];                                   // 0x0028(0x0148) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AlwaysLoadedObjects[0x50];                                 // 0x0028(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      CachedLoadedClassMap[0x50];                                // 0x01C0(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      UnknownData_I4C2[0xE8];                                    // 0x0210(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LoadQueue[0x50];                                           // 0x0210(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_WMZ5[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      CurrentlyProcessingLoadQueue[0x50];                        // 0x0348(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FSoftObjectPath>                     CurrentlyProcessingLoadQueueArray;                         // 0x03A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               DefaultCharacterMesh;                                      // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PZQ3[0x50];                                    // 0x03B8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PathPheromoneDecayTerm;                                    // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathPheromoneMaxVisualizationAmount;                       // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxBloodPools;                                             // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SingletonVersion;                                          // 0x0414(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              BotProfiles;                                               // 0x0418(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             RandomBotNames;                                            // 0x0428(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      DefaultHead;                                               // 0x0438(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R6PZ[0x7];                                     // 0x0439(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      HeadWearables[0x10];                                       // 0x0439(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      OriginalHeadWearables[0x10];                               // 0x0450(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultUpperChest;                                         // 0x0460(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F3C2[0x7];                                     // 0x0461(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      UpperChestWearables[0x10];                                 // 0x0461(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      OriginalUpperChestWearables[0x10];                         // 0x0478(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultLegs;                                               // 0x0488(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LTE9[0x7];                                     // 0x0489(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LegsWearables[0x10];                                       // 0x0489(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      OriginalLegsWearables[0x10];                               // 0x04A0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      Equipment[0x10];                                           // 0x04B0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      OriginalEquipment[0x10];                                   // 0x04C0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class UClass*>                              MaleFaces;                                                 // 0x04D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              FemaleFaces;                                               // 0x04E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Voices[0x10];                                              // 0x04F0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class UClass*>                              Emblems;                                                   // 0x0500(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Badges;                                                    // 0x0510(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Perks;                                                     // 0x0520(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Archetypes;                                                // 0x0530(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Eyebrows;                                                  // 0x0540(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMordhauColorItemTable>              ColorTables;                                               // 0x0550(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMordhauColorItemTable                      SkinColorTable;                                            // 0x0560(0x0028) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMordhauColorItemTable                      EyeColorTable;                                             // 0x0588(0x0028) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMordhauColorItemTable                      HairColorTable;                                            // 0x05B0(0x0028) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMordhauColorItemTable                      EmblemColorTable;                                          // 0x05D8(0x0028) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMordhauColorItemTable                      MetalTintsColorTable;                                      // 0x0600(0x0028) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      SelectedBadge;                                             // 0x0628(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SelectedLevelDisplayType;                                  // 0x0629(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6883[0x6];                                     // 0x062A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharacterProfile>                   CharacterProfiles;                                         // 0x0630(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AllInventoryItems[0x50];                                   // 0x0640(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      PreviousLaunchInventoryItems[0x50];                        // 0x0690(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnseenInventoryItems[0x50];                                // 0x06E0(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FCharacterProfile>                   DefaultProfiles;                                           // 0x0730(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEquipmentCustomization>             DefaultCharacterEquipment;                                 // 0x0740(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterGearCustomization>         DefaultCharacterTier;                                      // 0x0750(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFaceCustomization                          DefaultCharacterFace;                                      // 0x0760(0x0030) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FAppearanceCustomization                    DefaultCharacterAppearance;                                // 0x0790(0x0028) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	TArray<struct FCharacterProfile>                   BotCharacterProfiles;                                      // 0x07B8(0x0010) (BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterProfile>                   DefaultBotCharacterProfiles;                               // 0x07C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultCharacter;                                          // 0x07D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLoaded;                                                 // 0x07E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0QD7[0x7];                                     // 0x07E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauSingleton");
		return ptr;
	}



	void UpdatePreviousLaunchInventory();
	class AMordhauEquipment* SpawnEquipment(class UWorld* WorldRef, const struct FEquipmentCustomization& Customization, unsigned char Emblem, unsigned char EmblemColor1, unsigned char EmblemColor2, bool bForceInstantMeshUpdate, bool bForceMipStreaming);
	void SaveToConfig();
	void LoadQueueFinishedLoadingChunk();
	void LoadFromConfig();
	int GetVoicesNum();
	class UClass* GetVoice(int Index);
	int GetUpperChestWearablesNum();
	class UClass* GetUpperChestWearable(int Index);
	class UMordhauColor* GetTableColorObject(unsigned char Table, unsigned char ID);
	struct FLinearColor GetTableColor(unsigned char Table, unsigned char ID);
	class UMordhauColor* GetSkinColorObject(unsigned char ID);
	struct FLinearColor GetSkinColor(unsigned char ID);
	class UMordhauColor* GetMetalTintsColorObject(unsigned char ID);
	struct FLinearColor GetMetalTintsColor(unsigned char ID);
	int GetLegsWearablesNum();
	class UClass* GetLegsWearable(int Index);
	bool GetIsLoadingAssets();
	int GetHeadWearablesNum();
	class UClass* GetHeadWearable(int Index);
	class UMordhauColor* GetHairColorObject(unsigned char ID);
	struct FLinearColor GetHairColor(unsigned char ID);
	class UMordhauColor* GetEyeColorObject(unsigned char ID);
	struct FLinearColor GetEyeColor(unsigned char ID);
	int GetEquipmentNum();
	unsigned char GetEquipmentID(class UClass* EquipmentType);
	class UClass* GetEquipment(int Index);
	class UMordhauColor* GetEmblemColorObject(unsigned char ID);
	struct FLinearColor GetEmblemColor(unsigned char ID);
	void ApplyProfileTo(const struct FCharacterProfile& Profile, class AMordhauCharacter* Char, unsigned char Team, bool bAddEquipment);
};

// Class Mordhau.MordhauSpectator
// 0x0028 (FullSize[0x02D0] - InheritedSize[0x02A8])
class AMordhauSpectator : public ASpectatorPawn
{
public:
	float                                              BlockInputAfterDeathTime;                                  // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutomaticallyAsksForSpawn;                                // 0x02AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanOnlyViewOwnTeam;                                       // 0x02AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_21JG[0x2];                                     // 0x02AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CreatedTime;                                               // 0x02B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSentCameraUpdate;                                      // 0x02B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothedTurnValue;                                    // 0x02B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothingTurnVelocity;                                // 0x02BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothedLookUpValue;                                  // 0x02C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseSmoothingLookUpVelocity;                              // 0x02C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFirstTick;                                              // 0x02C8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_841W[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauSpectator");
		return ptr;
	}



	void TertiarySpectatorAction();
	void SwitchToFreeCam();
	void SecondarySpectatorAction();
	void PrimarySpectatorAction();
	bool IsWatchingOwnDeath();
};

// Class Mordhau.MordhauStats
// 0x0270 (FullSize[0x0298] - InheritedSize[0x0028])
class UMordhauStats : public UObject
{
public:
	unsigned char                                      UnknownData_81OL[0x80];                                    // 0x0028(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStat                                       GameVersion;                                               // 0x00A8(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       Blocks;                                                    // 0x00B4(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       Chambers;                                                  // 0x00C0(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       ProjectilesDeflected;                                      // 0x00CC(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       ProjectilesBlocked;                                        // 0x00D8(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       Battlecries;                                               // 0x00E4(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       Disarms;                                                   // 0x00F0(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       Kills;                                                     // 0x00FC(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       Assists;                                                   // 0x0108(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       KillsOneMatch;                                             // 0x0114(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       AssistsOneMatch;                                           // 0x0120(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       KillsOneLife;                                              // 0x012C(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       DamageTakenOneLife;                                        // 0x0138(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       HeadsDecapitated;                                          // 0x0144(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       ProjectileHeadHits;                                        // 0x0150(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       ProjectileTorsoHits;                                       // 0x015C(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       ProjectileLegHits;                                         // 0x0168(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       MeleeHeadHits;                                             // 0x0174(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       MeleeTorsoHits;                                            // 0x0180(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       MeleeLegHits;                                              // 0x018C(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       KillsOneAttack;                                            // 0x0198(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       FireKills;                                                 // 0x01A4(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       CouchedHeadKills;                                          // 0x01B0(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       LadderKills;                                               // 0x01BC(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       TrampleKills;                                              // 0x01C8(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       CasualRank;                                                // 0x01D4(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       CasualRankSamples;                                         // 0x01E0(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       DuelRank;                                                  // 0x01EC(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       DuelRankSamples;                                           // 0x01F8(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       DuelRankTimestamp;                                         // 0x0204(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       DuelRankLeaderboard;                                       // 0x0210(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       TeamfightRank;                                             // 0x021C(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       TeamfightRankSamples;                                      // 0x0228(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       TeamfightRankTimestamp;                                    // 0x0234(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStat                                       TeamfightRankLeaderboard;                                  // 0x0240(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                TheABCs;                                                   // 0x024C(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                LivedToTell;                                               // 0x0254(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                Highlander;                                                // 0x025C(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                KeepsComingOff;                                            // 0x0264(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                EagleEye;                                                  // 0x026C(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                Yoink;                                                     // 0x0274(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                JusticeFromGrave;                                          // 0x027C(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                NotSparta;                                                 // 0x0284(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAchievement                                BurningMan;                                                // 0x028C(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NHWK[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauStats");
		return ptr;
	}



	void UnlockAchievement(Mordhau_ECallResult* CallResult, const struct FAchievement& Achievement);
	void StoreStats(Mordhau_ECallResult* CallResult);
	void StorePlayerStats(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId);
	void SetValue(Mordhau_ECallResult* CallResult, const struct FStat& Stat, int Value);
	void SetPlayerValue(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, const struct FStat& Stat, int Value);
	void ResetAllStats(Mordhau_ECallResult* CallResult, bool bAchievementsToo);
	void RequestStats(Mordhau_ECallResult* CallResult);
	void RequestPlayerStats(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId);
	void LockAchievement(Mordhau_ECallResult* CallResult, const struct FAchievement& Achievement);
	void IsAchievementUnlocked(Mordhau_ECallResult* CallResult, const struct FAchievement& Achievement, bool* bIsUnlocked);
	void IncrementValueChecked(class UWorld* World, const struct FStat& Stat);
	bool GetValueByName(const struct FString& StatName, int* OutValue);
	void GetValue(Mordhau_ECallResult* CallResult, const struct FStat& Stat, int* Value);
	void GetPlayerValue(Mordhau_ECallResult* CallResult, const struct FString& PlayFabId, const struct FStat& Stat, int* Value);
	bool AreStatsAvailable(const struct FString& PlayFabId);
};

// Class Mordhau.MordhauTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMordhauTypes : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauTypes");
		return ptr;
	}



};

// Class Mordhau.MordhauUserWidget
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UMordhauUserWidget : public UUserWidget
{
public:
	class UMordhauWidgetComponent*                     ParentWidgetComponent;                                     // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauUserWidget");
		return ptr;
	}



};

// Class Mordhau.MordhauUtilityLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMordhauUtilityLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauUtilityLibrary");
		return ptr;
	}



	void STATIC_VSmoothDamp(struct FVector* Current, const struct FVector& Target, struct FVector* CurrentVelocity, float SmoothTime, float DeltaTime, float MaxSpeed);
	bool STATIC_ValidateCharacterProfile(const struct FCharacterProfile& Profile, bool bValidateInventory);
	struct FString STATIC_UploadChat(const struct FString& ChatString);
	void STATIC_UnpossessCharacterAndHandleSpectating(class AController* Controller);
	bool STATIC_UnmountPak(const struct FString& PakPath);
	bool STATIC_UncompressData(const struct FString& InData, TArray<unsigned char>* OutData);
	bool STATIC_TryExecuteHeavydutyOperation(class UWorld* WorldObject, bool bIsForced);
	void STATIC_TermAllChildBodiesOf(class USkeletalMeshComponent* USMC, const struct FName& BoneName);
	struct FCharacterProfile STATIC_StripProfile(const struct FCharacterProfile& InProfile, bool bStripEquipment, bool bStripPerks, bool bStripNonTier0Armor);
	class UDecalComponent* STATIC_SpawnBloodDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan);
	TArray<struct FString> STATIC_SortStringArray(TArray<struct FString> Array, bool bSortAscending);
	TArray<struct FString> STATIC_SortQueueNamesByBestMatch(TMap<struct FString, struct FPlayFabMatchmakingMatch> Matches);
	TArray<class AMordhauPlayerState*> STATIC_SortPlayers(TArray<class AMordhauPlayerState*> Array);
	TArray<int> STATIC_SortIntArray(TArray<int> Array, bool bSortAscending);
	TArray<struct FServerSearchResult> STATIC_SortForServerBrowserByServerName(TArray<struct FServerSearchResult> Array, bool bSortAscending);
	TArray<struct FServerSearchResult> STATIC_SortForServerBrowserByPing(TArray<struct FServerSearchResult> Array, bool bSortAscending);
	TArray<struct FServerSearchResult> STATIC_SortForServerBrowserByMapName(TArray<struct FServerSearchResult> Array, bool bSortAscending);
	TArray<struct FServerSearchResult> STATIC_SortForServerBrowserByGameModeName(TArray<struct FServerSearchResult> Array, bool bSortAscending);
	TArray<struct FServerSearchResult> STATIC_SortForServerBrowserByCount(TArray<struct FServerSearchResult> Array, bool bSortAscending);
	TArray<struct FPlayFabGameServer> STATIC_SortForMatchmakingByLocationPreference(TArray<struct FPlayFabGameServer> Servers, TArray<MordhauOnlineSubsystem_EServerLocation> LocationPreference);
	TArray<struct FServerSearchResult> STATIC_SortForMatchmaking(TArray<struct FServerSearchResult> Array);
	TArray<class UObject*> STATIC_SortArrayByProperty(TArray<class UObject*> Array, const struct FName& PropertyName, bool bAscending, bool* bWasTypeValid);
	TArray<class UObject*> STATIC_SortArrayByFunction(TArray<class UObject*> Array, const struct FScriptDelegate& FuncDel);
	TArray<class UObject*> STATIC_SortAndFilterArrayByFunction(TArray<class UObject*> Array, const struct FScriptDelegate& FuncDel, class UClass* Class);
	float STATIC_Snap180AngleToSteps(float Angle180, float Step);
	bool STATIC_SLessThan(const struct FString& StringA, const struct FString& StringB);
	bool STATIC_SGreaterThan(const struct FString& StringA, const struct FString& StringB);
	void STATIC_SetVisibilityId(class UPrimitiveComponent* Comp, int NewId);
	void STATIC_SetSoundMixVolume(Mordhau_ESoundMix SoundMix, float Volume);
	void STATIC_SetPerBoneMotionBlur(class USkeletalMeshComponent* Component, bool bNewValue);
	void STATIC_SetPawnFromRep(class AController* Contr, class APawn* NewPawn);
	void STATIC_SetNeverDistanceCull(class UPrimitiveComponent* Comp, bool bNewValue);
	void STATIC_SetNavAreaClass(class UShapeComponent* ShapeComponent, class UClass* AreaClass);
	void STATIC_SetMousePosition(class APlayerController* Controller, float LocationX, float LocationY);
	void STATIC_SetLODActorDrawDistance(class ALODActor* Actor, float NewDrawDistance);
	void STATIC_SetLocalSpaceKinematics(class USkeletalMeshComponent* Mesh, bool bNewValue);
	void STATIC_SetForceMipStreaming(class USkeletalMeshComponent* SMC, bool bValue);
	void STATIC_SetDecalFadeScreenSize(class UDecalComponent* Decal, float NewFadeScreenSize);
	void STATIC_SetCustomConfigVar_Vector2D(const struct FString& SectionName, const struct FString& VariableName, const struct FVector2D& Value);
	void STATIC_SetCustomConfigVar_Vector(const struct FString& SectionName, const struct FString& VariableName, const struct FVector& Value);
	void STATIC_SetCustomConfigVar_String(const struct FString& SectionName, const struct FString& VariableName, const struct FString& Value);
	void STATIC_SetCustomConfigVar_Rotator(const struct FString& SectionName, const struct FString& VariableName, const struct FRotator& Value);
	void STATIC_SetCustomConfigVar_Int(const struct FString& SectionName, const struct FString& VariableName, int Value);
	void STATIC_SetCustomConfigVar_Float(const struct FString& SectionName, const struct FString& VariableName, float Value);
	void STATIC_SetCustomConfigVar_Color(const struct FString& SectionName, const struct FString& VariableName, const struct FLinearColor& Value);
	void STATIC_SetCustomConfigVar_Bool(const struct FString& SectionName, const struct FString& VariableName, bool Value);
	void STATIC_SetCustomConfigVar_Array(const struct FString& SectionName, const struct FString& VariableName, TArray<struct FString> Value);
	void STATIC_SetCanEverAffectNavigation(class UActorComponent* ActorComponent, bool bRelevant);
	void STATIC_SetCachedMaxDistanceAndMarkDirty(class UPrimitiveComponent* Comp, float NewMaxDistance);
	bool STATIC_SendMessageToRconClients(const struct FString& Message, int ClientId, bool bToAll, Mordhau_EBroadcastTypes TypeOfBroadcast);
	void STATIC_SendClientAdjustment(class UCharacterMovementComponent* CMC);
	int STATIC_SCompare(const struct FString& StringA, const struct FString& StringB);
	bool STATIC_SaveStringToFile(const struct FString& Filename, const struct FString& String);
	bool STATIC_SaveStringArrayToFile(const struct FString& Filename, TArray<struct FString> StringArray);
	bool STATIC_SaveArrayToFile(const struct FString& Filename, TArray<unsigned char> ByteArray);
	struct FString STATIC_SanitizePlayerName(const struct FString& InName, const struct FString& InFallback);
	void STATIC_ResetServerPredictionData(class UCharacterMovementComponent* CMC);
	void STATIC_ResetController(class AController* Controller);
	void STATIC_ResetClientPredictionData(class UCharacterMovementComponent* CMC);
	void STATIC_ReserveCharacterRagdoll(class AAdvancedCharacter* Character);
	int STATIC_RandomRangeExclude(int Min, int Max, int Exclude);
	bool STATIC_ProjectWorldToScreenBidirectional(class APlayerController* Player, const struct FVector& WorldPosition, struct FVector2D* ScreenPosition, bool* bTargetBehindCamera, bool bPlayerViewportRelative);
	void STATIC_PrintToConsoleAndLog(const struct FString& String, bool bSkipRepeatedStrings);
	bool STATIC_PlaneTrace(class UObject* WorldContextObject, const struct FVector& Left, const struct FVector& Right, const struct FVector& Forward, const struct FVector& Back, const struct FVector& TraceAmount, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, bool bConnectLeftRight, bool bConnectForwardBack, const struct FVector& ConnectOffset, struct FHitResult* LeftHit, struct FHitResult* RightHit, struct FHitResult* ForwardHit, struct FHitResult* BackHit, struct FVector* OutRight, struct FVector* OutForward, bool bIgnoreSelf);
	void STATIC_PerformCharacterRenderingStressTest(class UObject* WorldContextObject, class UClass* Type, int Amount, float Spread, float DistanceFromCamera);
	void STATIC_OpenURL(const struct FString& URL);
	bool STATIC_NotEqual_PlayFabPlayer(const struct FPlayFabPlayer& A, const struct FPlayFabPlayer& B);
	bool STATIC_MountPak(const struct FString& PakPath);
	bool STATIC_MordhauApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, float BaseStructureDamage, float MinimumStructureDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, TArray<class AActor*> IgnoreActors, float BaseKnockback, float MinimumKnockback, float RagdollFallRadius, class AActor* DamageCauser, class AController* InstigatedByController, TEnumAsByte<Engine_ECollisionChannel> DamagePreventionChannel, bool bIgnoreFriendly);
	void STATIC_MarkRenderStateDirty(class UMeshComponent* MeshComp);
	struct FCharacterProfile STATIC_MakeEmptyProfile(class UClass* CharacterClass, bool bRandomizeVoice);
	bool STATIC_LoadStringFromFile(const struct FString& Filename, struct FString* LoadedString);
	bool STATIC_LoadStringArrayFromFile(const struct FString& Filename, TArray<struct FString>* LoadedStringArray);
	bool STATIC_LoadReportImageByteArray(const struct FString& ImageName, TArray<unsigned char>* LoadedArray);
	class UObject* STATIC_LoadAsset(const struct FSoftObjectPath& SoftObjectPath);
	bool STATIC_LoadArrayFromFile(const struct FString& Filename, TArray<unsigned char>* LoadedArray);
	bool STATIC_LineTraceMultiForObjectsReturnFace(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf);
	struct FPOV STATIC_LerpPOV(const struct FPOV& A, const struct FPOV& B, float Alpha);
	bool STATIC_IsValidIPAddress(const struct FString& IPAddress);
	bool STATIC_IsValid_PlayFabPlayer(const struct FPlayFabPlayer& Player);
	bool STATIC_IsStandalone();
	bool STATIC_IsServer();
	bool STATIC_IsReflexAvailable();
	bool STATIC_IsPublicIPAddress(const struct FString& IPAddress);
	bool STATIC_IsPrivateIPAddress(const struct FString& IPAddress);
	bool STATIC_IsPlayInEditor();
	bool STATIC_IsPartyMember(class AMordhauPlayerState* Player);
	bool STATIC_IsOfficialServer();
	bool STATIC_IsListenServer();
	bool STATIC_IsFriendlyToLocalPlayer(class UWorld* WorldReference, class AActor* OtherActor);
	bool STATIC_IsFriend(class AMordhauPlayerState* Player);
	bool STATIC_IsEditor();
	bool STATIC_IsDLCInstalled(Mordhau_EDownloadableContent DLC);
	bool STATIC_IsDevelopmentEnvironment();
	bool STATIC_IsDevelopmentBuild();
	bool STATIC_IsDevelopmentBranch();
	bool STATIC_IsDemoPlayback(class UWorld* World);
	bool STATIC_IsDedicatedServer();
	bool STATIC_IsConsolePlatform();
	bool STATIC_IsCommunityServer();
	bool STATIC_IsClient();
	bool STATIC_HasPath(class AAIController* Controller);
	bool STATIC_HasBeenReallyRecentlyRendered(class UMeshComponent* MeshComponent);
	bool STATIC_HasActorBegunPlay(class AActor* Actor);
	struct FBox STATIC_GrowBoxToIncludePoint(const struct FBox& Box, const struct FVector& Vector);
	int STATIC_GetXPFromRank(int Rank);
	class UWorld* STATIC_GetWorldOf(class UObject* Object);
	TArray<struct FText> STATIC_GetWearableNames(const struct FCharacterGearCustomization& CharacterGearCustomization, Mordhau_EWearableSlot Slot);
	TArray<class UClass*> STATIC_GetWearableClasses(const struct FCharacterGearCustomization& CharacterGearCustomization, Mordhau_EWearableSlot Slot);
	class UClass* STATIC_GetWearableClass(const struct FCharacterGearCustomization& CharacterGearCustomization, Mordhau_EWearableSlot Slot);
	int STATIC_GetVisibilityId(class UPrimitiveComponent* Comp);
	class AMordhauCharacter* STATIC_GetViewTargetCharacter(class UObject* WorldContextObject, bool bOnlyLiving);
	struct FString STATIC_GetVersionString();
	struct FString STATIC_GetVersionName();
	float STATIC_GetTotalDemoTime(class UWorld* World);
	float STATIC_GetSyncGroupPositionBetweenMarkers(class UAnimInstance* AnimInstance, const struct FName& SyncGroup);
	bool STATIC_GetSupportedScreenResolutions(TArray<struct FString>* Resolutions);
	void STATIC_GetSoundMixInfo(const struct FString& Name, struct FSoundMixInfo* SoundMixInfo);
	struct FString STATIC_GetServerConnectString(const struct FPlayFabServerDetails& ServerDetails, const struct FString& PortName);
	struct FName STATIC_GetSculptableBoneAtLine(const struct FVector& LineStart, const struct FVector& LineEnd, float SearchRadius, class USkeletalMeshComponent* MeshComponent, class AMordhauCharacter* Character, int Level);
	TEnumAsByte<Engine_ENetRole> STATIC_GetRole(class AActor* Actor);
	int STATIC_GetReleaseVersion();
	struct FString STATIC_GetRegionName(MordhauOnlineSubsystem_EServerRegion Region);
	struct FText STATIC_GetRegionDisplayName(MordhauOnlineSubsystem_EServerRegion Region);
	MordhauOnlineSubsystem_EServerRegion STATIC_GetRegion(const struct FString& RegionName);
	int STATIC_GetRankFromXP(int XP);
	class AMordhauEquipment* STATIC_GetRandomWeapon(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UUpperChestWearable* STATIC_GetRandomUpperChestWearable(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	void STATIC_GetRandomSkin(int* ID, struct FEquipmentSkinEntry* Skin, class AMordhauEquipment* Equipment, Mordhau_EItemRarity MaxRarity);
	class UMordhauWearable* STATIC_GetRandomShouldersWearable(int* ID, class UUpperChestWearable* UpperChestWearable, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class AMordhauEquipment* STATIC_GetRandomRangedWeapon(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class AMordhauEquipment* STATIC_GetRandomMeleeWeapon(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UMordhauWearable* STATIC_GetRandomLowerChestWearable(int* ID, class UUpperChestWearable* UpperChestWearable, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class ULegsWearable* STATIC_GetRandomLegsWearable(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UHeadWearable* STATIC_GetRandomHeadWearable(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UMordhauWearable* STATIC_GetRandomHandsWearable(int* ID, class UArmsWearable* ArmsWearable, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UMordhauWearable* STATIC_GetRandomFeetWearable(int* ID, class ULegsWearable* LegsWearable, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	struct FVector STATIC_GetRandomFaceCustomizationVector(float RandomExponent);
	class AMordhauEquipment* STATIC_GetRandomEquipment(int* ID, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UMordhauWearable* STATIC_GetRandomCoifWearable(int* ID, class UHeadWearable* HeadWearable, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	class UArmsWearable* STATIC_GetRandomArmsWearable(int* ID, class UUpperChestWearable* UpperChestWearable, const struct FSkillsCustomization& SkillsCustomization, Mordhau_EItemRarity MaxRarity);
	struct FDateTime STATIC_GetPlayFabTimestamp();
	struct FPlayFabPlayer STATIC_GetPlayFabPlayer();
	struct FString STATIC_GetPlayFabId();
	struct FString STATIC_GetPlayFabEntityID();
	class UPlayFabAPI* STATIC_GetPlayFabAPI();
	TArray<int> STATIC_GetPlayerCountFromGameModeMetadataClass(class UClass* MetadataClass);
	class UTexture2D* STATIC_GetPlayerAvatar(const struct FPlayFabPlayer& Player);
	struct FString STATIC_GetPlatformName(MordhauOnlineSubsystem_EPlatform Platform);
	MordhauOnlineSubsystem_EPlatform STATIC_GetPlatformByName(const struct FString& PlatformName);
	MordhauOnlineSubsystem_EPlatform STATIC_GetPlatform();
	float STATIC_GetPing(class UObject* WorldContextObject, bool bUseMedian);
	struct FTransform STATIC_GetPhysicsBodyWorldTransform(class USkeletalMeshComponent* MeshComponent, const struct FName& BoneName);
	struct FBox STATIC_GetPhysicsBodyBounds(class USkeletalMeshComponent* MeshComponent, const struct FName& BoneName);
	int STATIC_GetPerksCost(const struct FCharacterProfile& Profile);
	TArray<class UPerk*> STATIC_GetPerks(const struct FCharacterProfile& Profile);
	int STATIC_GetPerforceRevision();
	int STATIC_GetPacketsLost(class UObject* WorldContextObject);
	struct FString STATIC_GetOSVersion();
	bool STATIC_GetNotifyServerReceivedClientData(class UCharacterMovementComponent* CMC);
	float STATIC_GetNormalizedTime(float Start, float End, float Current);
	struct FVector2D STATIC_GetMousePosition(class APlayerController* Controller);
	class UMordhauStats* STATIC_GetMordhauStats();
	class UMordhauSingleton* STATIC_GetMordhauSingleton();
	class UMordhauInventory* STATIC_GetMordhauInventory();
	class UMordhauInput* STATIC_GetMordhauInput();
	class AMordhauHUD* STATIC_GetMordhauHUD(class UObject* WorldContextObject);
	class UMordhauGameUserSettings* STATIC_GetMordhauGameUserSettings();
	class AMordhauGameSession* STATIC_GetMordhauGameSession(class UObject* WorldContextObject);
	int STATIC_GetMaxIndexWithDraw(TArray<int> inArray, bool* bFoundDraw);
	struct FString STATIC_GetMapName(class UObject* WorldContextObject);
	struct FMapInfo STATIC_GetMapInfo(class UObject* WorldContextObject, const struct FString& MapPath);
	class UPrimitiveComponent* STATIC_GetLODParentPrimitive(class UPrimitiveComponent* Comp);
	struct FString STATIC_GetLocationName(MordhauOnlineSubsystem_EServerLocation Location);
	struct FText STATIC_GetLocationDisplayName(MordhauOnlineSubsystem_EServerLocation Location);
	MordhauOnlineSubsystem_EServerLocation STATIC_GetLocation(const struct FString& LocationName);
	int STATIC_GetLocalShortID(class AMordhauPlayerState* PlayerState);
	uint32_t STATIC_GetLocalNetworkVersion();
	float STATIC_GetLastReceiveTime(class UObject* WorldContextObject);
	bool STATIC_GetIsUsingController();
	bool STATIC_GetIsPeasant(const struct FCharacterProfile& Profile);
	MordhauOnlineSubsystem_EIngameEvent STATIC_GetIngameEvent(class UObject* WorldContextObject);
	struct FBoxSphereBounds STATIC_GetImportedBounds(class USkeletalMeshComponent* SkeletalMeshComponent);
	int STATIC_GetGameServerGamePort();
	struct FString STATIC_GetGamePortName();
	int STATIC_GetFaceIndex(const struct FHitResult& Hit);
	struct FText STATIC_getErrorText(const struct FString& ErrorString);
	int STATIC_GetEnumValue(const struct FString& EnumName, const struct FString& EnumKey);
	struct FString STATIC_GetEnumKey(const struct FString& EnumName, int EnumValue);
	struct FText STATIC_GetDurationText(int Seconds);
	class UMordhauWearable* STATIC_GetDefaultWearable(class UClass* FromClass);
	void STATIC_GetDefaultObjectCopy(class UClass* FromClass, class UObject** ObjectCopy);
	class UObject* STATIC_GetDefaultObject(class UClass* FromClass);
	class UBadge* STATIC_GetDefaultBadge(class UClass* BadgeClass);
	void STATIC_GetDefaultActorCopy(class UClass* FromClass, class AActor** ActorCopy);
	class AActor* STATIC_GetDefaultActor(class UClass* FromClass);
	struct FDateTime STATIC_GetDateTimeFromUnixTimestamp(int Timestamp);
	struct FVector2D STATIC_GetCustomConfigVar_Vector2D(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	struct FVector STATIC_GetCustomConfigVar_Vector(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	struct FString STATIC_GetCustomConfigVar_String(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	struct FRotator STATIC_GetCustomConfigVar_Rotator(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	int STATIC_GetCustomConfigVar_Int(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	float STATIC_GetCustomConfigVar_Float(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	struct FLinearColor STATIC_GetCustomConfigVar_Color(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	bool STATIC_GetCustomConfigVar_Bool(const struct FString& SectionName, const struct FString& VariableName, bool* IsValid);
	TArray<struct FString> STATIC_GetCustomConfigVar_Array(const struct FString& SectionName, const struct FString& VariableName, int* ArraySize);
	struct FString STATIC_GetCurrentPlatformName();
	int STATIC_GetCurrentFrameBP(class UObject* WorldContextObject);
	int STATIC_GetCurrentFrame(class UWorld* World);
	float STATIC_GetCurrentDemoTime(class UWorld* World);
	struct FString STATIC_GetConsoleVariableString(const struct FString& VariableName);
	int STATIC_GetConsoleVariableInt(const struct FString& VariableName);
	float STATIC_GetConsoleVariableFloat(const struct FString& VariableName);
	struct FVector STATIC_GetComponentsBoundingBoxInActorSpace(class AActor* Actor);
	struct FVector STATIC_GetCentroid(TArray<struct FVector> Points);
	bool STATIC_GetCanEverAffectNavigation(class USceneComponent* SceneComp);
	int STATIC_GetBuildVersion();
	struct FVector STATIC_GetBoxCenter(const struct FBox& Box);
	struct FBox STATIC_GetBoundingBoxOfBoneInfluence(class USkeletalMeshComponent* MeshComponent, TArray<struct FName> Bones, float WeightThreshold);
	struct FString STATIC_GetBeaconPortName();
	struct FString STATIC_GetBaseFilename(const struct FString& InPath, bool bRemovePath);
	struct FString STATIC_GetBannedPerkNames(const struct FCharacterProfile& Profile, class AGameStateBase* GameState);
	struct FString STATIC_GetBannedEquipmentNames(const struct FCharacterProfile& Profile, class AGameStateBase* GameState);
	struct FVector STATIC_GetAxisAngleFromRotator(const struct FRotator& Rot, float* OutAngle);
	class AActor* STATIC_GetAttachParentActor(class AActor* Actor);
	class UArchetype* STATIC_GetArchetypeObject(const struct FCharacterProfile& Profile);
	TArray<class UClass*> STATIC_GetAllWearableClassesForSlotExhaustive(Mordhau_EWearableSlot Slot);
	void STATIC_FSmoothDamp(float* Current, float Target, float* CurrentVelocity, float SmoothTime, float DeltaTime, float MaxSpeed);
	struct FText STATIC_FormatText(const struct FText& Text);
	bool STATIC_ForceValidCharacterProfile(const struct FCharacterProfile& Profile, struct FCharacterProfile* ForceValidatedProfile, bool bValidateInventory);
	void STATIC_ForceReplicationUpdate(class UCharacterMovementComponent* CMC);
	void STATIC_FlushPlayerControllerPressedKeys(class APlayerController* Controller);
	void STATIC_FlashWindow();
	float STATIC_FInterpToSeparate(float Current, float Target, float DeltaTime, float IncreaseSpeed, float DecreaseSpeed);
	float STATIC_FInterpConstantToSeparate(float Current, float Target, float DeltaTime, float IncreaseSpeed, float DecreaseSpeed);
	bool STATIC_FindTeleportSpot(class AActor* Actor, const struct FVector& InLocation, const struct FRotator& InRotation, struct FVector* OutLocation);
	struct FPlayFabPlayer STATIC_FindPlayFabPlayer(const struct FString& PlayerNameOrPlayFabID);
	class AMordhauPlayerState* STATIC_FindPlayerStateWithoutLocalID(const struct FString& PlayerNameOrPlayFabID);
	class AMordhauPlayerState* STATIC_FindPlayerState(const struct FString& PlayerNameOrPlayFabID);
	bool STATIC_FindCircleIntersectionPoints(const struct FVector2D& CenterA, float RadiusA, const struct FVector2D& CenterB, float RadiusB, struct FVector2D* PointA, struct FVector2D* PointB);
	class UObject* STATIC_FindByFunctionTyped(TArray<class UObject*> Array, const struct FScriptDelegate& FuncDel, class UClass* Class);
	class UObject* STATIC_FindByFunction(TArray<class UObject*> Array, const struct FScriptDelegate& FuncDel);
	struct FRotator STATIC_FindBetween(const struct FVector& A, const struct FVector& B);
	TArray<class UObject*> STATIC_FilterArrayByFunction(TArray<class UObject*> Array, const struct FScriptDelegate& FuncDel, class UClass* Class);
	void STATIC_FakeTickComponent(class USceneComponent* Component, float DeltaTime);
	bool STATIC_Equal_PlayFabPlayer(const struct FPlayFabPlayer& A, const struct FPlayFabPlayer& B);
	struct FString STATIC_EncodeByteArrayToBase64String(TArray<unsigned char> Array);
	void STATIC_DrawText(class UCanvas* Canvas, class UFont* Font, int Size, const struct FString& Text, const struct FVector2D& Position, const struct FLinearColor& TextColor, float Kerning, const struct FLinearColor& ShadowColor, const struct FVector2D& ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, const struct FLinearColor& OutlineColor);
	bool STATIC_DoesProfileContainBannedPerks(const struct FCharacterProfile& Profile, class AGameStateBase* GameState);
	bool STATIC_DoesProfileContainBannedEquipment(const struct FCharacterProfile& Profile, class AGameStateBase* GameState);
	void STATIC_CopyToClipboard(const struct FString& MessageToCopy);
	void STATIC_ConvertStringSteamIDsToPlayFabIDs(TArray<struct FString> InSteamIDArray, const struct FString& Filename, const struct FScriptDelegate& Delegate);
	struct FString STATIC_ConvertRelativePathToFull(const struct FString& Path);
	void STATIC_ConvertColorArrayToJPEG(int InSizeX, int InSizeY, TArray<struct FColor> InImageData, TArray<unsigned char>* CompressedData, bool* bSuccess, int ImageQuality);
	struct FString STATIC_Conv_SoftObjectPathToString(const struct FSoftObjectPath& SoftObjectPath);
	bool STATIC_ConsumeBudget(class AAdvancedCharacter* Character, Mordhau_EBudgetType BudgetType, bool bSkipInvisible, float Duration, float DistanceCutoff, bool bForce);
	int STATIC_ComputePointsLeft(const struct FCharacterProfile& Profile);
	bool STATIC_CompressData(TArray<unsigned char> InData, struct FString* OutData);
	bool STATIC_CompareGearCustomization(const struct FCharacterGearCustomization& First, const struct FCharacterGearCustomization& Second);
	bool STATIC_CompareFaceCustomization(const struct FFaceCustomization& First, const struct FFaceCustomization& Second);
	bool STATIC_CompareEquipmentCustomization(const struct FEquipmentCustomization& First, const struct FEquipmentCustomization& Second);
	bool STATIC_CompareAppearanceCustomization(const struct FAppearanceCustomization& First, const struct FAppearanceCustomization& Second);
	struct FVector STATIC_ClosestPointOnLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& Point);
	struct FString STATIC_Capitalize(const struct FString& String);
	bool STATIC_CallFunctionByNameWithArgs(const struct FString& Str, class UObject* Executor);
	int STATIC_CalculateGCD(int ValueA, int ValueB);
	float STATIC_CalculateAngle2D(const struct FVector& Direction, float Yaw);
	void STATIC_AwardTeamfightMMR(bool bIsWin, const struct FString& PlayFabId, int OtherTeamMMR, int* NewMMR);
	void STATIC_AwardDuelMMR(const struct FString& WinnerID, const struct FString& LoserID, int* NewWinnerMMR, int* NewLoserMMR);
	bool STATIC_AreProfilesEqual(const struct FCharacterProfile& First, const struct FCharacterProfile& Second);
	bool STATIC_AreActorsFromSameLevel(class AActor* ActorA, class AActor* ActorB);
	float STATIC_AngularDistance(const struct FRotator& A, const struct FRotator& B);
	float STATIC_ActorGetDistanceToCollision(class AActor* Actor, const struct FVector& Point, struct FVector* PointOnCollision, TEnumAsByte<Engine_ECollisionChannel> TraceChannel);
};

// Class Mordhau.MordhauWheeledVehicle
// 0x0030 (FullSize[0x0BA0] - InheritedSize[0x0B70])
class AMordhauWheeledVehicle : public AMordhauCompoundVehicle
{
public:
	struct FVector2D                                   PreviousRotation;                                          // 0x0B68(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RotationVelocity;                                          // 0x0B70(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RotationVelocityInterpSpeed;                               // 0x0B78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RotationVelocityMax;                                       // 0x0B80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LeftHandIKPushTarget;                                      // 0x0B88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RightHandIKPushTarget;                                     // 0x0B90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   MoveSoundCue;                                              // 0x0B98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauWheeledVehicle");
		return ptr;
	}



};

// Class Mordhau.MordhauWidgetComponent
// 0x00B4 (FullSize[0x05F0] - InheritedSize[0x053C])
class UMordhauWidgetComponent : public UWidgetComponent
{
public:
	float                                              SortedVisibilityQueueBiasWeight;                           // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldStickToScreen;                                      // 0x0540(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V1BB[0x3];                                     // 0x0541(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   StickToScreenEdgeOffset;                                   // 0x0544(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StickToScreenForwardProject;                               // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VisibilityWeightInterpolationSpeed;                        // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LUA8[0x8];                                     // 0x0554(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VisibilityWeight;                                          // 0x055C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSlowHideOverride;                                       // 0x0560(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ENS[0x3];                                     // 0x0561(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   WidgetCullDistance;                                        // 0x0564(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldSpaceZOffset;                                         // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WZ8D[0xC];                                     // 0x0570(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   WidgetCullAngle;                                           // 0x057C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WidgetCullAngleZPositionOffset;                            // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceToCameraZPositionOffset;                           // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceToCamera;                                          // 0x058C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     TextParameter;                                             // 0x0590(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     DistanceToCameraString;                                    // 0x05A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R69G[0x4];                                     // 0x05B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bWantsDistanceToCameraStringUpdated;                       // 0x05B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PSIB[0x3];                                     // 0x05B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AngleToCamera;                                             // 0x05B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                OverrideVisible;                                           // 0x05BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V64X[0x4];                                     // 0x05C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APlayerState>                 PlayerStateAlwaysSee;                                      // 0x05C4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInMapView;                                            // 0x05CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInMainMenu;                                           // 0x05CD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesViewTargetTeamRestriction;                            // 0x05CE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YC7H[0x1];                                     // 0x05CF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ViewTargetTeamRestriction;                                 // 0x05D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FrameSkip;                                                 // 0x05D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_05S3[0x8];                                     // 0x05D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauCameraManager*                       CachedPlayerCameraManager;                                 // 0x05E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMordhauGameState*                           CachedGameState;                                           // 0x05E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MordhauWidgetComponent");
		return ptr;
	}



	void SetPlayerStateAlwaysSee(class APlayerState* PlayerState);
};

// Class Mordhau.MotionSystemComponent
// 0x00B8 (FullSize[0x0168] - InheritedSize[0x00B0])
class UMotionSystemComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_0KRK[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MotionFOVOffsetZeroSpeed;                                  // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNetMotion                                  NetMotion;                                                 // 0x00C4(0x0006) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_27HW[0x6];                                     // 0x00CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FNetMotion>                          UnconfirmedMotionsBacklog;                                 // 0x00D0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2YC[0x2];                                     // 0x00E0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FNetMotion                                  LocallyPredictedNetMotion;                                 // 0x00E2(0x0006) (NoDestructor, NativeAccessSpecifierPublic)
	class UMordhauMotion*                              Motion;                                                    // 0x00E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParryMotion*                                LastParryMotion;                                           // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFlinchMotion*                               LastFlinchMotion;                                          // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeintedMotion*                              LastFeintedMotion;                                         // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAttackMotion*                               LastAttackMotion;                                          // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEmoteMotion*                                LastEmoteMotion;                                           // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<Mordhau_EAttackMove, class UClass*>           AttackMotions;                                             // 0x0118(0x0050) (Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MotionSystemComponent");
		return ptr;
	}



	void OnServerAssignNetMotion(const struct FNetMotion& NewNetMotion, unsigned char LastAuthObserved);
	void OnPreBeginPlay(class AMordhauCharacter* Character);
	void OnLODTick(float DeltaTime);
	void OnLateTick(float DeltaTime);
	void OnClientSetNetMotion(const struct FNetMotion& NewMotion, float ServerStartTime);
};

// Class Mordhau.MoveSoundComponent
// 0x0060 (FullSize[0x0830] - InheritedSize[0x07D0])
class UMoveSoundComponent : public UAudioComponent
{
public:
	bool                                               bShouldPlayMoveSound;                                      // 0x07D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldPlayTurnSound;                                      // 0x07D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R1EU[0x2];                                     // 0x07D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MoveSoundAttachSocket;                                     // 0x07D4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveSoundFadeOut;                                          // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   MinRotationVelocityToPlayMoveSound;                        // 0x07E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MinTranslationVelocityToPlayMoveSound;                     // 0x07E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RotationVelocityInterpSpeed;                               // 0x07F4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RotationVelocityMax;                                       // 0x07FC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FFHY[0x4];                                     // 0x0804(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   MoveSoundCue;                                              // 0x0808(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastMoveSound;                                             // 0x0810(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   PreviousRotation;                                          // 0x0818(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   RotationVelocity;                                          // 0x0820(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_67AZ[0x8];                                     // 0x0828(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MoveSoundComponent");
		return ptr;
	}



	void OnLODTick(float DeltaTime);
	void OnCharacterDied(class AAdvancedCharacter* Character);
};

// Class Mordhau.MuteListCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UMuteListCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.MuteListCommand");
		return ptr;
	}



};

// Class Mordhau.OneDimensionalMovementComponent
// 0x0048 (FullSize[0x07A0] - InheritedSize[0x0758])
class UOneDimensionalMovementComponent : public UAdvancedCharacterMovement
{
public:
	unsigned char                                      UnknownData_7KJP[0x4];                                     // 0x0758(0x0004) Fix Super Size
	int                                                TargetStep;                                                // 0x075C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StepSize;                                                  // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalSteps;                                                // 0x0764(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasInitializedLine;                                       // 0x0768(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OSA2[0x3];                                     // 0x0769(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentStep;                                               // 0x076C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LineStart;                                                 // 0x0770(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LineEnd;                                                   // 0x077C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MovementDirection;                                         // 0x0788(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8YVH[0xC];                                     // 0x0794(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.OneDimensionalMovementComponent");
		return ptr;
	}



	void SetMovementLine(const struct FVector& NewLineStart, const struct FVector& NewLineEnd);
};

// Class Mordhau.ParryMotion
// 0x04C8 (FullSize[0x0568] - InheritedSize[0x00A0])
class UParryMotion : public UMordhauMotion
{
public:
	unsigned char                                      UnknownData_ZNWC[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UMordhauMotion*, float>                 BlockedAttacks;                                            // 0x00A8(0x0050) (NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauCharacter>            LastBlockedCharacter;                                      // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnglingSpineSpaceAdditive                  AngleAdditive;                                             // 0x0100(0x0318) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimMontage                     Animation;                                                 // 0x0418(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimMontage                     AltAnimation;                                              // 0x0428(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBlendSpaceBase                  AnimationAdditive;                                         // 0x0438(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBlendSpaceBase                  ParriedAdditive;                                           // 0x0448(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPerspectiveBlendSpaceBase                  AltParriedAdditive;                                        // 0x0458(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bLegacyAnimationPlayingMethod;                             // 0x0468(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDetectedAnyNonFriendlyAttack;                             // 0x0469(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsShieldWall;                                             // 0x046A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsMissParry;                                              // 0x046B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChamberFTPExtraStaminaDrain;                               // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GiveMissParryIfFlinchedBeforeDuration;                     // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MissParryRecoveryTime;                                     // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallRaiseTime;                                       // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallRaiseTimeAnimOffset;                             // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxParryAngle;                                             // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxParryWeaponAngle;                                       // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldBlockMemoryDuration;                                   // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimedBlockMemoryDuration;                                  // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryInFlinchDurationMax;                                  // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EasyParryDuration;                                         // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                EasyParryStaminaCost;                                      // 0x0498(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldRiposteWindowExtra;                                    // 0x049C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NonHeldParryExtensionAndRiposteWindowExtra;                // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       SuccessfulParryRecoveryMovementRestriction;                // 0x04A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EMovementRestriction                       FailedParryRecoveryMovementRestriction;                    // 0x04A5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OUJD[0x2];                                     // 0x04A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMeleeWeaponAnimationProfile*                MWAP;                                                      // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SYVL[0x4];                                     // 0x04B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RiposteWindowBase;                                         // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryMissFadeOut;                                          // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryMissFadeOut1P;                                        // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ParryMissLocalSoundCue;                                    // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryFailPlayRate;                                         // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryFailFadeOut;                                          // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryFailPlayRate1P;                                       // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryFailFadeOut1P;                                        // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldParryFailPlayRate;                                     // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldParryFailFadeOut;                                      // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldParryFailPlayRate1P;                                   // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldParryFailFadeOut1P;                                    // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallPlayRate;                                        // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallFadeOut;                                         // 0x04EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallPlayRate1P;                                      // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallFadeOut1P;                                       // 0x04F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumHeldParryTime;                                      // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumHeldRiposteParryTime;                               // 0x04FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryRecoveryTime;                                         // 0x0500(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldParryRecoveryTime;                                     // 0x0504(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallRecoveryTime;                                    // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParrySuccessRecoveryTime;                                  // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeldParrySuccessRecoveryTime;                              // 0x0510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParryUpTime;                                               // 0x0514(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BlockStaminaRecover;                                       // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallStaminaDrainFactor;                              // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldWallSpeedFactor;                                     // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StunInHeldRecoveryWindow;                                  // 0x0524(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_39RV[0x10];                                    // 0x0528(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TotalBlocks;                                               // 0x0538(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBlockHoldable;                                          // 0x0539(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EParryStage                                Stage;                                                     // 0x053A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OMNY[0x1];                                     // 0x053B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ParryEnd;                                                  // 0x053C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NYHW[0x4];                                     // 0x0540(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RiposteWindowStart;                                        // 0x0544(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x0548(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauWeapon>               WeaponPtr;                                                 // 0x0550(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasQueuedMove;                                            // 0x0558(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B5PU[0x3];                                     // 0x0559(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              QueuedMoveTime;                                            // 0x055C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QueuedAngle;                                               // 0x0560(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Mordhau_EAttackMove                                QueuedMove;                                                // 0x0564(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M4WI[0x3];                                     // 0x0565(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ParryMotion");
		return ptr;
	}



};

// Class Mordhau.ParticleSystemActor
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class AParticleSystemActor : public AActor
{
public:
	unsigned char                                      UnknownData_2XG6[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             Template;                                                  // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                   // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ParticleSystemActor");
		return ptr;
	}



	void SparseTick();
};

// Class Mordhau.Perk
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UPerk : public UObject
{
public:
	struct FText                                       Name;                                                      // 0x0028(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int                                                Cost;                                                      // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KB7A[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Description;                                               // 0x0048(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Perk");
		return ptr;
	}



};

// Class Mordhau.PerkSystemComponent
// 0x0090 (FullSize[0x0140] - InheritedSize[0x00B0])
class UPerkSystemComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_TKHC[0x20];                                    // 0x00B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ButcherDamageModifier;                                     // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WreckerStructureDamageModifier;                            // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmithStructureRepairModifier;                              // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FireproofReceivedFireDamageModifier;                       // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FuryStaminaOnKill;                                         // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SecondWindExtraStaminaOnHit;                               // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AcrobatJumpStaminaCost;                                    // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RushMovementBoostDuration;                                 // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RushMovementRestrictionOverrideDuration;                   // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HuntsmanCooldown;                                          // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RatFootstepVolumeModifier;                                 // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CatFallDamageModifier;                                     // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankScale;                                                 // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankArmorSpeedFactor;                                      // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankArmorAccelerationFactor;                               // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankHealingModifier;                                       // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankReceivedDamageModifier;                                // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankVoicePitchMultiplier;                                  // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TankAttackTurncapModifier;                                 // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfScale;                                                // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfMeshZOffset;                                          // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfMeshZOffsetCrouched;                                  // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfReceivedDamageModifier;                               // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfSpeedModifier;                                        // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfVoicePitchMultiplier;                                 // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DwarfJumpVelocityMultiplier;                               // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WMBR[0x8];                                     // 0x0138(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PerkSystemComponent");
		return ptr;
	}



	void OnTakeDamage(class AAdvancedCharacter* Character, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser);
	void OnPreBeginPlay(class AMordhauCharacter* Character);
	void OnLODTick(float DeltaTime);
	void OnCharacterBuilt(class AMordhauCharacter* Character);
};

// Class Mordhau.PerspectiveTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPerspectiveTypes : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PerspectiveTypes");
		return ptr;
	}



	class UAnimMontage* STATIC_Get(const struct FPerspectiveAnimMontage& PerspectiveType, bool bIsFirstPerson);
};

// Class Mordhau.PhysicsProxy
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class APhysicsProxy : public AActor
{
public:
	TWeakObjectPtr<class AActor>                       Original;                                                  // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2O7D[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  Offset;                                                    // 0x0230(0x0030) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      SkeletalMesh;                                              // 0x0260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IdleTime;                                                  // 0x0268(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L0X3[0x4];                                     // 0x026C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PhysicsProxy");
		return ptr;
	}



};

// Class Mordhau.PhysicsVehicleAnimInstance
// 0x0018 (FullSize[0x0280] - InheritedSize[0x0268])
class UPhysicsVehicleAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_OBDP[0x8];                                     // 0x0268(0x0008) Fix Super Size
	class AVehicleBase*                                VehicleOwner;                                              // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HPQK[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PhysicsVehicleAnimInstance");
		return ptr;
	}



};

// Class Mordhau.PhysicsVehicleComponent
// 0x0030 (FullSize[0x01E0] - InheritedSize[0x01B0])
class UPhysicsVehicleComponent : public UMordhauVehicleComponent
{
public:
	struct FName                                       LeftHandIKPushTarget;                                      // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RightHandIKPushTarget;                                     // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeed;                                                  // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxRotation;                                               // 0x01C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_68F7[0x18];                                    // 0x01C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PhysicsVehicleComponent");
		return ptr;
	}



};

// Class Mordhau.PlayCharacterSound
// 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
class UPlayCharacterSound : public UAnimNotify
{
public:
	class USoundBase*                                  Sound;                                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       bone;                                                      // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Location;                                                  // 0x0048(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EAttachLocation>                AttachLocation;                                            // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttach;                                                   // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZQYN[0x2];                                     // 0x0056(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundAttenuation*                           Override;                                                  // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VolumeMultiplier;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMultiplier;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PlayCharacterSound");
		return ptr;
	}



};

// Class Mordhau.PlayerlistCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UPlayerlistCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PlayerlistCommand");
		return ptr;
	}



};

// Class Mordhau.PommelThrowDrawMotion
// 0x0028 (FullSize[0x00C8] - InheritedSize[0x00A0])
class UPommelThrowDrawMotion : public UMordhauMotion
{
public:
	class AMordhauEquipment*                           RangedEquipment;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Stage;                                                     // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2DQL[0x3];                                     // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstStageEnd;                                             // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondStageEnd;                                            // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThirdStageEnd;                                             // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFiredLocally;                                          // 0x00B8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPlaying1P;                                              // 0x00B9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C4UU[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                CurrentMontage;                                            // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PommelThrowDrawMotion");
		return ptr;
	}



};

// Class Mordhau.PommelThrowReleaseMotion
// 0x0018 (FullSize[0x00B8] - InheritedSize[0x00A0])
class UPommelThrowReleaseMotion : public UMordhauMotion
{
public:
	class AMordhauEquipment*                           RangedEquipment;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauProjectile>           CreatedLocalProjectile;                                    // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Stage;                                                     // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8TVP[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstStageEnd;                                             // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PommelThrowReleaseMotion");
		return ptr;
	}



};

// Class Mordhau.PrecomputedOcclusionDataActor
// 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
class APrecomputedOcclusionDataActor : public AActor
{
public:
	unsigned char                                      UnknownData_CIKY[0x58];                                    // 0x0220(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PrecomputedOcclusionDataActor");
		return ptr;
	}



};

// Class Mordhau.PreSkinnedPoseOracle
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class APreSkinnedPoseOracle : public AActor
{
public:
	TMap<class USkeleton*, class USkeletalMeshComponent*> SkeletonToMeshComp;                                        // 0x0220(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PreSkinnedPoseOracle");
		return ptr;
	}



};

// Class Mordhau.ProgressActor
// 0x0008 (FullSize[0x0380] - InheritedSize[0x0378])
class AProgressActor : public AMordhauActor
{
public:
	unsigned char                                      UnknownData_A6CK[0x8];                                     // 0x0378(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ProgressActor");
		return ptr;
	}



};

// Class Mordhau.ProgressDriver
// 0x0008 (FullSize[0x0380] - InheritedSize[0x0378])
class AProgressDriver : public AMordhauActor
{
public:
	unsigned char                                      UnknownData_WFTR[0x8];                                     // 0x0378(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ProgressDriver");
		return ptr;
	}



};

// Class Mordhau.ProjectileShooterComponent
// 0x01E0 (FullSize[0x0290] - InheritedSize[0x00B0])
class UProjectileShooterComponent : public UActorComponent
{
public:
	Mordhau_EWeaponState                               WeaponState;                                               // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFire;                                                   // 0x00B1(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NJ7Y[0x2];                                     // 0x00B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BuildingStageDuration;                                     // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReleasingStageDuration;                                    // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveryStageDuration;                                     // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadingStageDuration;                                    // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XV2T[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      Projectile;                                                // 0x00C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProjectileSocketName;                                      // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      NormalProjectileClass;                                     // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FireProjectileClass;                                       // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       OnProjectileFiredAttachSocket;                             // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OnProjectileFiredSoundCue;                                 // 0x00F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    OnProjectileFiredParticleSystemComponent;                  // 0x00F8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ReloadSoundAttachSocket;                                   // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ReloadSoundCue;                                            // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  FireProjectileTransform;                                   // 0x0110(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                             FireProjectileParticleSystem;                              // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FireProjectileParticleSystemScale;                         // 0x0148(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProjectileOnFireAttachSocket;                              // 0x0154(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D5QQ[0x4];                                     // 0x015C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   ProjectileOnFireSoundCue;                                  // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShakeCameraOnFire;                                        // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowDebugCameraShakeRadius;                               // 0x0169(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LCT1[0x6];                                     // 0x016A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraShakeOnFired;                                        // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeInnerRadius;                                    // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeOuterRadius;                                    // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeFalloff;                                        // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CameraOrientShakeTowardsEpicenter;                         // 0x0184(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowProjectileTrajectory;                                 // 0x0185(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1DH2[0x2];                                     // 0x0186(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ProjectileTrajectorySocketName;                            // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PredictionLaunchVelocity;                                  // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PredictionSphereScale;                                     // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSimTime;                                                // 0x0198(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PredictionGravity;                                         // 0x019C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileRadius;                                          // 0x01A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SimFrequency;                                              // 0x01A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DrawDebugTime;                                             // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTraceWithCollision;                                       // 0x01AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTraceWithChannel;                                         // 0x01AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTraceComplex;                                             // 0x01AE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NI9H[0x1];                                     // 0x01AF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   RestockSoundCue;                                           // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasAmmo;                                                  // 0x01B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WYYJ[0x3];                                     // 0x01B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AmmoReplenishInterval;                                     // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAmmo;                                                   // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Ammo;                                                      // 0x01C4(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XG3T[0x3];                                     // 0x01C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             OnFireSpawnedParticleSystem;                               // 0x01C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OnFireSpawnedSoundCue;                                     // 0x01D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                                   ProjectileOnFireMaterial;                                  // 0x01D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBuildingCompleted;                                       // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReleasingCompleted;                                      // 0x01F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRecoveryCompleted;                                       // 0x0200(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadingCompleted;                                        // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     FireEffectParticleComponent;                               // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAudioComponent>              FireEffectAudioComponent;                                  // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ProjectileParticleFX;                                      // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FireLocation;                                              // 0x0238(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    FireRotation;                                              // 0x0244(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              StageTotalTime;                                            // 0x0250(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StageRemainingTime;                                        // 0x0254(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZHOO[0x18];                                    // 0x0258(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasAddedInstances;                                        // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P09V[0x7];                                     // 0x0271(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInstancedStaticMeshComponent*               ProjectileTrajectoryInstancedMeshComponent;                // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsReplenishingAmmo;                                       // 0x0280(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6IFU[0xF];                                     // 0x0281(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ProjectileShooterComponent");
		return ptr;
	}



	void UpdateProjectileTrajectory();
	void ReplenishAmmo();
	void OnWeaponStateReleasing();
	void OnWeaponStateRecovery();
	void OnWeaponStateLoading();
	void OnWeaponStateLoaded();
	void OnWeaponStateBuilding();
	void OnVehicleDied(class AVehicleBase* Vehicle);
	void OnVehicleDestroyed(class AVehicleBase* Vehicle);
	void OnStopDriving();
	void OnRep_WeaponStateChanged();
	void OnRep_ProjectileIsOnFireChanged();
	void OnRep_AmmoChanged();
	void OnReleasingStageCompleted();
	void OnRecoveryStageCompleted();
	void OnLoadingStageCompleted();
	bool OnFirePressed();
	void OnCharacterDied(class AAdvancedCharacter* Character);
	void OnCharacterDestroyed(class AAdvancedCharacter* Character);
	void OnBuildingStageCompleted();
	void InitializeProjectileTrajectory();
	void FireProjectile();
	void ClearProjectileTrajectoryAddedInstances();
	void CheckProjectileMeshComponentReference();
};

// Class Mordhau.ProjectileArmShooterComponent
// 0x0080 (FullSize[0x0310] - InheritedSize[0x0290])
class UProjectileArmShooterComponent : public UProjectileShooterComponent
{
public:
	float                                              LoadedArmMin;                                              // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ArmAdjustmentMin;                                          // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ArmAdjustmentMax;                                          // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ArmAdjustmentStep;                                         // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ArmPullSoundAttachSocket;                                  // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   ArmPullSoundCue;                                           // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SecondaryReleaseSoundAttachSocket;                         // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SecondaryReleaseSoundCue;                                  // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RecoverySoundAttachSocket;                                 // 0x02C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   RecoveryReleaseSoundCue;                                   // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmPullSoundFadeOutDuration;                               // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      ReplicatedArm;                                             // 0x02D4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BSJS[0x3];                                     // 0x02D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ArmFrom;                                                   // 0x02D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmTarget;                                                 // 0x02DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmRaisedTimestamp;                                        // 0x02E0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmLoweredTimestamp;                                       // 0x02E4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastArmTarget;                                             // 0x02E8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UGO3[0x4];                                     // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 FiredController;                                           // 0x02F0(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmTargetInterpolationSpeed;                               // 0x02F8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastArmPullSound;                                          // 0x02FC(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AF05[0xC];                                     // 0x0304(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ProjectileArmShooterComponent");
		return ptr;
	}



	void UpdateArmTarget(class AActor* Owner, float DeltaTime);
	void UpdateArmPullSound(class AActor* CharacterOwner, float DeltaTime);
	void RaiseArm();
	void OnRaiseArmPressed();
	void OnLowerArmPressed();
	void LowerArm();
	void AdjustArm(int Delta);
};

// Class Mordhau.ProjectileTurretShooterComponent
// 0x0030 (FullSize[0x02C0] - InheritedSize[0x0290])
class UProjectileTurretShooterComponent : public UProjectileShooterComponent
{
public:
	float                                              LoadingSoundFadeOutDuration;                               // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponKickBackLookUp;                                      // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationVelocity;                                          // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationInterpolationSpeed;                                // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReplicatedTurnCap;                                         // 0x02A0(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReplicatedLookUpCap;                                       // 0x02A4(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreviousActorYaw;                                          // 0x02A8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PreviousPitch;                                             // 0x02AC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAudioComponent>              LastLoadingSound;                                          // 0x02B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q1IM[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ProjectileTurretShooterComponent");
		return ptr;
	}



	void OnRep_TurnCapChanged();
	void OnRep_LookUpCapChanged();
};

// Class Mordhau.PushableActor
// 0x0078 (FullSize[0x03F0] - InheritedSize[0x0378])
class APushableActor : public AMordhauActor
{
public:
	unsigned char                                      UnknownData_89I0[0x4];                                     // 0x0378(0x0004) Fix Super Size
	float                                              AutoMoveSpeed;                                             // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CVSL[0x8];                                     // 0x0380(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      NonPullableThresholds;                                     // 0x0388(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team1Presence;                                             // 0x0398(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Team2Presence;                                             // 0x039C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 Team1PushSpeedByPushers;                                   // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 Team2PushSpeedByPushers;                                   // 0x03A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopPushingIfContested;                                   // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C0ZX[0x7];                                     // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         PushArea;                                                  // 0x03B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProgressStepToAwardScoreFor;                               // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ScoreAwardedPerProgressStep;                               // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NetworkInterpolationSpeed;                                 // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NetworkInterpolationSpeedConstant;                         // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsNetworkInterpolationConstant;                           // 0x03D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EYCR[0x1];                                     // 0x03D1(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint16_t                                           ReplicatedProgress;                                        // 0x03D2(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Progress;                                                  // 0x03D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MD75[0x10];                                    // 0x03D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCrowdObstacleComponent*                     Obstacle;                                                  // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.PushableActor");
		return ptr;
	}



	void SetProgress(float NewProgress);
	void OnRep_ReplicatedProgress();
	void OnProgressUpdated(float OldProgress);
};

// Class Mordhau.QuickthrowDrawMotion
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UQuickthrowDrawMotion : public UMordhauMotion
{
public:
	class AMordhauEquipment*                           RangedEquipment;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Slot;                                                      // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Stage;                                                     // 0x00A9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_69YO[0x2];                                     // 0x00AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstStageEnd;                                             // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondStageEnd;                                            // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThirdStageEnd;                                             // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFiredLocally;                                          // 0x00B8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y90I[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.QuickthrowDrawMotion");
		return ptr;
	}



};

// Class Mordhau.QuickthrowReleaseMotion
// 0x0018 (FullSize[0x00B8] - InheritedSize[0x00A0])
class UQuickthrowReleaseMotion : public UMordhauMotion
{
public:
	class AMordhauEquipment*                           RangedEquipment;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauProjectile>           CreatedLocalProjectile;                                    // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Stage;                                                     // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RWN4[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstStageEnd;                                             // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.QuickthrowReleaseMotion");
		return ptr;
	}



};

// Class Mordhau.Quiver
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UQuiver : public UObject
{
public:
	struct FName                                       AttachSocketName;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  AttachSocketTransform;                                     // 0x0030(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                         QuiverMeshes;                                              // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Quiver");
		return ptr;
	}



	class UStaticMesh* FindAppropriateQuiverMesh(unsigned char Ammo, unsigned char MaxAmmo);
};

// Class Mordhau.RagdollFallingMotion
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class URagdollFallingMotion : public UMordhauMotion
{
public:
	bool                                               bIsGettingUp;                                              // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LKS6[0x7];                                     // 0x00A1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RagdollFallingMotion");
		return ptr;
	}



};

// Class Mordhau.RangedCancelMotion
// 0x0018 (FullSize[0x00B8] - InheritedSize[0x00A0])
class URangedCancelMotion : public UMordhauMotion
{
public:
	unsigned char                                      UnknownData_GJLV[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMordhauEquipment*                           RangedEquipment;                                           // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                             CurrentlyPlayingRangedCancel;                              // 0x00B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RangedCancelMotion");
		return ptr;
	}



};

// Class Mordhau.RangedDrawMotion
// 0x00B0 (FullSize[0x0150] - InheritedSize[0x00A0])
class URangedDrawMotion : public UMordhauMotion
{
public:
	unsigned char                                      UnknownData_KNCU[0x30];                                    // 0x00A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      RandomValue;                                               // 0x00D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DFBT[0x3];                                     // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    AimRotationOffset;                                         // 0x00D4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NY8Z[0xC];                                     // 0x00E0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    AimVisualRotationOffset;                                   // 0x00EC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauEquipment>            RangedEquipmentPtr;                                        // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YCQE[0x8];                                     // 0x0100(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                DrawMontage;                                               // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Draw1PMontage;                                             // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DrawEquipmentMontage;                                      // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DrawEquipment1PMontage;                                    // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentMontage;                                            // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentEquipmentMontage;                                   // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QDSU[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAudioComponent*                             CurrentlyPlayingDraw;                                      // 0x0148(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RangedDrawMotion");
		return ptr;
	}



};

// Class Mordhau.RangedReleaseMotion
// 0x0050 (FullSize[0x00F0] - InheritedSize[0x00A0])
class URangedReleaseMotion : public UMordhauMotion
{
public:
	TWeakObjectPtr<class AMordhauEquipment>            RangedEquipment;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RangedEquipmentClass;                                      // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMordhauProjectile>           CreatedLocalProjectile;                                    // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentMontage;                                            // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentEquipmentMontage;                                   // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WEZP[0x8];                                     // 0x00C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                ReleaseMontage;                                            // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Release1PMontage;                                          // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReleaseEquipmentMontage;                                   // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReleaseEquipment1PMontage;                                 // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RangedReleaseMotion");
		return ptr;
	}



};

// Class Mordhau.RconFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class URconFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RconFunctionLibrary");
		return ptr;
	}



	struct FString STATIC_GetJsonTypeAsString(TEnumAsByte<PlayFab_EPFJson> Type);
	class UPlayFabJsonObject* STATIC_GenerateResponseObject(struct FRconResponseStruct* RconResponse);
	class UPlayFabJsonObject* STATIC_GenerateRequestInfoResponseObject(struct FRconRequestInfoResponse* RconRequestInfoResponse);
	class UPlayFabJsonValue* STATIC_GenerateRconParameterValue(struct FRconParameter* RconParameter);
};

// Class Mordhau.RconTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class URconTypes : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.RconTypes");
		return ptr;
	}



};

// Class Mordhau.ReloadMotion
// 0x0050 (FullSize[0x00F0] - InheritedSize[0x00A0])
class UReloadMotion : public UMordhauMotion
{
public:
	TWeakObjectPtr<class AMordhauEquipment>            RangedEquipment;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentMontage;                                            // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CurrentEquipmentMontage;                                   // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadMontage;                                             // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Reload1PMontage;                                           // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReloadEquipmentMontage;                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Reload1PEquipmentMontage;                                  // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              CurrentReloadSound;                                        // 0x00D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X35U[0x8];                                     // 0x00E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReachTime;                                                 // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadTime;                                                // 0x00EC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ReloadMotion");
		return ptr;
	}



};

// Class Mordhau.SeparatedBodyPart
// 0x0118 (FullSize[0x0338] - InheritedSize[0x0220])
class ASeparatedBodyPart : public AActor
{
public:
	class ULODSkeletalMeshComponent*                   Mesh;                                                      // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               SkeletalMeshAsset;                                         // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APhysicsConstraintActor>      PhysicsConstraintActor;                                    // 0x0230(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AAdvancedCharacter>           SourceCharacter;                                           // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               HeadPhysicsAsset;                                          // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               LeftArmPhysicsAsset;                                       // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               LeftForearmPhysicsAsset;                                   // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               LeftHandPhysicsAsset;                                      // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RightArmPhysicsAsset;                                      // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RightForearmPhysicsAsset;                                  // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RightHandPhysicsAsset;                                     // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               LeftUpLegPhysicsAsset;                                     // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               LeftLegPhysicsAsset;                                       // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               LeftFootPhysicsAsset;                                      // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RightUpLegPhysicsAsset;                                    // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RightLegPhysicsAsset;                                      // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               RightFootPhysicsAsset;                                     // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InGoreMesh;                                                // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InGoreMeshBlunt;                                           // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InGoreMeshHead;                                            // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FakeRootBone;                                              // 0x02C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>               InstancedGoreMeshes;                                       // 0x02C8(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AE8P[0x60];                                    // 0x02D8(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SeparatedBodyPart");
		return ptr;
	}



	void OnCosmeticHit(Mordhau_EMordhauDamageType DamageType, unsigned char SubType, const struct FHitResult& Hit, class AActor* Agent);
	bool IsPartiallyDismembered();
	bool IsDismembered(const struct FName& bone);
	void InitializeDismemberment(class AMordhauCharacter* Source, const struct FName& bone, const struct FTransform& SourceBoneTransform, bool bIsPartial, bool bIsBluntForce);
};

// Class Mordhau.SeparatedBodyPartAnimInstance
// 0x0028 (FullSize[0x0290] - InheritedSize[0x0268])
class USeparatedBodyPartAnimInstance : public UAnimInstance
{
public:
	class USkeletalMeshComponent*                      CharacterMeshComponent;                                    // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLeftForeArmDismembered;                                 // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightForeArmDismembered;                                // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLeftLegDismembered;                                     // 0x0272(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightLegDismembered;                                    // 0x0273(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLeftFootDismembered;                                    // 0x0274(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightFootDismembered;                                   // 0x0275(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLeftHandDismembered;                                    // 0x0276(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRightHandDismembered;                                   // 0x0277(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsHead;                                               // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsLeftArm;                                            // 0x0279(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsLeftForeArm;                                        // 0x027A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsLeftHand;                                           // 0x027B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsRightArm;                                           // 0x027C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsRightForeArm;                                       // 0x027D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsRightHand;                                          // 0x027E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsLeftUpLeg;                                          // 0x027F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsLeftLeg;                                            // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsLeftFoot;                                           // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsRightUpLeg;                                         // 0x0282(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsRightLeg;                                           // 0x0283(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRootIsRightFoot;                                          // 0x0284(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MYM7[0xB];                                     // 0x0285(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SeparatedBodyPartAnimInstance");
		return ptr;
	}



};

// Class Mordhau.SkeletalMeshCapturePointBanner
// 0x0070 (FullSize[0x02B8] - InheritedSize[0x0248])
class ASkeletalMeshCapturePointBanner : public ACapturePointBanner
{
public:
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                             CapturingAudioComponent;                                   // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   RaisingSound;                                              // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   LoweringSound;                                             // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAddWindActor;                                             // 0x0268(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_14MR[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WindDisabledIfLessThanProgress;                            // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindStrength;                                              // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindSpeed;                                                 // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindRadius;                                                // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindMinGustAmount;                                         // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindMaxGustAmount;                                         // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentWindSpeed;                                          // 0x0284(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWindDirectionalSource*                      WindActor;                                                 // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                             WavingAudioComponent;                                      // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AudioVolumeByProgressIn;                                   // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AudioVolumeByProgressOut;                                  // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AudioPitchByProgressIn;                                    // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AudioPitchByProgressOut;                                   // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SkeletalMeshCapturePointBanner");
		return ptr;
	}



};

// Class Mordhau.SkeletalMeshMordhauActor
// 0x0008 (FullSize[0x0380] - InheritedSize[0x0378])
class ASkeletalMeshMordhauActor : public AMordhauActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SkeletalMeshMordhauActor");
		return ptr;
	}



};

// Class Mordhau.SlaveProgressDriver
// 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
class ASlaveProgressDriver : public AProgressDriver
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SlaveProgressDriver");
		return ptr;
	}



};

// Class Mordhau.SpawnActorCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class USpawnActorCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SpawnActorCommand");
		return ptr;
	}



};

// Class Mordhau.SpawnGroup
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class ASpawnGroup : public AActor
{
public:
	unsigned char                                      UnknownData_U9TM[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AMordhauPlayerStart*>                 Spawns;                                                    // 0x0228(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SpawnGroup");
		return ptr;
	}



	void SetSpawnsTeam(int NewTeam);
	void SetAreSpawnsEnabled(bool bValue);
	bool GetAreSpawnsEnabled();
};

// Class Mordhau.SplineAudio
// 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
class ASplineAudio : public AActor
{
public:
	float                                              MinDistance;                                               // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumInterpFrames;                                           // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 Curve;                                                     // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5ZA7[0x28];                                    // 0x0230(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APlayerController*                           PC;                                                        // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             Root;                                                      // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                            Spline;                                                    // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             AudioComp;                                                 // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SplineAudio");
		return ptr;
	}



	void SetCurve(class UCurveFloat* InCurve);
	void OnDeactivate();
	void OnActivate();
};

// Class Mordhau.SquadInfo
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class USquadInfo : public UDataAsset
{
public:
	bool                                               bAddToSquadPool;                                           // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ATWO[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpawnMinWave;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnMaxWave;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSquadsPerWave;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Difficulty;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DelayBeforeSpawn;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SpawnSound;                                                // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, int>                            Members;                                                   // 0x0050(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SquadInfo");
		return ptr;
	}



};

// Class Mordhau.StabMotion
// 0x0018 (FullSize[0x1108] - InheritedSize[0x10F0])
class UStabMotion : public UAttackMotion
{
public:
	struct FRotator                                    AnimAngleCueAmount;                                        // 0x10F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GMM1[0x4];                                     // 0x10FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 AnimAngleCurve;                                            // 0x1100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StabMotion");
		return ptr;
	}



};

// Class Mordhau.StaminaStatComponent
// 0x0018 (FullSize[0x00F0] - InheritedSize[0x00D8])
class UStaminaStatComponent : public UStatComponent
{
public:
	bool                                               bPlaysOutOfBreathSound;                                    // 0x00D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0KJR[0x3];                                     // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                BreathingSoundPlayBelowStamina;                            // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreathingSoundMaxDistance;                                 // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>              LastBreath;                                                // 0x00E4(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2CMZ[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StaminaStatComponent");
		return ptr;
	}



	void OnCharacterDied(class AAdvancedCharacter* Character);
};

// Class Mordhau.StaticMeshCapturePointBanner
// 0x0008 (FullSize[0x0250] - InheritedSize[0x0248])
class AStaticMeshCapturePointBanner : public ACapturePointBanner
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StaticMeshCapturePointBanner");
		return ptr;
	}



};

// Class Mordhau.StaticMeshMordhauActor
// 0x0008 (FullSize[0x0380] - InheritedSize[0x0378])
class AStaticMeshMordhauActor : public AMordhauActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StaticMeshMordhauActor");
		return ptr;
	}



};

// Class Mordhau.StrikeMotion
// 0x0070 (FullSize[0x1160] - InheritedSize[0x10F0])
class UStrikeMotion : public UAttackMotion
{
public:
	unsigned char                                      UnknownData_1TCR[0x18];                                    // 0x10F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    AnimAngleCueAmount;                                        // 0x1108(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BJC2[0x4];                                     // 0x1114(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 AnimAngleCurve;                                            // 0x1118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraEarlyReleaseForLookUpOverheads;                       // 0x1120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraEarlyReleaseForLookUpNonUndercuts;                    // 0x1124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CounterCompensateOverheadFixupTerm;                        // 0x1128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CounterCompensateOverheadFixupTiltTerm;                    // 0x112C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CounterCompensateWeight;                                   // 0x1130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTurnCompensation;                                       // 0x1134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CounterCompensateLookTime;                                 // 0x1138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AngleToReleasePortionGlanceIn;                             // 0x113C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   AngleToReleasePortionGlanceOut;                            // 0x1144(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlanceMinimumTurnAmount;                                   // 0x114C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlanceOppositeMinimumTurnAmount;                           // 0x1150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlanceBlockedMinimumTurnAmount;                            // 0x1154(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlanceBlockedOppositeMinimumTurnAmount;                    // 0x1158(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9K3K[0x4];                                     // 0x115C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StrikeMotion");
		return ptr;
	}



};

// Class Mordhau.StunMotion
// 0x0028 (FullSize[0x00C8] - InheritedSize[0x00A0])
class UStunMotion : public UMordhauMotion
{
public:
	bool                                               bWillDisarm;                                               // 0x00A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GMN3[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StunGracePeriodExtraTime;                                  // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StunDuration;                                              // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FGB8[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      StunShakeEffect;                                           // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerspectiveAnimMontage                     Animation;                                                 // 0x00B8(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.StunMotion");
		return ptr;
	}



};

// Class Mordhau.SubField
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class ASubField : public AActor
{
public:
	class UPrimitiveComponent*                         Area;                                                      // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSubFieldDeactivated;                                    // 0x0228(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSubFieldHidden;                                         // 0x0229(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X2PD[0x2];                                     // 0x022A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMasterField>                 Master;                                                    // 0x022C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S2JI[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.SubField");
		return ptr;
	}



	void SetSubFieldHidden(bool bValue);
	class AMasterField* GetMaster();
	void DeactivateSubField();
	void BeginSubFieldDeactivation();
};

// Class Mordhau.TagSystemComponent
// 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
class UTagSystemComponent : public UActorComponent
{
public:
	struct FGameplayTagContainer                       OwnTags;                                                   // 0x00B0(0x0020) (NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       Tags;                                                      // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TArray<class UTagSystemComponent*>                 ParentTagSystemComponents;                                 // 0x00F0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTagSystemComponent*>                 ChildrenTagSystemComponents;                               // 0x0100(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTagConditionDelegate>       ConditionDelegates;                                        // 0x0110(0x0010) (ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.TagSystemComponent");
		return ptr;
	}



	void SetTags(const struct FGameplayTagContainer& TagContainer);
	void RemoveTags(const struct FGameplayTagContainer& TagContainer);
	void RemoveTag(const struct FGameplayTag& Tag);
	void RegisterTagConditionDelegate(const struct FGameplayTagCondition& Condition, class UObject* Object, const struct FName& Function);
	void FlashTags(const struct FGameplayTagContainer& TagContainer);
	void FlashTag(const struct FGameplayTag& Tag);
	void AddTags(const struct FGameplayTagContainer& TagContainer);
	void AddTag(const struct FGameplayTag& Tag);
	void AddAndRemoveTags(const struct FGameplayTagContainer& TagsToAdd, const struct FGameplayTagContainer& TagsToRemove);
	void AddAndRemoveTag(const struct FGameplayTag& TagToAdd, const struct FGameplayTag& TagToRemove);
};

// Class Mordhau.TeleportCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UTeleportCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.TeleportCommand");
		return ptr;
	}



};

// Class Mordhau.TestRconCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UTestRconCommand : public URconCommand
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.TestRconCommand");
		return ptr;
	}



};

// Class Mordhau.ThudderComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UThudderComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnThud;                                                    // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bOnlyIfBoneIsSimulatingPhysics;                            // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BK3U[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         MonitoredComponent;                                        // 0x00C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MonitoredBone;                                             // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinTimeBetweenThuds;                                       // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThudMinVelocityThreshold;                                  // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NextThudTime;                                              // 0x00E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreviousVelocity;                                          // 0x00E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentVelocity;                                           // 0x00E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasValidVelocity;                                         // 0x00EC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0PEH[0x3];                                     // 0x00ED(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.ThudderComponent");
		return ptr;
	}



	void DoTick();
};

// Class Mordhau.Turret
// 0x0008 (FullSize[0x0AF0] - InheritedSize[0x0AE8])
class ATurret : public AAdvancedCharacter
{
public:
	unsigned char                                      UnknownData_Y3GO[0x8];                                     // 0x0AE8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.Turret");
		return ptr;
	}



};

// Class Mordhau.UpperChestWearable
// 0x0048 (FullSize[0x01E8] - InheritedSize[0x01A0])
class UUpperChestWearable : public UMordhauWearable
{
public:
	unsigned char                                      DefaultLowerChest;                                         // 0x01A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9YDR[0x7];                                     // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LowerChestWearables[0x10];                                 // 0x01A1(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultArms;                                               // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9G3W[0x7];                                     // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ArmsWearables[0x10];                                       // 0x01B9(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultShoulders;                                          // 0x01D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_35N8[0x7];                                     // 0x01D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ShouldersWearables[0x10];                                  // 0x01D1(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.UpperChestWearable");
		return ptr;
	}



	int GetShouldersWearablesNum();
	class UClass* GetShouldersWearable(int Index);
	int GetLowerChestWearablesNum();
	class UClass* GetLowerChestWearable(int Index);
	int GetArmsWearablesNum();
	class UClass* GetArmsWearable(int Index);
};

// Class Mordhau.VelocityBoxComponent
// 0x0048 (FullSize[0x0460] - InheritedSize[0x0418])
class UVelocityBoxComponent : public UBoxComponent
{
public:
	unsigned char                                      UnknownData_XWIO[0x4];                                     // 0x0418(0x0004) Fix Super Size
	float                                              TriggerVelocity;                                           // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseVelocityAxis;                                          // 0x0420(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0APV[0x3];                                     // 0x0421(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     VelocityAxis;                                              // 0x0424(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVelocityAxisAccountForPawnVelocity;                       // 0x0430(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UT3P[0x7];                                     // 0x0431(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTriggered;                                               // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                                     PreviousLocation;                                          // 0x0448(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentVelocity;                                           // 0x0454(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FKLS[0x8];                                     // 0x0458(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.VelocityBoxComponent");
		return ptr;
	}



};

// Class Mordhau.WebhookTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWebhookTypes : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.WebhookTypes");
		return ptr;
	}



};

// Class Mordhau.WheeledVehicleAnimInstance
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UWheeledVehicleAnimInstance : public UAdvancedCharacterAnimInstance
{
public:
	float                                              WheelCastDistance;                                         // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T7E2[0xC];                                     // 0x0334(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.WheeledVehicleAnimInstance");
		return ptr;
	}



};

// Class Mordhau.WheeledVehicleComponent
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UWheeledVehicleComponent : public UMordhauVehicleComponent
{
public:
	class AMordhauWheeledVehicle*                      WheeledVehicle;                                            // 0x01B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GCUY[0x8];                                     // 0x01B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Mordhau.WheeledVehicleComponent");
		return ptr;
	}



};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
